

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 14 16:14:21 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	swtext1,local,class=CONST,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	psect	text52,local,class=CODE,merge=1,delta=2
    64                           	psect	text53,local,class=CODE,merge=1,delta=2
    65                           	psect	pa_nodes,global,class=CODE,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  008C                     	;# 
    95  008E                     	;# 
    96  0092                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009F                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  00EE                     	;# 
   107  00EF                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  008C                     	;# 
   138  008E                     	;# 
   139  0092                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009F                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  00EE                     	;# 
   150  00EF                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  008C                     	;# 
   181  008E                     	;# 
   182  0092                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009F                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  00EE                     	;# 
   193  00EF                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  008C                     	;# 
   224  008E                     	;# 
   225  0092                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009F                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  00EE                     	;# 
   236  00EF                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  008C                     	;# 
   267  008E                     	;# 
   268  0092                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009F                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  00EE                     	;# 
   279  00EF                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000E                     	;# 
   293  000E                     	;# 
   294  000F                     	;# 
   295  0010                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0015                     	;# 
   299  0015                     	;# 
   300  0016                     	;# 
   301  0017                     	;# 
   302  0018                     	;# 
   303  0019                     	;# 
   304  001A                     	;# 
   305  001F                     	;# 
   306  0081                     	;# 
   307  0085                     	;# 
   308  0086                     	;# 
   309  008C                     	;# 
   310  008E                     	;# 
   311  0092                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009F                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  00EE                     	;# 
   322  00EF                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  008C                     	;# 
   353  008E                     	;# 
   354  0092                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009F                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  00EE                     	;# 
   365  00EF                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0015                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  008C                     	;# 
   396  008E                     	;# 
   397  0092                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009F                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  00EE                     	;# 
   408  00EF                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  008C                     	;# 
   439  008E                     	;# 
   440  0092                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009F                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  00EE                     	;# 
   451  00EF                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454                           
   455                           	psect	strings
   456  0001                     __pstrings:	
   457  0001                     stringtab:	
   458  0001                     __stringtab:	
   459                           
   460                           ;	String table - string pointers are 1 byte each
   461  0001  1BFF               	btfsc	btemp+1,7
   462  0002  280B               	ljmp	stringcode
   463  0003  1383               	bcf	3,7
   464  0004  187F               	btfsc	btemp+1,0
   465  0005  1783               	bsf	3,7
   466  0006  0800               	movf	0,w
   467  0007  0A84               	incf	4,f
   468  0008  1903               	skipnz
   469  0009  0AFF               	incf	btemp+1,f
   470  000A  0008               	return
   471  000B                     stringcode:	
   472  000B                     stringdir:	
   473  000B  3000               	movlw	high stringdir
   474  000C  008A               	movwf	10
   475  000D  0804               	movf	4,w
   476  000E  0A84               	incf	4,f
   477  000F  0782               	addwf	2,f
   478  0010                     __stringbase:	
   479  0010  3400               	retlw	0
   480  0011                     __end_of__stringtab:	
   481  0011                     _v_menu:	
   482  0011  3442               	retlw	66
   483  0012  3461               	retlw	97
   484  0013  3463               	retlw	99
   485  0014  346B               	retlw	107
   486  0015  344C               	retlw	76
   487  0016  3469               	retlw	105
   488  0017  3467               	retlw	103
   489  0018  3468               	retlw	104
   490  0019  3474               	retlw	116
   491  001A  3420               	retlw	32
   492  001B  3420               	retlw	32
   493  001C  3400               	retlw	0
   494  001D  3443               	retlw	67
   495  001E  3472               	retlw	114
   496  001F  3465               	retlw	101
   497  0020  3464               	retlw	100
   498  0021  3469               	retlw	105
   499  0022  3474               	retlw	116
   500  0023  346F               	retlw	111
   501  0024  3420               	retlw	32
   502  0025  3420               	retlw	32
   503  0026  3420               	retlw	32
   504  0027  3420               	retlw	32
   505  0028  3400               	retlw	0
   506  0029  3452               	retlw	82
   507  002A  3469               	retlw	105
   508  002B  3463               	retlw	99
   509  002C  3461               	retlw	97
   510  002D  3472               	retlw	114
   511  002E  3469               	retlw	105
   512  002F  3463               	retlw	99
   513  0030  3461               	retlw	97
   514  0031  3420               	retlw	32
   515  0032  3420               	retlw	32
   516  0033  3420               	retlw	32
   517  0034  3400               	retlw	0
   518  0035  3453               	retlw	83
   519  0036  3470               	retlw	112
   520  0037  3465               	retlw	101
   521  0038  3467               	retlw	103
   522  0039  346E               	retlw	110
   523  003A  3469               	retlw	105
   524  003B  3420               	retlw	32
   525  003C  3420               	retlw	32
   526  003D  3420               	retlw	32
   527  003E  3420               	retlw	32
   528  003F  3420               	retlw	32
   529  0040  3400               	retlw	0
   530  0041  3400               	retlw	0
   531  0042  3400               	retlw	0
   532  0043  3400               	retlw	0
   533  0044  3400               	retlw	0
   534  0045  3400               	retlw	0
   535  0046  3400               	retlw	0
   536  0047  3400               	retlw	0
   537  0048  3400               	retlw	0
   538  0049  3400               	retlw	0
   539  004A  3400               	retlw	0
   540  004B  3400               	retlw	0
   541  004C  3400               	retlw	0
   542  004D                     __end_of_v_menu:	
   543  00EE                     _SR_PORTA	set	238
   544  00EF                     _SR_PORTB	set	239
   545  00EE                     _SR_PORTAbits	set	238
   546  00EF                     _SR_PORTBbits	set	239
   547  001F                     _CMCONbits	set	31
   548  0006                     _C_PORTB	set	6
   549  0006                     _C_PORTBbits	set	6
   550  000B                     _INTCONbits	set	11
   551  0005                     _PORTA	set	5
   552  0006                     _PORTB	set	6
   553  0085                     _C_TRISAbits	set	133
   554  0086                     _C_TRISBbits	set	134
   555  009B                     _EEADR	set	155
   556  009C                     _EECON1bits	set	156
   557  009D                     _EECON2	set	157
   558  009A                     _EEDATA	set	154
   559  0085                     _TRISA	set	133
   560  0086                     _TRISB	set	134
   561  009F                     _VRCONbits	set	159
   562  004D                     STR_7:	
   563  004D  3430               	retlw	48	;'0'
   564  004E  3431               	retlw	49	;'1'
   565  004F  3432               	retlw	50	;'2'
   566  0050  3433               	retlw	51	;'3'
   567  0051  3434               	retlw	52	;'4'
   568  0052  3435               	retlw	53	;'5'
   569  0053  3436               	retlw	54	;'6'
   570  0054  3437               	retlw	55	;'7'
   571  0055  3438               	retlw	56	;'8'
   572  0056  3439               	retlw	57	;'9'
   573  0057  3441               	retlw	65	;'A'
   574  0058  3442               	retlw	66	;'B'
   575  0059  3443               	retlw	67	;'C'
   576  005A  3444               	retlw	68	;'D'
   577  005B  3445               	retlw	69	;'E'
   578  005C  3446               	retlw	70	;'F'
   579  005D  3400               	retlw	0
   580  005E                     STR_5:	
   581  005E  3420               	retlw	32	;' '
   582  005F  3420               	retlw	32	;' '
   583  0060  3420               	retlw	32	;' '
   584  0061  3420               	retlw	32	;' '
   585  0062  3420               	retlw	32	;' '
   586  0063  3420               	retlw	32	;' '
   587  0064  3420               	retlw	32	;' '
   588  0065  3420               	retlw	32	;' '
   589  0066  3420               	retlw	32	;' '
   590  0067  3420               	retlw	32	;' '
   591  0068  3420               	retlw	32	;' '
   592  0069  3420               	retlw	32	;' '
   593  006A  3400               	retlw	0
   594  006B  3400               	retlw	0
   595  006C                     STR_4:	
   596  006C  3443               	retlw	67	;'C'
   597  006D  3469               	retlw	105	;'i'
   598  006E  3420               	retlw	32	;' '
   599  006F  3473               	retlw	115	;'s'
   600  0070  346F               	retlw	111	;'o'
   601  0071  346E               	retlw	110	;'n'
   602  0072  346F               	retlw	111	;'o'
   603  0073  3420               	retlw	32	;' '
   604  0074  3400               	retlw	0
   605  0075  3400               	retlw	0
   606  0076                     STR_2:	
   607  0076  3453               	retlw	83	;'S'
   608  0077  3463               	retlw	99	;'c'
   609  0078  3472               	retlw	114	;'r'
   610  0079  3469               	retlw	105	;'i'
   611  007A  3476               	retlw	118	;'v'
   612  007B  346F               	retlw	111	;'o'
   613  007C  3420               	retlw	32	;' '
   614  007D  3400               	retlw	0
   615  007E  3400               	retlw	0
   616  007F                     STR_3:	
   617  007F  3446               	retlw	70	;'F'
   618  0080  3461               	retlw	97	;'a'
   619  0081  3474               	retlw	116	;'t'
   620  0082  3474               	retlw	116	;'t'
   621  0083  346F               	retlw	111	;'o'
   622  0084  342E               	retlw	46	;'.'
   623  0085  3400               	retlw	0
   624  0086  3400               	retlw	0
   625  0087                     STR_1:	
   626  0087  3443               	retlw	67	;'C'
   627  0088  3468               	retlw	104	;'h'
   628  0089  3465               	retlw	101	;'e'
   629  008A  3463               	retlw	99	;'c'
   630  008B  346B               	retlw	107	;'k'
   631  008C  3400               	retlw	0
   632  008D  3400               	retlw	0
   633  005E                     
   634                           ; #config settings
   635  0000                     
   636                           	psect	cinit
   637  07F9                     start_initialization:	
   638  07F9                     __initialization:	
   639  07F9  3037               	movlw	low __pbssBANK0
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07FA  1383               	bcf	3,7	;select IRP bank0
   643  07FB  0084               	movwf	4
   644  07FC  3045               	movlw	low (__pbssBANK0+14)
   645  07FD  20DA               	fcall	clear_ram0
   646  07FE                     end_of_initialization:	
   647                           ;End of C runtime variable initialization code
   648                           
   649  07FE                     __end_of__initialization:	
   650  07FE  0183               	clrf	3
   651  07FF  2D0B               	ljmp	_main	;jump to C main() function
   652                           
   653                           	psect	bssBANK0
   654  0037                     __pbssBANK0:	
   655  0037                     _v_buffer:	
   656  0037                     	ds	10
   657  0041                     _v_credito:	
   658  0041                     	ds	3
   659  0044                     _p_24c02_error:	
   660  0044                     	ds	1
   661                           
   662                           	psect	clrtext
   663  00DA                     clear_ram0:	
   664                           ;	Called with FSR containing the base address, and
   665                           ;	W with the last address+1
   666                           
   667  00DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   668  00DB                     clrloop0:	
   669  00DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   670  00DC  0A84               	incf	4,f	;increment pointer
   671  00DD  0604               	xorwf	4,w	;XOR with final address
   672  00DE  1903               	btfsc	3,2	;have we reached the end yet?
   673  00DF  3400               	retlw	0	;all done for this memory range, return
   674  00E0  0604               	xorwf	4,w	;XOR again to restore value
   675  00E1  28DB               	goto	clrloop0	;do the next byte
   676                           
   677                           	psect	cstackCOMMON
   678  0070                     __pcstackCOMMON:	
   679  0070                     ?_lcd_clear_display:	
   680  0070                     ?_lcd_goto_home:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_coges_money_value:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ??_wait_button:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_iopins_set_backlight:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ??_iopins_set_backlight:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_pic_eeprom_write:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_i2c_Detatch:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ??_i2c_Detatch:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_lcd_init:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ?_lcd_set_char:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_iopins_init:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ??_iopins_init:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ??_pic_eeprom_read:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?_print_display:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_lcd_write_data:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ?_print_err:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_print_credito:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_exec_function:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ?_print_menu:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_i2c_send_start:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ??_i2c_send_start:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_i2c_send_stop:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ??_i2c_send_stop:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_i2c_send_bit0:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ??_i2c_send_bit0:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_i2c_send_bit1:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0070                     ??_i2c_read_bit_ack:	
   759                           ; 0 bytes @ 0x0
   760                           
   761  0070                     ?_iopins_SendSignals:	
   762                           ; 0 bytes @ 0x0
   763                           
   764  0070                     ??_iopins_SendSignals:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0070                     ?_lcd_pulse:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0070                     ??_lcd_pulse:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0070                     ?_lcd_pin_lo:	
   774                           ; 0 bytes @ 0x0
   775                           
   776  0070                     ??_lcd_pin_lo:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0070                     ?_lcd_function_set_8bit:	
   780                           ; 0 bytes @ 0x0
   781                           
   782  0070                     ?_lcd_function_set_4bit:	
   783                           ; 0 bytes @ 0x0
   784                           
   785  0070                     ?_lcd_set_cg_ram_addr:	
   786                           ; 0 bytes @ 0x0
   787                           
   788  0070                     ?_lcd_set_dd_ram_addr:	
   789                           ; 0 bytes @ 0x0
   790                           
   791  0070                     ?_m24c02_send_byte:	
   792                           ; 0 bytes @ 0x0
   793                           
   794  0070                     ?_byte_code:	
   795                           ; 0 bytes @ 0x0
   796                           
   797  0070                     ?_wait_button:	
   798                           ; 0 bytes @ 0x0
   799                           
   800  0070                     ?_pic_eeprom_read:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_i2c_read_bit_ack:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?___bmul:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?___ltdiv:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?___ltmod:	
   813                           ; 3 bytes @ 0x0
   814                           
   815  0070                     i2c_send_bit1@v_pos:	
   816                           ; 3 bytes @ 0x0
   817                           
   818  0070                     iopins_set_backlight@v_val:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     byte_code@v_cr:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     coges_money_value@v_out:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     pic_eeprom_read@v_addr:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     pic_eeprom_write@v_data:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ___bmul@multiplicand:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ___ltdiv@divisor:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ___ltmod@divisor:	
   840                           ; 3 bytes @ 0x0
   841                           
   842                           
   843                           ; 3 bytes @ 0x0
   844  0070                     	ds	1
   845  0071                     ??_coges_money_value:	
   846  0071                     ??_pic_eeprom_write:	
   847                           ; 0 bytes @ 0x1
   848                           
   849  0071                     ??_i2c_send_bit1:	
   850                           ; 0 bytes @ 0x1
   851                           
   852  0071                     ?_lcd_command:	
   853                           ; 0 bytes @ 0x1
   854                           
   855  0071                     ??_lcd_function_set_8bit:	
   856                           ; 0 bytes @ 0x1
   857                           
   858  0071                     ??_lcd_function_set_4bit:	
   859                           ; 0 bytes @ 0x1
   860                           
   861  0071                     ??___bmul:	
   862                           ; 0 bytes @ 0x1
   863                           
   864  0071                     i2c_send_bit0@v_bit:	
   865                           ; 0 bytes @ 0x1
   866                           
   867  0071                     i2c_read_bit_ack@v_out:	
   868                           ; 1 bytes @ 0x1
   869                           
   870  0071                     lcd_command@RS:	
   871                           ; 1 bytes @ 0x1
   872                           
   873  0071                     byte_code@v_out:	
   874                           ; 1 bytes @ 0x1
   875                           
   876  0071                     pic_eeprom_write@v_addr:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0071                     ___bmul@product:	
   880                           ; 1 bytes @ 0x1
   881                           
   882                           
   883                           ; 1 bytes @ 0x1
   884  0071                     	ds	1
   885  0072                     ?_m24c02_read_byte:	
   886  0072                     ??_byte_code:	
   887                           ; 0 bytes @ 0x2
   888                           
   889  0072                     wait_button@v_pulsanti:	
   890                           ; 0 bytes @ 0x2
   891                           
   892  0072                     i2c_send_bit1@v_byte:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0072                     lcd_command@data:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     m24c02_read_byte@v_last_byte:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     ___bmul@multiplier:	
   902                           ; 1 bytes @ 0x2
   903                           
   904                           
   905                           ; 1 bytes @ 0x2
   906  0072                     	ds	1
   907  0073                     ??_lcd_command:	
   908  0073                     ??_m24c02_read_byte:	
   909                           ; 0 bytes @ 0x3
   910                           
   911  0073                     i2c_send_bit1@v_bit:	
   912                           ; 0 bytes @ 0x3
   913                           
   914  0073                     m24c02_read_byte@x:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ___ltdiv@dividend:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ___ltmod@dividend:	
   921                           ; 3 bytes @ 0x3
   922                           
   923                           
   924                           ; 3 bytes @ 0x3
   925  0073                     	ds	1
   926  0074                     ?_m24c02_send_device_sel:	
   927  0074                     ??_m24c02_send_byte:	
   928                           ; 0 bytes @ 0x4
   929                           
   930  0074                     lcd_command@RW:	
   931                           ; 0 bytes @ 0x4
   932                           
   933  0074                     m24c02_send_device_sel@v_Rw:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0074                     m24c02_send_byte@v_data:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     m24c02_read_byte@v_out:	
   940                           ; 1 bytes @ 0x4
   941                           
   942                           
   943                           ; 1 bytes @ 0x4
   944  0074                     	ds	1
   945  0075                     ??_m24c02_send_device_sel:	
   946  0075                     lcd_command@v_nibble:	
   947                           ; 0 bytes @ 0x5
   948                           
   949  0075                     m24c02_send_device_sel@v_device:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0075                     m24c02_send_byte@i:	
   953                           ; 1 bytes @ 0x5
   954                           
   955                           
   956                           ; 1 bytes @ 0x5
   957  0075                     	ds	1
   958  0076                     ??___ltdiv:	
   959  0076                     ??___ltmod:	
   960                           ; 0 bytes @ 0x6
   961                           
   962  0076                     lcd_command@v_ind:	
   963                           ; 0 bytes @ 0x6
   964                           
   965  0076                     m24c02_send_device_sel@i:	
   966                           ; 1 bytes @ 0x6
   967                           
   968  0076                     byte_code@v_cs:	
   969                           ; 1 bytes @ 0x6
   970                           
   971  0076                     ___ltmod@counter:	
   972                           ; 1 bytes @ 0x6
   973                           
   974  0076                     ___ltdiv@quotient:	
   975                           ; 1 bytes @ 0x6
   976                           
   977                           
   978                           ; 3 bytes @ 0x6
   979  0076                     	ds	1
   980  0077                     ??_lcd_clear_display:	
   981  0077                     ?_lcd_display_onoff_control:	
   982                           ; 0 bytes @ 0x7
   983                           
   984  0077                     ??_lcd_write_data:	
   985                           ; 0 bytes @ 0x7
   986                           
   987  0077                     ?_lcd_entry_mode_set:	
   988                           ; 0 bytes @ 0x7
   989                           
   990  0077                     ?_lcd_function_set:	
   991                           ; 0 bytes @ 0x7
   992                           
   993  0077                     ??_lcd_set_cg_ram_addr:	
   994                           ; 0 bytes @ 0x7
   995                           
   996  0077                     ??_lcd_set_dd_ram_addr:	
   997                           ; 0 bytes @ 0x7
   998                           
   999  0077                     ?_m24c02_set_random_address:	
  1000                           ; 0 bytes @ 0x7
  1001                           
  1002  0077                     ?_m24c02_sequential_current_read:	
  1003                           ; 0 bytes @ 0x7
  1004                           
  1005  0077                     lcd_entry_mode_set@S:	
  1006                           ; 0 bytes @ 0x7
  1007                           
  1008  0077                     lcd_display_onoff_control@C:	
  1009                           ; 1 bytes @ 0x7
  1010                           
  1011  0077                     lcd_function_set@N:	
  1012                           ; 1 bytes @ 0x7
  1013                           
  1014  0077                     lcd_set_cg_ram_addr@ram_addr:	
  1015                           ; 1 bytes @ 0x7
  1016                           
  1017  0077                     lcd_set_dd_ram_addr@ram_addr:	
  1018                           ; 1 bytes @ 0x7
  1019                           
  1020  0077                     lcd_write_data@data:	
  1021                           ; 1 bytes @ 0x7
  1022                           
  1023  0077                     m24c02_set_random_address@v_addr:	
  1024                           ; 1 bytes @ 0x7
  1025                           
  1026  0077                     m24c02_sequential_current_read@v_buffer:	
  1027                           ; 1 bytes @ 0x7
  1028                           
  1029  0077                     byte_code@v_ind:	
  1030                           ; 1 bytes @ 0x7
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x7
  1034  0077                     	ds	1
  1035  0078                     ?_lcd_print_s:	
  1036  0078                     ??_lcd_goto_home:	
  1037                           ; 0 bytes @ 0x8
  1038                           
  1039  0078                     ?_lcd_goto_xy:	
  1040                           ; 0 bytes @ 0x8
  1041                           
  1042  0078                     ?_coges_money_code:	
  1043                           ; 0 bytes @ 0x8
  1044                           
  1045  0078                     ??_lcd_set_char:	
  1046                           ; 0 bytes @ 0x8
  1047                           
  1048  0078                     ?_print_btn:	
  1049                           ; 0 bytes @ 0x8
  1050                           
  1051  0078                     ??_lcd_entry_mode_set:	
  1052                           ; 0 bytes @ 0x8
  1053                           
  1054  0078                     print_btn@btn_press:	
  1055                           ; 0 bytes @ 0x8
  1056                           
  1057  0078                     lcd_entry_mode_set@ID:	
  1058                           ; 1 bytes @ 0x8
  1059                           
  1060  0078                     lcd_display_onoff_control@B:	
  1061                           ; 1 bytes @ 0x8
  1062                           
  1063  0078                     lcd_function_set@F:	
  1064                           ; 1 bytes @ 0x8
  1065                           
  1066  0078                     lcd_goto_xy@v_row:	
  1067                           ; 1 bytes @ 0x8
  1068                           
  1069  0078                     m24c02_set_random_address@p_err:	
  1070                           ; 1 bytes @ 0x8
  1071                           
  1072  0078                     m24c02_sequential_current_read@v_byte:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075  0078                     lcd_print_s@message:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078  0078                     coges_money_code@v_cred:	
  1079                           ; 2 bytes @ 0x8
  1080                           
  1081                           
  1082                           ; 3 bytes @ 0x8
  1083  0078                     	ds	1
  1084  0079                     ??_lcd_goto_xy:	
  1085  0079                     ??_lcd_display_onoff_control:	
  1086                           ; 0 bytes @ 0x9
  1087                           
  1088  0079                     ??_print_btn:	
  1089                           ; 0 bytes @ 0x9
  1090                           
  1091  0079                     ??_lcd_function_set:	
  1092                           ; 0 bytes @ 0x9
  1093                           
  1094  0079                     ??_m24c02_set_random_address:	
  1095                           ; 0 bytes @ 0x9
  1096                           
  1097  0079                     print_btn@btn:	
  1098                           ; 0 bytes @ 0x9
  1099                           
  1100  0079                     lcd_set_char@v_char:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103  0079                     m24c02_set_random_address@v_device:	
  1104                           ; 1 bytes @ 0x9
  1105                           
  1106  0079                     m24c02_sequential_current_read@p_err:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109  0079                     coges_money_value@v_code:	
  1110                           ; 1 bytes @ 0x9
  1111                           
  1112  0079                     ___ltdiv@counter:	
  1113                           ; 1 bytes @ 0x9
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x9
  1117  0079                     	ds	1
  1118  007A                     ??_lcd_print_s:	
  1119  007A                     ?_coges_val_to_string:	
  1120                           ; 0 bytes @ 0xA
  1121                           
  1122  007A                     ??_print_err:	
  1123                           ; 0 bytes @ 0xA
  1124                           
  1125  007A                     ??_print_credito:	
  1126                           ; 0 bytes @ 0xA
  1127                           
  1128  007A                     ??_m24c02_sequential_current_read:	
  1129                           ; 0 bytes @ 0xA
  1130                           
  1131  007A                     print_credito@v_buffer:	
  1132                           ; 0 bytes @ 0xA
  1133                           
  1134  007A                     lcd_goto_xy@v_col:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137  007A                     lcd_set_char@v_ind:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140  007A                     m24c02_set_random_address@v_ack:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143  007A                     coges_money_value@v_ind:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146  007A                     coges_val_to_string@v_cred_hex:	
  1147                           ; 1 bytes @ 0xA
  1148                           
  1149                           
  1150                           ; 3 bytes @ 0xA
  1151  007A                     	ds	1
  1152  007B                     ??_m24c02_multibyte_write:	
  1153  007B                     ?_print_btns:	
  1154                           ; 0 bytes @ 0xB
  1155                           
  1156  007B                     print_btns@btn_1:	
  1157                           ; 0 bytes @ 0xB
  1158                           
  1159  007B                     print_menu@v_item:	
  1160                           ; 1 bytes @ 0xB
  1161                           
  1162  007B                     lcd_display_onoff_control@D:	
  1163                           ; 1 bytes @ 0xB
  1164                           
  1165  007B                     lcd_function_set@DL:	
  1166                           ; 1 bytes @ 0xB
  1167                           
  1168  007B                     coges_money_code@v_addr:	
  1169                           ; 1 bytes @ 0xB
  1170                           
  1171  007B                     coges_money_value@v_byte:	
  1172                           ; 1 bytes @ 0xB
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0xB
  1176  007B                     	ds	1
  1177  007C                     ??_m24c02_sequential_random_read:	
  1178  007C                     ??_lcd_init:	
  1179                           ; 0 bytes @ 0xC
  1180                           
  1181  007C                     print_btns@btn_0:	
  1182                           ; 0 bytes @ 0xC
  1183                           
  1184  007C                     print_menu@v_ind:	
  1185                           ; 1 bytes @ 0xC
  1186                           
  1187  007C                     m24c02_sequential_random_read@v_device:	
  1188                           ; 1 bytes @ 0xC
  1189                           
  1190  007C                     coges_money_code@v_out:	
  1191                           ; 1 bytes @ 0xC
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0xC
  1195  007C                     	ds	1
  1196  007D                     ??_coges_money_code:	
  1197  007D                     ??_print_display:	
  1198                           ; 0 bytes @ 0xD
  1199                           
  1200  007D                     print_btns@btn_press:	
  1201                           ; 0 bytes @ 0xD
  1202                           
  1203  007D                     print_display@v_menu_item:	
  1204                           ; 1 bytes @ 0xD
  1205                           
  1206  007D                     coges_val_to_string@v_out:	
  1207                           ; 1 bytes @ 0xD
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0xD
  1211  007D                     	ds	1
  1212  007E                     ??_coges_val_to_string:	
  1213  007E                     ??_print_btns:	
  1214                           ; 0 bytes @ 0xE
  1215                           
  1216  007E                     ??_read_credito:	
  1217                           ; 0 bytes @ 0xE
  1218                           
  1219  007E                     ??_main:	
  1220                           ; 0 bytes @ 0xE
  1221                           
  1222                           
  1223                           	psect	cstackBANK0
  1224  0020                     __pcstackBANK0:	
  1225                           ; 0 bytes @ 0xE
  1226                           
  1227  0020                     ?_m24c02_multibyte_write:	
  1228  0020                     ??_print_menu:	
  1229                           ; 0 bytes @ 0x0
  1230                           
  1231  0020                     print_btns@btn_2:	
  1232                           ; 0 bytes @ 0x0
  1233                           
  1234  0020                     m24c02_sequential_current_read@v_device:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0020                     m24c02_multibyte_write@v_addr:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0020                     coges_money_code@v_checksum:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0020                     coges_val_to_string@v_ind:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x0
  1248  0020                     	ds	1
  1249  0021                     m24c02_sequential_current_read@v_ack:	
  1250  0021                     m24c02_multibyte_write@v_buffer:	
  1251                           ; 1 bytes @ 0x1
  1252                           
  1253  0021                     coges_money_code@v_24b:	
  1254                           ; 1 bytes @ 0x1
  1255                           
  1256  0021                     coges_val_to_string@v:	
  1257                           ; 3 bytes @ 0x1
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x1
  1261  0021                     	ds	1
  1262  0022                     m24c02_sequential_current_read@v_ind:	
  1263  0022                     m24c02_multibyte_write@v_byte:	
  1264                           ; 1 bytes @ 0x2
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0x2
  1268  0022                     	ds	1
  1269  0023                     ?_m24c02_sequential_random_read:	
  1270  0023                     m24c02_sequential_random_read@v_addr:	
  1271                           ; 0 bytes @ 0x3
  1272                           
  1273  0023                     m24c02_multibyte_write@p_err:	
  1274                           ; 1 bytes @ 0x3
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x3
  1278  0023                     	ds	1
  1279  0024                     m24c02_sequential_random_read@v_buffer:	
  1280  0024                     m24c02_multibyte_write@v_device:	
  1281                           ; 1 bytes @ 0x4
  1282                           
  1283  0024                     coges_money_code@v_ind:	
  1284                           ; 1 bytes @ 0x4
  1285                           
  1286  0024                     coges_val_to_string@c:	
  1287                           ; 1 bytes @ 0x4
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x4
  1291  0024                     	ds	1
  1292  0025                     ?_sel_credito:	
  1293  0025                     sel_credito@v_buffer:	
  1294                           ; 0 bytes @ 0x5
  1295                           
  1296  0025                     m24c02_sequential_random_read@v_byte:	
  1297                           ; 1 bytes @ 0x5
  1298                           
  1299  0025                     m24c02_multibyte_write@v_ack:	
  1300                           ; 1 bytes @ 0x5
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x5
  1304  0025                     	ds	1
  1305  0026                     ??_sel_credito:	
  1306  0026                     m24c02_sequential_random_read@p_err:	
  1307                           ; 0 bytes @ 0x6
  1308                           
  1309  0026                     m24c02_multibyte_write@v_ind:	
  1310                           ; 1 bytes @ 0x6
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x6
  1314  0026                     	ds	1
  1315  0027                     ?_write_credito:	
  1316  0027                     ?_read_credito:	
  1317                           ; 0 bytes @ 0x7
  1318                           
  1319  0027                     read_credito@v_buffer:	
  1320                           ; 0 bytes @ 0x7
  1321                           
  1322  0027                     write_credito@v_credito:	
  1323                           ; 1 bytes @ 0x7
  1324                           
  1325                           
  1326                           ; 3 bytes @ 0x7
  1327  0027                     	ds	1
  1328  0028                     read_credito@v_credito:	
  1329                           
  1330                           ; 1 bytes @ 0x8
  1331  0028                     	ds	1
  1332  0029                     sel_credito@v_pulsante:	
  1333                           
  1334                           ; 1 bytes @ 0x9
  1335  0029                     	ds	1
  1336  002A                     ??_write_credito:	
  1337  002A                     sel_credito@v_change:	
  1338                           ; 0 bytes @ 0xA
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0xA
  1342  002A                     	ds	1
  1343  002B                     sel_credito@v_credito:	
  1344                           
  1345                           ; 1 bytes @ 0xB
  1346  002B                     	ds	1
  1347  002C                     write_credito@v_addr:	
  1348                           
  1349                           ; 1 bytes @ 0xC
  1350  002C                     	ds	1
  1351  002D                     ??_exec_function:	
  1352                           
  1353                           ; 0 bytes @ 0xD
  1354  002D                     	ds	3
  1355  0030                     exec_function@v_item:	
  1356                           
  1357                           ; 1 bytes @ 0x10
  1358  0030                     	ds	1
  1359  0031                     ?_main:	
  1360  0031                     main@argc:	
  1361                           ; 2 bytes @ 0x11
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x11
  1365  0031                     	ds	2
  1366  0033                     main@argv:	
  1367                           
  1368                           ; 2 bytes @ 0x13
  1369  0033                     	ds	2
  1370  0035                     main@v_pulsante:	
  1371                           
  1372                           ; 1 bytes @ 0x15
  1373  0035                     	ds	1
  1374  0036                     main@v_menu_item:	
  1375                           
  1376                           ; 1 bytes @ 0x16
  1377  0036                     	ds	1
  1378                           
  1379                           	psect	maintext
  1380  050B                     __pmaintext:	
  1381 ;;
  1382 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1383 ;;
  1384 ;; *************** function _main *****************
  1385 ;; Defined at:
  1386 ;;		line 276 in file "main.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  argc            2   17[BANK0 ] int 
  1389 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  v_menu_item     1   22[BANK0 ] char 
  1392 ;;  v_pulsante      1   21[BANK0 ] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  2   17[BANK0 ] int 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : B00/0
  1399 ;;		On exit  : 300/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1402 ;;      Params:         0       4       0       0
  1403 ;;      Locals:         0       2       0       0
  1404 ;;      Temps:          0       0       0       0
  1405 ;;      Totals:         0       6       0       0
  1406 ;;Total ram usage:        6 bytes
  1407 ;; Hardware stack levels required when called:    7
  1408 ;; This function calls:
  1409 ;;		_exec_function
  1410 ;;		_i2c_Detatch
  1411 ;;		_iopins_init
  1412 ;;		_iopins_set_backlight
  1413 ;;		_lcd_init
  1414 ;;		_lcd_set_char
  1415 ;;		_pic_eeprom_read
  1416 ;;		_print_btns
  1417 ;;		_print_display
  1418 ;;		_wait_button
  1419 ;; This function is called by:
  1420 ;;		Startup code after reset
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _main
  1426  050B                     _main:	
  1427                           
  1428                           ;main.c: 279: TRISA = 0xFF;
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1432  050B  30FF               	movlw	255
  1433  050C  1683               	bsf	3,5	;RP0=1, select bank1
  1434  050D  0085               	movwf	5	;volatile
  1435                           
  1436                           ;main.c: 280: TRISB = 0xFF;
  1437  050E  0086               	movwf	6	;volatile
  1438                           
  1439                           ;main.c: 283: INTCONbits.GIE = 0;
  1440  050F  138B               	bcf	11,7	;volatile
  1441                           
  1442                           ;main.c: 289: CMCONbits.CM = 0b111;
  1443  0510  3007               	movlw	7
  1444  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0512  049F               	iorwf	31,f	;volatile
  1446                           
  1447                           ;main.c: 290: VRCONbits.VREN = 0;
  1448  0513  1683               	bsf	3,5	;RP0=1, select bank1
  1449  0514  139F               	bcf	31,7	;volatile
  1450                           
  1451                           ;main.c: 293: i2c_Detatch();
  1452  0515  20A7               	fcall	_i2c_Detatch
  1453                           
  1454                           ;main.c: 297: lcd_init();
  1455  0516  248C               	fcall	_lcd_init
  1456                           
  1457                           ;main.c: 300: lcd_set_char();
  1458  0517  2258               	fcall	_lcd_set_char
  1459                           
  1460                           ;main.c: 309: iopins_init();
  1461  0518  2173               	fcall	_iopins_init
  1462                           
  1463                           ;main.c: 310: iopins_set_backlight( pic_eeprom_read( 0x78 ) );
  1464  0519  3078               	movlw	120
  1465  051A  20CB               	fcall	_pic_eeprom_read
  1466  051B  211C               	fcall	_iopins_set_backlight
  1467                           
  1468                           ;main.c: 376: signed char v_menu_item = 0x00;
  1469  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1470  051D  01B6               	clrf	main@v_menu_item
  1471  051E                     l2734:	
  1472                           
  1473                           ;main.c: 381: print_display( &v_menu_item );
  1474  051E  3036               	movlw	(low (main@v_menu_item| 0))& (0+255)
  1475  051F  20AE               	fcall	_print_display
  1476                           
  1477                           ;main.c: 384: print_btns( '\3', '\2', '\4', C_PORTBbits.BTNS );
  1478  0520  2548               	fcall	PL2	;call to abstracted procedure
  1479  0521  2224               	fcall	_print_btns
  1480                           
  1481                           ;main.c: 385: v_pulsante = wait_button();
  1482  0522  22B4               	fcall	_wait_button
  1483  0523  00B5               	movwf	main@v_pulsante
  1484                           
  1485                           ;main.c: 386: print_btns( '\3', '\2', '\4', C_PORTBbits.BTNS );
  1486  0524  2548               	fcall	PL2	;call to abstracted procedure
  1487  0525  2224               	fcall	_print_btns
  1488                           
  1489                           ;main.c: 393: switch ( v_pulsante ) {
  1490  0526  2D2E               	goto	l2750
  1491  0527                     l2742:	
  1492                           
  1493                           ;main.c: 395: v_menu_item -= 1;
  1494  0527  03B6               	decf	main@v_menu_item,f
  1495                           
  1496                           ;main.c: 396: break;
  1497  0528  2D3E               	goto	l2752
  1498  0529                     l2744:	
  1499                           
  1500                           ;main.c: 398: v_menu_item += 1;
  1501  0529  0AB6               	incf	main@v_menu_item,f
  1502                           
  1503                           ;main.c: 399: break;
  1504  052A  2D3E               	goto	l2752
  1505  052B                     l2746:	
  1506                           
  1507                           ;main.c: 401: exec_function( &v_menu_item );
  1508  052B  3036               	movlw	(low (main@v_menu_item| 0))& (0+255)
  1509  052C  26FA               	fcall	_exec_function
  1510                           
  1511                           ;main.c: 402: break;
  1512  052D  2D3E               	goto	l2752
  1513  052E                     l2750:	
  1514  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1515  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0530  0835               	movf	main@v_pulsante,w
  1517                           
  1518                           ; Switch size 1, requested type "space"
  1519                           ; Number of cases is 4, Range of values is 3 to 7
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte           13     7 (average)
  1523                           ; direct_byte           14     9 (fixed)
  1524                           ; jumptable            263     9 (fixed)
  1525                           ;	Chosen strategy is simple_byte
  1526  0531  3A03               	xorlw	3	; case 3
  1527  0532  1903               	skipnz
  1528  0533  2D2B               	goto	l2746
  1529  0534  3A06               	xorlw	6	; case 5
  1530  0535  1903               	skipnz
  1531  0536  2D29               	goto	l2744
  1532  0537  3A03               	xorlw	3	; case 6
  1533  0538  1903               	skipnz
  1534  0539  2D27               	goto	l2742
  1535  053A  3A01               	xorlw	1	; case 7
  1536  053B  1903               	skipnz
  1537  053C  2D3E               	goto	l2752
  1538  053D  2D3E               	goto	l2752
  1539  053E                     l2752:	
  1540                           
  1541                           ;main.c: 406: if ( v_menu_item > 0x03 )
  1542  053E  0836               	movf	main@v_menu_item,w
  1543  053F  3A80               	xorlw	128
  1544  0540  3E7C               	addlw	-132
  1545  0541  1803               	btfsc	3,0
  1546                           
  1547                           ;main.c: 407: v_menu_item = 0x00;
  1548  0542  01B6               	clrf	main@v_menu_item
  1549                           
  1550                           ;main.c: 408: if ( v_menu_item < 0x00 )
  1551  0543  1FB6               	btfss	main@v_menu_item,7
  1552  0544  2D1E               	goto	l2734
  1553                           
  1554                           ;main.c: 409: v_menu_item = 0x03;
  1555  0545  3003               	movlw	3
  1556  0546  00B6               	movwf	main@v_menu_item
  1557  0547  2D1E               	goto	l2734
  1558  0548                     __end_of_main:	
  1559  0548                     PL2:	
  1560  0548  3002               	movlw	2
  1561  0549  00FB               	movwf	print_btns@btn_1
  1562  054A  3004               	movlw	4
  1563  054B  00FC               	movwf	print_btns@btn_0
  1564  054C  0E06               	swapf	6,w	;volatile
  1565  054D  3907               	andlw	7
  1566  054E  00FD               	movwf	print_btns@btn_press
  1567  054F  3403               	retlw	3
  1568  0550                     __end_ofPL2:	
  1569                           
  1570                           	psect	text1
  1571  00AE                     __ptext1:	
  1572 ;; *************** function _print_display *****************
  1573 ;; Defined at:
  1574 ;;		line 41 in file "main_menu.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  v_menu_item     1    wreg     PTR char 
  1577 ;;		 -> main@v_menu_item(1), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  v_menu_item     1   13[COMMON] PTR char 
  1580 ;;		 -> main@v_menu_item(1), 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;		None               void
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 300/0
  1587 ;;		On exit  : 300/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1590 ;;      Params:         0       0       0       0
  1591 ;;      Locals:         1       0       0       0
  1592 ;;      Temps:          0       0       0       0
  1593 ;;      Totals:         1       0       0       0
  1594 ;;Total ram usage:        1 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    5
  1597 ;; This function calls:
  1598 ;;		_lcd_goto_home
  1599 ;;		_print_menu
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _print_display
  1607  00AE                     _print_display:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _print_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1611                           ;print_display@v_menu_item stored from wreg
  1612  00AE  00FD               	movwf	print_display@v_menu_item
  1613                           
  1614                           ;main_menu.c: 43: lcd_goto_home();
  1615  00AF  20A5               	fcall	_lcd_goto_home
  1616                           
  1617                           ;main_menu.c: 45: print_menu( v_menu_item );
  1618  00B0  087D               	movf	print_display@v_menu_item,w
  1619  00B1  2CCA               	ljmp	_print_menu
  1620  00B2                     __end_of_print_display:	
  1621                           
  1622                           	psect	text2
  1623  04CA                     __ptext2:	
  1624 ;; *************** function _print_menu *****************
  1625 ;; Defined at:
  1626 ;;		line 22 in file "main_menu.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  v_item          1    wreg     PTR char 
  1629 ;;		 -> main@v_menu_item(1), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  v_item          1   11[COMMON] PTR char 
  1632 ;;		 -> main@v_menu_item(1), 
  1633 ;;  v_ind           1   12[COMMON] char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 300/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1643 ;;      Params:         0       0       0       0
  1644 ;;      Locals:         2       0       0       0
  1645 ;;      Temps:          0       4       0       0
  1646 ;;      Totals:         2       4       0       0
  1647 ;;Total ram usage:        6 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    4
  1650 ;; This function calls:
  1651 ;;		___bmul
  1652 ;;		_lcd_goto_xy
  1653 ;;		_lcd_print_s
  1654 ;;		_lcd_write_data
  1655 ;; This function is called by:
  1656 ;;		_print_display
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _print_menu
  1662  04CA                     _print_menu:	
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _print_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1666                           ;print_menu@v_item stored from wreg
  1667  04CA  00FB               	movwf	print_menu@v_item
  1668                           
  1669                           ;main_menu.c: 23: signed char v_ind = 0x00;
  1670  04CB  01FC               	clrf	print_menu@v_ind
  1671                           
  1672                           ;main_menu.c: 25: for ( v_ind=0x00; v_ind<0x02; v_ind++ ) {
  1673  04CC  01FC               	clrf	print_menu@v_ind
  1674  04CD                     l2524:	
  1675                           
  1676                           ;main_menu.c: 26: lcd_goto_xy( 1, v_ind+1 );
  1677  04CD  087C               	movf	print_menu@v_ind,w
  1678  04CE  3E01               	addlw	1
  1679  04CF  00F8               	movwf	lcd_goto_xy@v_row
  1680  04D0  3001               	movlw	1
  1681  04D1  210F               	fcall	_lcd_goto_xy
  1682                           
  1683                           ;main_menu.c: 27: if ( (*v_item | v_ind) <= 0x03 ) {
  1684  04D2  087B               	movf	print_menu@v_item,w
  1685  04D3  0084               	movwf	4
  1686  04D4  1383               	bcf	3,7	;select IRP bank0
  1687  04D5  0800               	movf	0,w
  1688  04D6  047C               	iorwf	print_menu@v_ind,w
  1689  04D7  3A80               	xorlw	128
  1690  04D8  3E7C               	addlw	-132
  1691  04D9  1803               	skipnc
  1692  04DA  2CFF               	goto	l2536
  1693                           
  1694                           ;main_menu.c: 28: if ( (*v_item & 0b001) == v_ind ) {
  1695  04DB  087C               	movf	print_menu@v_ind,w
  1696  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1697  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1698  04DE  00A0               	movwf	??_print_menu
  1699  04DF  01A1               	clrf	??_print_menu+1
  1700  04E0  1BA0               	btfsc	??_print_menu,7
  1701  04E1  03A1               	decf	??_print_menu+1,f
  1702  04E2  087B               	movf	print_menu@v_item,w
  1703  04E3  0084               	movwf	4
  1704  04E4  3001               	movlw	1
  1705  04E5  0500               	andwf	0,w
  1706  04E6  00A2               	movwf	??_print_menu+2
  1707  04E7  01A3               	clrf	??_print_menu+3
  1708  04E8  0821               	movf	??_print_menu+1,w
  1709  04E9  0623               	xorwf	??_print_menu+3,w
  1710  04EA  1D03               	skipz
  1711  04EB  2CEE               	goto	u1175
  1712  04EC  0820               	movf	??_print_menu,w
  1713  04ED  0622               	xorwf	??_print_menu+2,w
  1714  04EE                     u1175:	
  1715  04EE  1D03               	skipz
  1716  04EF  2CF2               	goto	l2532
  1717                           
  1718                           ;main_menu.c: 29: lcd_write_data( '>' );
  1719  04F0  303E               	movlw	62
  1720  04F1  2CF3               	goto	L1
  1721  04F2                     l2532:	
  1722                           ;main_menu.c: 30: } else {
  1723                           
  1724                           
  1725                           ;main_menu.c: 31: lcd_write_data( ' ' );
  1726  04F2  3020               	movlw	32
  1727  04F3                     L1:	
  1728  04F3  20B7               	fcall	_lcd_write_data
  1729                           
  1730                           ;main_menu.c: 32: }
  1731                           ;main_menu.c: 33: lcd_print_s( (unsigned char *) v_menu[ ( ( *v_item & 0b11111110 ) | v_
      +                          ind ) ] );
  1732  04F4  300C               	movlw	12
  1733  04F5  00F0               	movwf	___bmul@multiplicand
  1734  04F6  087B               	movf	print_menu@v_item,w
  1735  04F7  0084               	movwf	4
  1736  04F8  1383               	bcf	3,7	;select IRP bank0
  1737  04F9  0800               	movf	0,w
  1738  04FA  39FE               	andlw	254
  1739  04FB  047C               	iorwf	print_menu@v_ind,w
  1740  04FC  212A               	fcall	___bmul
  1741  04FD  3E01               	addlw	low ((_v_menu-__stringbase)| (0+32768))
  1742  04FE  2D00               	goto	L2
  1743  04FF                     l2536:	
  1744                           ;main_menu.c: 34: } else {
  1745                           
  1746                           
  1747                           ;main_menu.c: 35: lcd_print_s( (unsigned char *) "            \0" );
  1748  04FF  304E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1749  0500                     L2:	
  1750  0500  00F8               	movwf	lcd_print_s@message
  1751  0501  3080               	movlw	128
  1752  0502  00F9               	movwf	lcd_print_s@message+1
  1753  0503  214B               	fcall	_lcd_print_s
  1754  0504  0AFC               	incf	print_menu@v_ind,f
  1755  0505  087C               	movf	print_menu@v_ind,w
  1756  0506  3A80               	xorlw	128
  1757  0507  3E7E               	addlw	-130
  1758  0508  1803               	btfsc	3,0
  1759  0509  0008               	return
  1760  050A  2CCD               	goto	l2524
  1761  050B                     __end_of_print_menu:	
  1762                           
  1763                           	psect	text3
  1764  012A                     __ptext3:	
  1765 ;; *************** function ___bmul *****************
  1766 ;; Defined at:
  1767 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul8.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  multiplier      1    wreg     unsigned char 
  1770 ;;  multiplicand    1    0[COMMON] unsigned char 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  multiplier      1    2[COMMON] unsigned char 
  1773 ;;  product         1    1[COMMON] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0
  1778 ;; Tracked objects:
  1779 ;;		On entry : 800/0
  1780 ;;		On exit  : 800/0
  1781 ;;		Unchanged: 800/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         1       0       0       0
  1784 ;;      Locals:         2       0       0       0
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         3       0       0       0
  1787 ;;Total ram usage:        3 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_print_menu
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function ___bmul
  1798  012A                     ___bmul:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1802                           ;___bmul@multiplier stored from wreg
  1803  012A  00F2               	movwf	___bmul@multiplier
  1804  012B  01F1               	clrf	___bmul@product
  1805  012C                     l2394:	
  1806  012C  0870               	movf	___bmul@multiplicand,w
  1807  012D  1872               	btfsc	___bmul@multiplier,0
  1808  012E  07F1               	addwf	___bmul@product,f
  1809  012F  1003               	clrc
  1810  0130  0DF0               	rlf	___bmul@multiplicand,f
  1811  0131  1003               	clrc
  1812  0132  0CF2               	rrf	___bmul@multiplier,f
  1813  0133  0872               	movf	___bmul@multiplier,w
  1814  0134  1D03               	btfss	3,2
  1815  0135  292C               	goto	l2394
  1816  0136  0871               	movf	___bmul@product,w
  1817  0137  0008               	return
  1818  0138                     __end_of___bmul:	
  1819                           
  1820                           	psect	text4
  1821  0258                     __ptext4:	
  1822 ;; *************** function _lcd_set_char *****************
  1823 ;; Defined at:
  1824 ;;		line 522 in file "lcd1602.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  v_ind           1   10[COMMON] unsigned char 
  1829 ;;  v_char          1    9[COMMON] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;		None               void
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/100
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1839 ;;      Params:         0       0       0       0
  1840 ;;      Locals:         2       0       0       0
  1841 ;;      Temps:          1       0       0       0
  1842 ;;      Totals:         3       0       0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    3
  1846 ;; This function calls:
  1847 ;;		_lcd_set_cg_ram_addr
  1848 ;;		_lcd_write_data
  1849 ;;		_pic_eeprom_read
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _lcd_set_char
  1857  0258                     _lcd_set_char:	
  1858  0258  3000               	movlw	0
  1859                           
  1860                           ;lcd1602.c: 525: unsigned char v_ind = 0x00;
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _lcd_set_char: [wreg+status,2+status,0+pclath+cstack]
  1864  0259  01FA               	clrf	lcd_set_char@v_ind
  1865                           
  1866                           ;lcd1602.c: 527: lcd_set_cg_ram_addr( 0x00 );
  1867  025A  20C4               	fcall	_lcd_set_cg_ram_addr
  1868                           
  1869                           ;lcd1602.c: 529: for ( v_char=0x00; v_char<5; v_char++ ) {
  1870  025B  01F9               	clrf	lcd_set_char@v_char
  1871  025C                     l2684:	
  1872                           
  1873                           ;lcd1602.c: 530: for ( v_ind=0x00; v_ind<0x08; v_ind++ ) {
  1874  025C  01FA               	clrf	lcd_set_char@v_ind
  1875  025D                     l2690:	
  1876                           
  1877                           ;lcd1602.c: 531: lcd_write_data( pic_eeprom_read( (v_char*8)+v_ind ) );
  1878  025D  0879               	movf	lcd_set_char@v_char,w
  1879  025E  00F8               	movwf	??_lcd_set_char
  1880  025F  1003               	clrc
  1881  0260  0DF8               	rlf	??_lcd_set_char,f
  1882  0261  1003               	clrc
  1883  0262  0DF8               	rlf	??_lcd_set_char,f
  1884  0263  1003               	clrc
  1885  0264  0DF8               	rlf	??_lcd_set_char,f
  1886  0265  087A               	movf	lcd_set_char@v_ind,w
  1887  0266  0778               	addwf	??_lcd_set_char,w
  1888  0267  20CB               	fcall	_pic_eeprom_read
  1889  0268  20B7               	fcall	_lcd_write_data
  1890  0269  3008               	movlw	8
  1891  026A  0AFA               	incf	lcd_set_char@v_ind,f
  1892  026B  027A               	subwf	lcd_set_char@v_ind,w
  1893  026C  1C03               	skipc
  1894  026D  2A5D               	goto	l2690
  1895  026E  3005               	movlw	5
  1896  026F  0AF9               	incf	lcd_set_char@v_char,f
  1897  0270  0279               	subwf	lcd_set_char@v_char,w
  1898  0271  1803               	btfsc	3,0
  1899  0272  0008               	return
  1900  0273  2A5C               	goto	l2684
  1901  0274                     __end_of_lcd_set_char:	
  1902                           
  1903                           	psect	text5
  1904  00CB                     __ptext5:	
  1905 ;; *************** function _pic_eeprom_read *****************
  1906 ;; Defined at:
  1907 ;;		line 10 in file "pic_eeprom.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  v_addr          1    wreg     unsigned char 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  v_addr          1    0[COMMON] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      unsigned char 
  1914 ;; Registers used:
  1915 ;;		wreg
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/100
  1918 ;;		On exit  : 300/100
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         1       0       0       0
  1923 ;;      Temps:          0       0       0       0
  1924 ;;      Totals:         1       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;;		_lcd_set_char
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _pic_eeprom_read
  1937  00CB                     _pic_eeprom_read:	
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _pic_eeprom_read: [wreg]
  1941                           ;pic_eeprom_read@v_addr stored from wreg
  1942  00CB  00F0               	movwf	pic_eeprom_read@v_addr
  1943                           
  1944                           ;pic_eeprom.c: 11: EEADR = v_addr;
  1945  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1946  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1947  00CE  009B               	movwf	27	;volatile
  1948                           
  1949                           ;pic_eeprom.c: 12: EECON1bits.RD = 1;
  1950  00CF  141C               	bsf	28,0	;volsfr
  1951                           
  1952                           ;pic_eeprom.c: 14: return EEDATA;
  1953  00D0  081A               	movf	26,w	;volatile
  1954  00D1  0008               	return
  1955  00D2                     __end_of_pic_eeprom_read:	
  1956                           
  1957                           	psect	text6
  1958  00C4                     __ptext6:	
  1959 ;; *************** function _lcd_set_cg_ram_addr *****************
  1960 ;; Defined at:
  1961 ;;		line 209 in file "lcd1602.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  ram_addr        1    wreg     unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  ram_addr        1    7[COMMON] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/100
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1975 ;;      Params:         0       0       0       0
  1976 ;;      Locals:         1       0       0       0
  1977 ;;      Temps:          0       0       0       0
  1978 ;;      Totals:         1       0       0       0
  1979 ;;Total ram usage:        1 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    2
  1982 ;; This function calls:
  1983 ;;		_lcd_command
  1984 ;; This function is called by:
  1985 ;;		_lcd_set_char
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _lcd_set_cg_ram_addr
  1991  00C4                     _lcd_set_cg_ram_addr:	
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _lcd_set_cg_ram_addr: [wreg+status,2+status,0+pclath+cstack]
  1995                           ;lcd_set_cg_ram_addr@ram_addr stored from wreg
  1996  00C4  00F7               	movwf	lcd_set_cg_ram_addr@ram_addr
  1997                           
  1998                           ;lcd1602.c: 211: lcd_command( 0, 0, 0b01000000 | (ram_addr & 0b00111111) );
  1999  00C5  01F1               	clrf	lcd_command@RS
  2000  00C6  393F               	andlw	63
  2001  00C7  3840               	iorlw	64
  2002  00C8  00F2               	movwf	lcd_command@data
  2003  00C9  3000               	movlw	0
  2004  00CA  2E41               	ljmp	_lcd_command
  2005  00CB                     __end_of_lcd_set_cg_ram_addr:	
  2006                           
  2007                           	psect	text7
  2008  048C                     __ptext7:	
  2009 ;; *************** function _lcd_init *****************
  2010 ;; Defined at:
  2011 ;;		line 414 in file "lcd1602.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;		None               void
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : B00/100
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       0       0       0
  2026 ;;      Locals:         0       0       0       0
  2027 ;;      Temps:          2       0       0       0
  2028 ;;      Totals:         2       0       0       0
  2029 ;;Total ram usage:        2 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    3
  2032 ;; This function calls:
  2033 ;;		_lcd_clear_display
  2034 ;;		_lcd_display_onoff_control
  2035 ;;		_lcd_entry_mode_set
  2036 ;;		_lcd_function_set
  2037 ;;		_lcd_function_set_4bit
  2038 ;;		_lcd_function_set_8bit
  2039 ;;		_lcd_pin_lo
  2040 ;;		_lcd_set_dd_ram_addr
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _lcd_init
  2048  048C                     _lcd_init:	
  2049                           
  2050                           ;lcd1602.c: 417: lcd_pin_lo();
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2054  048C  2187               	fcall	_lcd_pin_lo
  2055                           
  2056                           ;lcd1602.c: 421: _delay((unsigned long)((16)*(4000000.0/4000.0)));
  2057  048D  3015               	movlw	21
  2058  048E  00FD               	movwf	??_lcd_init+1
  2059  048F  30C6               	movlw	198
  2060  0490  00FC               	movwf	??_lcd_init
  2061  0491                     u1277:	
  2062  0491  0BFC               	decfsz	??_lcd_init,f
  2063  0492  2C91               	goto	u1277
  2064  0493  0BFD               	decfsz	??_lcd_init+1,f
  2065  0494  2C91               	goto	u1277
  2066  0495  0000               	nop
  2067                           
  2068                           ;lcd1602.c: 422: lcd_function_set_8bit();
  2069  0496  21DF               	fcall	_lcd_function_set_8bit
  2070                           
  2071                           ;lcd1602.c: 423: _delay((unsigned long)((5)*(4000000.0/4000.0)));
  2072  0497  3007               	movlw	7
  2073  0498  00FD               	movwf	??_lcd_init+1
  2074  0499  307D               	movlw	125
  2075  049A  00FC               	movwf	??_lcd_init
  2076  049B                     u1287:	
  2077  049B  0BFC               	decfsz	??_lcd_init,f
  2078  049C  2C9B               	goto	u1287
  2079  049D  0BFD               	decfsz	??_lcd_init+1,f
  2080  049E  2C9B               	goto	u1287
  2081                           
  2082                           ;lcd1602.c: 424: lcd_function_set_8bit();
  2083  049F  21DF               	fcall	_lcd_function_set_8bit
  2084                           
  2085                           ;lcd1602.c: 425: _delay((unsigned long)((5)*(4000000.0/4000.0)));
  2086  04A0  3007               	movlw	7
  2087  04A1  00FD               	movwf	??_lcd_init+1
  2088  04A2  307D               	movlw	125
  2089  04A3  00FC               	movwf	??_lcd_init
  2090  04A4                     u1297:	
  2091  04A4  0BFC               	decfsz	??_lcd_init,f
  2092  04A5  2CA4               	goto	u1297
  2093  04A6  0BFD               	decfsz	??_lcd_init+1,f
  2094  04A7  2CA4               	goto	u1297
  2095                           
  2096                           ;lcd1602.c: 426: lcd_function_set_8bit();
  2097  04A8  21DF               	fcall	_lcd_function_set_8bit
  2098                           
  2099                           ;lcd1602.c: 427: _delay((unsigned long)((200)*(4000000.0/4000000.0)));
  2100  04A9  3042               	movlw	66
  2101  04AA  00FC               	movwf	??_lcd_init
  2102  04AB                     u1307:	
  2103  04AB  0BFC               	decfsz	??_lcd_init,f
  2104  04AC  2CAB               	goto	u1307
  2105  04AD  0000               	nop
  2106                           
  2107                           ;lcd1602.c: 429: lcd_function_set_4bit();
  2108  04AE  2392               	fcall	_lcd_function_set_4bit
  2109  04AF  3000               	movlw	0
  2110                           
  2111                           ;lcd1602.c: 430: lcd_function_set( 0, 1, 0 );
  2112  04B0  01F7               	clrf	lcd_function_set@N
  2113  04B1  0AF7               	incf	lcd_function_set@N,f
  2114  04B2  01F8               	clrf	lcd_function_set@F
  2115  04B3  220C               	fcall	_lcd_function_set
  2116  04B4  3000               	movlw	0
  2117                           
  2118                           ;lcd1602.c: 431: lcd_display_onoff_control( 0, 1, 0 );
  2119  04B5  01F7               	clrf	lcd_display_onoff_control@C
  2120  04B6  0AF7               	incf	lcd_display_onoff_control@C,f
  2121  04B7  01F8               	clrf	lcd_display_onoff_control@B
  2122  04B8  21B3               	fcall	_lcd_display_onoff_control
  2123                           
  2124                           ;lcd1602.c: 432: lcd_clear_display();
  2125  04B9  20B2               	fcall	_lcd_clear_display
  2126  04BA  3001               	movlw	1
  2127                           
  2128                           ;lcd1602.c: 433: lcd_entry_mode_set( 1, 0 );
  2129  04BB  01F7               	clrf	lcd_entry_mode_set@S
  2130  04BC  20E2               	fcall	_lcd_entry_mode_set
  2131  04BD  3001               	movlw	1
  2132                           
  2133                           ;lcd1602.c: 435: lcd_display_onoff_control( 1, 1, 0 );
  2134  04BE  01F7               	clrf	lcd_display_onoff_control@C
  2135  04BF  0AF7               	incf	lcd_display_onoff_control@C,f
  2136  04C0  01F8               	clrf	lcd_display_onoff_control@B
  2137  04C1  21B3               	fcall	_lcd_display_onoff_control
  2138                           
  2139                           ;lcd1602.c: 436: lcd_set_dd_ram_addr( 0x00 );
  2140  04C2  3000               	movlw	0
  2141  04C3  20BD               	fcall	_lcd_set_dd_ram_addr
  2142                           
  2143                           ;lcd1602.c: 437: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2144  04C4  306D               	movlw	109
  2145  04C5  00FC               	movwf	??_lcd_init
  2146  04C6                     u1317:	
  2147  04C6  0BFC               	decfsz	??_lcd_init,f
  2148  04C7  2CC6               	goto	u1317
  2149  04C8  2CC9               	nop2	;nop
  2150  04C9  0008               	return
  2151  04CA                     __end_of_lcd_init:	
  2152                           
  2153                           	psect	text8
  2154  01DF                     __ptext8:	
  2155 ;; *************** function _lcd_function_set_8bit *****************
  2156 ;; Defined at:
  2157 ;;		line 143 in file "lcd1602.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/100
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2171 ;;      Params:         0       0       0       0
  2172 ;;      Locals:         0       0       0       0
  2173 ;;      Temps:          1       0       0       0
  2174 ;;      Totals:         1       0       0       0
  2175 ;;Total ram usage:        1 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		_lcd_pin_lo
  2180 ;;		_lcd_pulse
  2181 ;; This function is called by:
  2182 ;;		_lcd_init
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _lcd_function_set_8bit
  2188  01DF                     _lcd_function_set_8bit:	
  2189                           
  2190                           ;lcd1602.c: 148: SR_PORTAbits.RW = 0;
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _lcd_function_set_8bit: [wreg+status,2+status,0+pclath+cstack]
  2194  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2195                           
  2196                           ;lcd1602.c: 150: SR_PORTAbits.RS = 0;
  2197                           
  2198                           ;lcd1602.c: 151: SR_PORTAbits.E = 0;
  2199                           
  2200                           ;lcd1602.c: 152: PORTA = SR_PORTA;
  2201                           
  2202                           ;lcd1602.c: 155: C_TRISAbits.RW = 0;
  2203                           
  2204                           ;lcd1602.c: 157: C_TRISAbits.RS = 0;
  2205                           
  2206                           ;lcd1602.c: 158: C_TRISAbits.E = 0;
  2207  01E0  23A8               	fcall	PL8	;call to abstracted procedure
  2208                           
  2209                           ;lcd1602.c: 159: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2210  01E1  306D               	movlw	109
  2211  01E2  00F1               	movwf	??_lcd_function_set_8bit
  2212  01E3                     u1327:	
  2213  01E3  0BF1               	decfsz	??_lcd_function_set_8bit,f
  2214  01E4  29E3               	goto	u1327
  2215  01E5  29E6               	nop2	;nop
  2216                           
  2217                           ;lcd1602.c: 162: SR_PORTAbits.DATA = 0b0011;
  2218  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2219  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2220  01E8  086E               	movf	110,w	;volatile
  2221  01E9  39E1               	andlw	-31
  2222  01EA  3806               	iorlw	6
  2223                           
  2224                           ;lcd1602.c: 163: PORTA = SR_PORTA;
  2225                           
  2226                           ;lcd1602.c: 164: C_TRISAbits.DATA = 0b0011;
  2227  01EB  23B4               	fcall	PL18	;call to abstracted procedure
  2228  01EC  3806               	iorlw	6
  2229  01ED  0085               	movwf	5	;volatile
  2230                           
  2231                           ;lcd1602.c: 165: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2232  01EE  306D               	movlw	109
  2233  01EF  00F1               	movwf	??_lcd_function_set_8bit
  2234  01F0                     u1337:	
  2235  01F0  0BF1               	decfsz	??_lcd_function_set_8bit,f
  2236  01F1  29F0               	goto	u1337
  2237  01F2  29F3               	nop2	;nop
  2238                           
  2239                           ;lcd1602.c: 168: lcd_pulse();
  2240  01F3  219D               	fcall	_lcd_pulse
  2241                           
  2242                           ;lcd1602.c: 170: lcd_pin_lo();
  2243  01F4  2987               	ljmp	l1882
  2244  01F5                     __end_of_lcd_function_set_8bit:	
  2245                           
  2246                           	psect	text9
  2247  0392                     __ptext9:	
  2248 ;; *************** function _lcd_function_set_4bit *****************
  2249 ;; Defined at:
  2250 ;;		line 172 in file "lcd1602.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/100
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2264 ;;      Params:         0       0       0       0
  2265 ;;      Locals:         0       0       0       0
  2266 ;;      Temps:          1       0       0       0
  2267 ;;      Totals:         1       0       0       0
  2268 ;;Total ram usage:        1 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    1
  2271 ;; This function calls:
  2272 ;;		_lcd_pin_lo
  2273 ;;		_lcd_pulse
  2274 ;; This function is called by:
  2275 ;;		_lcd_init
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _lcd_function_set_4bit
  2281  0392                     _lcd_function_set_4bit:	
  2282                           
  2283                           ;lcd1602.c: 177: SR_PORTAbits.RW = 0;
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _lcd_function_set_4bit: [wreg+status,2+status,0+pclath+cstack]
  2287  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2288                           
  2289                           ;lcd1602.c: 179: SR_PORTAbits.RS = 0;
  2290                           
  2291                           ;lcd1602.c: 180: SR_PORTAbits.E = 0;
  2292                           
  2293                           ;lcd1602.c: 181: PORTA = SR_PORTA;
  2294                           
  2295                           ;lcd1602.c: 184: C_TRISAbits.RW = 0;
  2296                           
  2297                           ;lcd1602.c: 186: C_TRISAbits.RS = 0;
  2298                           
  2299                           ;lcd1602.c: 187: C_TRISAbits.E = 0;
  2300  0393  23A8               	fcall	PL8	;call to abstracted procedure
  2301                           
  2302                           ;lcd1602.c: 188: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2303  0394  306D               	movlw	109
  2304  0395  00F1               	movwf	??_lcd_function_set_4bit
  2305  0396                     u1347:	
  2306  0396  0BF1               	decfsz	??_lcd_function_set_4bit,f
  2307  0397  2B96               	goto	u1347
  2308  0398  2B99               	nop2	;nop
  2309                           
  2310                           ;lcd1602.c: 191: SR_PORTAbits.DATA = 0b0010;
  2311  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2312  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2313  039B  086E               	movf	110,w	;volatile
  2314  039C  39E1               	andlw	-31
  2315  039D  3804               	iorlw	4
  2316                           
  2317                           ;lcd1602.c: 192: PORTA = SR_PORTA;
  2318                           
  2319                           ;lcd1602.c: 193: C_TRISAbits.DATA = 0b0010;
  2320  039E  23B4               	fcall	PL18	;call to abstracted procedure
  2321  039F  3804               	iorlw	4
  2322  03A0  0085               	movwf	5	;volatile
  2323                           
  2324                           ;lcd1602.c: 194: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2325  03A1  306D               	movlw	109
  2326  03A2  00F1               	movwf	??_lcd_function_set_4bit
  2327  03A3                     u1357:	
  2328  03A3  0BF1               	decfsz	??_lcd_function_set_4bit,f
  2329  03A4  2BA3               	goto	u1357
  2330  03A5  2BA6               	nop2	;nop
  2331                           
  2332                           ;lcd1602.c: 197: lcd_pulse();
  2333  03A6  219D               	fcall	_lcd_pulse
  2334                           
  2335                           ;lcd1602.c: 199: lcd_pin_lo();
  2336  03A7  2987               	ljmp	l1882
  2337  03A8                     __end_of_lcd_function_set_4bit:	
  2338  03A8                     PL8:	
  2339  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2340  03A9  13EE               	bcf	110,7	;volatile
  2341  03AA  136E               	bcf	110,6	;volatile
  2342  03AB  106E               	bcf	110,0	;volatile
  2343  03AC  086E               	movf	110,w	;volatile
  2344  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2345  03AE  0085               	movwf	5	;volatile
  2346  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2347  03B0  1385               	bcf	5,7	;volatile
  2348  03B1  1305               	bcf	5,6	;volatile
  2349  03B2  1005               	bcf	5,0	;volatile
  2350  03B3  0008               	return
  2351  03B4                     __end_ofPL8:	
  2352  03B4                     PL18:	
  2353  03B4  00EE               	movwf	110	;volatile
  2354  03B5  086E               	movf	110,w	;volatile
  2355  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2356  03B7  0085               	movwf	5	;volatile
  2357  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2358  03B9  0805               	movf	5,w	;volatile
  2359  03BA  39E1               	andlw	-31
  2360  03BB  0008               	return
  2361  03BC                     __end_ofPL18:	
  2362                           
  2363                           	psect	text10
  2364  020C                     __ptext10:	
  2365 ;; *************** function _lcd_function_set *****************
  2366 ;; Defined at:
  2367 ;;		line 203 in file "lcd1602.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  DL              1    wreg     unsigned char 
  2370 ;;  N               1    7[COMMON] unsigned char 
  2371 ;;  F               1    8[COMMON] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  DL              1   11[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;		None               void
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/100
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2383 ;;      Params:         2       0       0       0
  2384 ;;      Locals:         1       0       0       0
  2385 ;;      Temps:          2       0       0       0
  2386 ;;      Totals:         5       0       0       0
  2387 ;;Total ram usage:        5 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    2
  2390 ;; This function calls:
  2391 ;;		_lcd_command
  2392 ;; This function is called by:
  2393 ;;		_lcd_init
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _lcd_function_set
  2399  020C                     _lcd_function_set:	
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _lcd_function_set: [wreg+status,2+status,0+pclath+cstack]
  2403                           ;lcd_function_set@DL stored from wreg
  2404  020C  00FB               	movwf	lcd_function_set@DL
  2405                           
  2406                           ;lcd1602.c: 205: lcd_command( 0, 0, 0b00100000 | (DL<<4) | (N<<3) | (F<<2) );
  2407  020D  01F1               	clrf	lcd_command@RS
  2408  020E  0878               	movf	lcd_function_set@F,w
  2409  020F  00F9               	movwf	??_lcd_function_set
  2410  0210  1003               	clrc
  2411  0211  0DF9               	rlf	??_lcd_function_set,f
  2412  0212  1003               	clrc
  2413  0213  0DF9               	rlf	??_lcd_function_set,f
  2414  0214  0877               	movf	lcd_function_set@N,w
  2415  0215  00FA               	movwf	??_lcd_function_set+1
  2416  0216  1003               	clrc
  2417  0217  0DFA               	rlf	??_lcd_function_set+1,f
  2418  0218  1003               	clrc
  2419  0219  0DFA               	rlf	??_lcd_function_set+1,f
  2420  021A  1003               	clrc
  2421  021B  0DFA               	rlf	??_lcd_function_set+1,f
  2422  021C  0E7B               	swapf	lcd_function_set@DL,w
  2423  021D  39F0               	andlw	240
  2424  021E  047A               	iorwf	??_lcd_function_set+1,w
  2425  021F  0479               	iorwf	??_lcd_function_set,w
  2426  0220  3820               	iorlw	32
  2427  0221  00F2               	movwf	lcd_command@data
  2428  0222  3000               	movlw	0
  2429  0223  2E41               	ljmp	_lcd_command
  2430  0224                     __end_of_lcd_function_set:	
  2431                           
  2432                           	psect	text11
  2433  00E2                     __ptext11:	
  2434 ;; *************** function _lcd_entry_mode_set *****************
  2435 ;; Defined at:
  2436 ;;		line 124 in file "lcd1602.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  ID              1    wreg     unsigned char 
  2439 ;;  S               1    7[COMMON] unsigned char 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  ID              1    8[COMMON] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;		None               void
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/100
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2451 ;;      Params:         1       0       0       0
  2452 ;;      Locals:         1       0       0       0
  2453 ;;      Temps:          0       0       0       0
  2454 ;;      Totals:         2       0       0       0
  2455 ;;Total ram usage:        2 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		_lcd_command
  2460 ;; This function is called by:
  2461 ;;		_lcd_init
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _lcd_entry_mode_set
  2467  00E2                     _lcd_entry_mode_set:	
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _lcd_entry_mode_set: [wreg+status,2+status,0+pclath+cstack]
  2471                           ;lcd_entry_mode_set@ID stored from wreg
  2472  00E2  00F8               	movwf	lcd_entry_mode_set@ID
  2473                           
  2474                           ;lcd1602.c: 126: lcd_command( 0, 0, 0b00000100 | (ID<<1) | S );
  2475  00E3  01F1               	clrf	lcd_command@RS
  2476  00E4  1003               	clrc
  2477  00E5  0D78               	rlf	lcd_entry_mode_set@ID,w
  2478  00E6  0477               	iorwf	lcd_entry_mode_set@S,w
  2479  00E7  3804               	iorlw	4
  2480  00E8  00F2               	movwf	lcd_command@data
  2481  00E9  3000               	movlw	0
  2482  00EA  2E41               	ljmp	_lcd_command
  2483  00EB                     __end_of_lcd_entry_mode_set:	
  2484                           
  2485                           	psect	text12
  2486  0173                     __ptext12:	
  2487 ;; *************** function _iopins_init *****************
  2488 ;; Defined at:
  2489 ;;		line 8 in file "io_pins.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/100
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2503 ;;      Params:         0       0       0       0
  2504 ;;      Locals:         0       0       0       0
  2505 ;;      Temps:          3       0       0       0
  2506 ;;      Totals:         3       0       0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    1
  2510 ;; This function calls:
  2511 ;;		_iopins_SendSignals
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _iopins_init
  2519  0173                     _iopins_init:	
  2520                           
  2521                           ;io_pins.c: 10: SR_PORTBbits.BACKLIGHT=0;
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _iopins_init: [wreg+status,2+status,0+pclath+cstack]
  2525  0173  1683               	bsf	3,5	;RP0=1, select bank1
  2526  0174  1303               	bcf	3,6	;RP1=0, select bank1
  2527  0175  13EF               	bcf	111,7	;volatile
  2528                           
  2529                           ;io_pins.c: 11: iopins_SendSignals();
  2530  0176  20AA               	fcall	_iopins_SendSignals
  2531                           
  2532                           ;io_pins.c: 12: C_TRISBbits.BACKLIGHT=0;
  2533  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0178  1386               	bcf	6,7	;volatile
  2535                           
  2536                           ;io_pins.c: 14: _delay((unsigned long)((250)*(4000000.0/4000.0)));
  2537  0179  3002               	movlw	2
  2538  017A  00F2               	movwf	??_iopins_init+2
  2539  017B  3045               	movlw	69
  2540  017C  00F1               	movwf	??_iopins_init+1
  2541  017D  30A9               	movlw	169
  2542  017E  00F0               	movwf	??_iopins_init
  2543  017F                     u1367:	
  2544  017F  0BF0               	decfsz	??_iopins_init,f
  2545  0180  297F               	goto	u1367
  2546  0181  0BF1               	decfsz	??_iopins_init+1,f
  2547  0182  297F               	goto	u1367
  2548  0183  0BF2               	decfsz	??_iopins_init+2,f
  2549  0184  297F               	goto	u1367
  2550  0185  2986               	nop2
  2551  0186  0008               	return
  2552  0187                     __end_of_iopins_init:	
  2553                           
  2554                           	psect	text13
  2555  00A7                     __ptext13:	
  2556 ;; *************** function _i2c_Detatch *****************
  2557 ;; Defined at:
  2558 ;;		line 49 in file "i2c.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : B00/100
  2569 ;;		On exit  : B00/100
  2570 ;;		Unchanged: 800/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2572 ;;      Params:         0       0       0       0
  2573 ;;      Locals:         0       0       0       0
  2574 ;;      Temps:          0       0       0       0
  2575 ;;      Totals:         0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _i2c_Detatch
  2587  00A7                     _i2c_Detatch:	
  2588                           
  2589                           ;i2c.c: 54: C_TRISBbits.BUS=3;
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _i2c_Detatch: [wreg+status,2+status,0]
  2593  00A7  300C               	movlw	12
  2594  00A8  0486               	iorwf	6,f	;volatile
  2595  00A9  0008               	return
  2596  00AA                     __end_of_i2c_Detatch:	
  2597                           
  2598                           	psect	text14
  2599  06FA                     __ptext14:	
  2600 ;; *************** function _exec_function *****************
  2601 ;; Defined at:
  2602 ;;		line 220 in file "main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  v_item          1    wreg     PTR char 
  2605 ;;		 -> main@v_menu_item(1), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  v_item          1   16[BANK0 ] PTR char 
  2608 ;;		 -> main@v_menu_item(1), 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 300/0
  2615 ;;		On exit  : 300/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2618 ;;      Params:         0       0       0       0
  2619 ;;      Locals:         0       1       0       0
  2620 ;;      Temps:          0       3       0       0
  2621 ;;      Totals:         0       4       0       0
  2622 ;;Total ram usage:        4 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    6
  2625 ;; This function calls:
  2626 ;;		_iopins_set_backlight
  2627 ;;		_lcd_clear_display
  2628 ;;		_lcd_display_onoff_control
  2629 ;;		_pic_eeprom_write
  2630 ;;		_print_credito
  2631 ;;		_print_err
  2632 ;;		_read_credito
  2633 ;;		_sel_credito
  2634 ;;		_write_credito
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function _exec_function
  2642  06FA                     _exec_function:	
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in _exec_function: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2646                           ;exec_function@v_item stored from wreg
  2647  06FA  00B0               	movwf	exec_function@v_item
  2648                           
  2649                           ;main.c: 222: switch ( *v_item ) {
  2650  06FB  2F53               	goto	l2632
  2651  06FC                     l106:	
  2652                           ;main.c: 223: case 0x00:
  2653                           
  2654                           
  2655                           ;main.c: 224: if ( SR_PORTBbits.BACKLIGHT ) {
  2656  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2657  06FD  1FEF               	btfss	111,7	;volatile
  2658  06FE  2F02               	goto	l2592
  2659                           
  2660                           ;main.c: 225: iopins_set_backlight( 0x00 );
  2661  06FF  3000               	movlw	0
  2662  0700  211C               	fcall	_iopins_set_backlight
  2663                           
  2664                           ;main.c: 226: } else {
  2665  0701  2F61               	goto	l2634
  2666  0702                     l2592:	
  2667                           
  2668                           ;main.c: 227: iopins_set_backlight( 0x01 );
  2669  0702  3001               	movlw	1
  2670  0703  211C               	fcall	_iopins_set_backlight
  2671  0704  2F61               	goto	l2634
  2672  0705                     l2594:	
  2673                           
  2674                           ;main.c: 231: read_credito( &v_credito, v_buffer );
  2675  0705  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2676  0706  00A7               	movwf	read_credito@v_buffer
  2677  0707  3041               	movlw	(low (_v_credito| 0))& (0+255)
  2678  0708  22F7               	fcall	_read_credito
  2679                           
  2680                           ;main.c: 232: if ( p_24c02_error == 0x00 ) {
  2681  0709  0844               	movf	_p_24c02_error,w
  2682  070A  1D03               	btfss	3,2
  2683  070B  2F1B               	goto	l2602
  2684                           
  2685                           ;main.c: 233: print_credito( v_buffer );
  2686  070C  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2687  070D  20F6               	fcall	_print_credito
  2688  070E                     l2600:	
  2689                           
  2690                           ;main.c: 234: _delay((unsigned long)((2500)*(4000000.0/4000.0)));
  2691  070E  300D               	movlw	13
  2692  070F  00AF               	movwf	??_exec_function+2
  2693  0710  30AF               	movlw	175
  2694  0711  00AE               	movwf	??_exec_function+1
  2695  0712  30C1               	movlw	193
  2696  0713  00AD               	movwf	??_exec_function
  2697  0714                     u1377:	
  2698  0714  0BAD               	decfsz	??_exec_function,f
  2699  0715  2F14               	goto	u1377
  2700  0716  0BAE               	decfsz	??_exec_function+1,f
  2701  0717  2F14               	goto	u1377
  2702  0718  0BAF               	decfsz	??_exec_function+2,f
  2703  0719  2F14               	goto	u1377
  2704  071A  0000               	nop
  2705  071B                     l2602:	
  2706                           
  2707                           ;main.c: 235: }
  2708                           ;main.c: 236: lcd_clear_display();
  2709  071B  20B2               	fcall	_lcd_clear_display
  2710                           
  2711                           ;main.c: 237: break;
  2712  071C  2F61               	goto	l2634
  2713  071D                     l2604:	
  2714                           
  2715                           ;main.c: 239: read_credito( &v_credito, v_buffer );
  2716  071D  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2717  071E  00A7               	movwf	read_credito@v_buffer
  2718  071F  3041               	movlw	(low (_v_credito| 0))& (0+255)
  2719  0720  22F7               	fcall	_read_credito
  2720                           
  2721                           ;main.c: 240: if ( p_24c02_error == 0x00 ) {
  2722  0721  0844               	movf	_p_24c02_error,w
  2723  0722  1D03               	btfss	3,2
  2724  0723  2F1B               	goto	l2602
  2725                           
  2726                           ;main.c: 241: print_credito( v_buffer );
  2727  0724  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2728  0725  20F6               	fcall	_print_credito
  2729                           
  2730                           ;main.c: 242: sel_credito( &v_credito, v_buffer );
  2731  0726  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2732  0727  00A5               	movwf	sel_credito@v_buffer
  2733  0728  3041               	movlw	(low (_v_credito| 0))& (0+255)
  2734  0729  276B               	fcall	_sel_credito
  2735                           
  2736                           ;main.c: 243: write_credito( v_credito );
  2737  072A  0841               	movf	_v_credito,w
  2738  072B  00A7               	movwf	write_credito@v_credito
  2739  072C  0842               	movf	_v_credito+1,w
  2740  072D  00A8               	movwf	write_credito@v_credito+1
  2741  072E  0843               	movf	_v_credito+2,w
  2742  072F  00A9               	movwf	write_credito@v_credito+2
  2743  0730  2550               	fcall	_write_credito
  2744  0731  2F0E               	goto	l2600
  2745  0732                     l2614:	
  2746                           
  2747                           ;main.c: 250: pic_eeprom_write( 0x78, C_TRISBbits.BACKLIGHT );
  2748  0732  3000               	movlw	0
  2749  0733  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0734  1B86               	btfsc	6,7	;volatile
  2751  0735  3001               	movlw	1
  2752  0736  00F0               	movwf	pic_eeprom_write@v_data
  2753  0737  3078               	movlw	120
  2754  0738  20EB               	fcall	_pic_eeprom_write
  2755                           
  2756                           ;main.c: 252: iopins_set_backlight( 0x00 );
  2757  0739  3000               	movlw	0
  2758  073A  211C               	fcall	_iopins_set_backlight
  2759  073B  3000               	movlw	0
  2760                           
  2761                           ;main.c: 253: lcd_display_onoff_control( 0, 0, 0 );
  2762  073C  01F7               	clrf	lcd_display_onoff_control@C
  2763  073D  01F8               	clrf	lcd_display_onoff_control@B
  2764  073E  21B3               	fcall	_lcd_display_onoff_control
  2765                           
  2766                           ;main.c: 254: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  2767  073F  306D               	movlw	109
  2768  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0742  00AD               	movwf	??_exec_function
  2771  0743                     u1387:	
  2772  0743  0BAD               	decfsz	??_exec_function,f
  2773  0744  2F43               	goto	u1387
  2774  0745  2F46               	nop2	;nop
  2775                           
  2776                           ;main.c: 255: C_TRISAbits.DATA = 0b1111;
  2777  0746  301E               	movlw	30
  2778  0747  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0748  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0749  0485               	iorwf	5,f	;volatile
  2781                           
  2782                           ;main.c: 256: C_TRISAbits.E = 0b1;
  2783  074A  1405               	bsf	5,0	;volatile
  2784                           
  2785                           ;main.c: 257: C_TRISAbits.RS = 0b1;
  2786  074B  1705               	bsf	5,6	;volatile
  2787                           
  2788                           ;main.c: 258: C_TRISAbits.RW = 0b1;
  2789  074C  1785               	bsf	5,7	;volatile
  2790                           
  2791                           ;main.c: 259: C_TRISBbits.BTNS = 0b111;
  2792  074D  3070               	movlw	112
  2793  074E  0486               	iorwf	6,f	;volatile
  2794                           
  2795                           ;main.c: 261: C_TRISBbits.BUS = 0b11;
  2796  074F  300C               	movlw	12
  2797  0750  0486               	iorwf	6,f	;volatile
  2798  0751  0063               	sleep	;# 
  2799                           
  2800                           ;main.c: 264: break;
  2801  0752  2F61               	goto	l2634
  2802  0753                     l2632:	
  2803  0753  0830               	movf	exec_function@v_item,w
  2804  0754  0084               	movwf	4
  2805  0755  1383               	bcf	3,7	;select IRP bank0
  2806  0756  0800               	movf	0,w
  2807                           
  2808                           ; Switch size 1, requested type "space"
  2809                           ; Number of cases is 4, Range of values is 0 to 3
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; direct_byte           10     6 (fixed)
  2813                           ; simple_byte           13     7 (average)
  2814                           ; jumptable            260     6 (fixed)
  2815                           ;	Chosen strategy is direct_byte
  2816  0757  0084               	movwf	4
  2817  0758  3004               	movlw	4
  2818  0759  0204               	subwf	4,w
  2819  075A  1803               	skipnc
  2820  075B  2F61               	goto	l2634
  2821  075C  3000               	movlw	high S2790
  2822  075D  008A               	movwf	10
  2823  075E  308E               	movlw	low S2790
  2824  075F  0704               	addwf	4,w
  2825  0760  0082               	movwf	2
  2826  0761                     l2634:	
  2827                           
  2828                           ;main.c: 267: if ( p_24c02_error != 0x00 ) {
  2829  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0762  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0763  0844               	movf	_p_24c02_error,w
  2832  0764  1903               	btfsc	3,2
  2833  0765  0008               	return
  2834                           
  2835                           ;main.c: 268: print_err();
  2836  0766  2138               	fcall	_print_err
  2837                           
  2838                           ;main.c: 269: p_24c02_error = 0x00;
  2839  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0769  01C4               	clrf	_p_24c02_error
  2842  076A  0008               	return
  2843  076B                     __end_of_exec_function:	
  2844                           
  2845                           	psect	swtext1
  2846  008E                     __pswtext1:	
  2847  008E                     S2790:	
  2848  008E  2EFC               	ljmp	l106
  2849  008F  2F05               	ljmp	l2594
  2850  0090  2F1D               	ljmp	l2604
  2851  0091  2F32               	ljmp	l2614
  2852                           
  2853                           	psect	text15
  2854  0550                     __ptext15:	
  2855 ;; *************** function _write_credito *****************
  2856 ;; Defined at:
  2857 ;;		line 75 in file "main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  v_credito       3    7[BANK0 ] unsigned um
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  v_addr          1   12[BANK0 ] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 300/0
  2868 ;;		On exit  : 300/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2871 ;;      Params:         0       3       0       0
  2872 ;;      Locals:         0       1       0       0
  2873 ;;      Temps:          0       2       0       0
  2874 ;;      Totals:         0       6       0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    4
  2878 ;; This function calls:
  2879 ;;		_coges_money_code
  2880 ;;		_coges_val_to_string
  2881 ;;		_lcd_clear_display
  2882 ;;		_lcd_goto_home
  2883 ;;		_lcd_goto_xy
  2884 ;;		_lcd_print_s
  2885 ;;		_m24c02_multibyte_write
  2886 ;; This function is called by:
  2887 ;;		_exec_function
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _write_credito
  2893  0550                     _write_credito:	
  2894                           
  2895                           ;main.c: 78: lcd_clear_display();
  2896                           
  2897                           ;incstack = 0
  2898                           ; Regs used in _write_credito: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2899  0550  20B2               	fcall	_lcd_clear_display
  2900                           
  2901                           ;main.c: 79: lcd_goto_home();
  2902  0551  20A5               	fcall	_lcd_goto_home
  2903                           
  2904                           ;main.c: 81: lcd_print_s( (unsigned char *) "Scrivo \0" );
  2905  0552  3066               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2906  0553  00F8               	movwf	lcd_print_s@message
  2907  0554  3080               	movlw	128
  2908  0555  00F9               	movwf	lcd_print_s@message+1
  2909  0556  214B               	fcall	_lcd_print_s
  2910                           
  2911                           ;main.c: 82: coges_val_to_string( v_credito, v_buffer );
  2912  0557  0827               	movf	write_credito@v_credito,w
  2913  0558  00FA               	movwf	coges_val_to_string@v_cred_hex
  2914  0559  0828               	movf	write_credito@v_credito+1,w
  2915  055A  00FB               	movwf	coges_val_to_string@v_cred_hex+1
  2916  055B  0829               	movf	write_credito@v_credito+2,w
  2917  055C  00FC               	movwf	coges_val_to_string@v_cred_hex+2
  2918  055D  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2919  055E  00FD               	movwf	coges_val_to_string@v_out
  2920  055F  2694               	fcall	_coges_val_to_string
  2921                           
  2922                           ;main.c: 83: lcd_print_s( v_buffer );
  2923  0560  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2924  0561  00F8               	movwf	lcd_print_s@message
  2925  0562  01F9               	clrf	lcd_print_s@message+1
  2926  0563  214B               	fcall	_lcd_print_s
  2927                           
  2928                           ;main.c: 85: lcd_goto_xy(1,2);
  2929  0564  3002               	movlw	2
  2930  0565  00F8               	movwf	lcd_goto_xy@v_row
  2931  0566  3001               	movlw	1
  2932  0567  210F               	fcall	_lcd_goto_xy
  2933                           
  2934                           ;main.c: 87: for ( v_addr=0x44; v_addr<=0x54 & p_24c02_error==0x00; v_addr+=0x10 ) {
  2935  0568  3044               	movlw	68
  2936  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2937  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2938  056B  00AC               	movwf	write_credito@v_addr
  2939  056C  2D93               	goto	l2432
  2940  056D                     l2434:	
  2941  056D  0844               	movf	_p_24c02_error,w
  2942  056E  1D03               	btfss	3,2
  2943  056F  2D97               	goto	l2436
  2944                           
  2945                           ;main.c: 88: coges_money_code( v_credito, v_addr, v_buffer );
  2946  0570  0827               	movf	write_credito@v_credito,w
  2947  0571  00F8               	movwf	coges_money_code@v_cred
  2948  0572  0828               	movf	write_credito@v_credito+1,w
  2949  0573  00F9               	movwf	coges_money_code@v_cred+1
  2950  0574  0829               	movf	write_credito@v_credito+2,w
  2951  0575  00FA               	movwf	coges_money_code@v_cred+2
  2952  0576  082C               	movf	write_credito@v_addr,w
  2953  0577  00FB               	movwf	coges_money_code@v_addr
  2954  0578  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2955  0579  00FC               	movwf	coges_money_code@v_out
  2956  057A  23BC               	fcall	_coges_money_code
  2957                           
  2958                           ;main.c: 89: m24c02_multibyte_write( 0x00, v_addr, v_buffer , 4, &p_24c02_error );
  2959  057B  082C               	movf	write_credito@v_addr,w
  2960  057C  00A0               	movwf	m24c02_multibyte_write@v_addr
  2961  057D  3037               	movlw	(low (_v_buffer| 0))& (0+255)
  2962  057E  00A1               	movwf	m24c02_multibyte_write@v_buffer
  2963  057F  3004               	movlw	4
  2964  0580  00A2               	movwf	m24c02_multibyte_write@v_byte
  2965  0581  3044               	movlw	(low (_p_24c02_error| 0))& (0+255)
  2966  0582  00A3               	movwf	m24c02_multibyte_write@p_err
  2967  0583  3000               	movlw	0
  2968  0584  2340               	fcall	_m24c02_multibyte_write
  2969                           
  2970                           ;main.c: 91: _delay((unsigned long)((5)*(4000000.0/4000.0)));
  2971  0585  3007               	movlw	7
  2972  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0588  00AB               	movwf	??_write_credito+1
  2975  0589  307D               	movlw	125
  2976  058A  00AA               	movwf	??_write_credito
  2977  058B                     u1397:	
  2978  058B  0BAA               	decfsz	??_write_credito,f
  2979  058C  2D8B               	goto	u1397
  2980  058D  0BAB               	decfsz	??_write_credito+1,f
  2981  058E  2D8B               	goto	u1397
  2982  058F  3010               	movlw	16
  2983  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0592  07AC               	addwf	write_credito@v_addr,f
  2986  0593                     l2432:	
  2987  0593  3055               	movlw	85
  2988  0594  022C               	subwf	write_credito@v_addr,w
  2989  0595  1C03               	btfss	3,0
  2990  0596  2D6D               	goto	l2434
  2991  0597                     l2436:	
  2992                           
  2993                           ;main.c: 92: }
  2994                           ;main.c: 93: if ( p_24c02_error==0x00 )
  2995  0597  0844               	movf	_p_24c02_error,w
  2996  0598  1D03               	btfss	3,2
  2997  0599  0008               	return
  2998                           
  2999                           ;main.c: 94: lcd_print_s( (unsigned char *) "Fatto.\0" );
  3000  059A  306F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3001  059B  00F8               	movwf	lcd_print_s@message
  3002  059C  3080               	movlw	128
  3003  059D  00F9               	movwf	lcd_print_s@message+1
  3004  059E  294B               	ljmp	l2232
  3005  059F                     __end_of_write_credito:	
  3006                           
  3007                           	psect	text16
  3008  0340                     __ptext16:	
  3009 ;; *************** function _m24c02_multibyte_write *****************
  3010 ;; Defined at:
  3011 ;;		line 166 in file "m24c02.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  v_device        1    wreg     unsigned char 
  3014 ;;  v_addr          1    0[BANK0 ] unsigned char 
  3015 ;;  v_buffer        1    1[BANK0 ] PTR unsigned char 
  3016 ;;		 -> v_buffer(10), 
  3017 ;;  v_byte          1    2[BANK0 ] unsigned char 
  3018 ;;  p_err           1    3[BANK0 ] PTR unsigned char 
  3019 ;;		 -> p_24c02_error(1), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  v_device        1    4[BANK0 ] unsigned char 
  3022 ;;  v_ind           1    6[BANK0 ] unsigned char 
  3023 ;;  v_ack           1    5[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;		None               void
  3026 ;; Registers used:
  3027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : B00/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3033 ;;      Params:         0       4       0       0
  3034 ;;      Locals:         0       3       0       0
  3035 ;;      Temps:          1       0       0       0
  3036 ;;      Totals:         1       7       0       0
  3037 ;;Total ram usage:        8 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		_i2c_read_bit_ack
  3042 ;;		_i2c_send_stop
  3043 ;;		_m24c02_send_byte
  3044 ;;		_m24c02_set_random_address
  3045 ;; This function is called by:
  3046 ;;		_write_credito
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _m24c02_multibyte_write
  3052  0340                     _m24c02_multibyte_write:	
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _m24c02_multibyte_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3056                           ;m24c02_multibyte_write@v_device stored from wreg
  3057  0340  00A4               	movwf	m24c02_multibyte_write@v_device
  3058                           
  3059                           ;m24c02.c: 169: unsigned char v_ind = 0x00;
  3060  0341  01A6               	clrf	m24c02_multibyte_write@v_ind
  3061                           
  3062                           ;m24c02.c: 171: *p_err = 0x00;
  3063  0342  0823               	movf	m24c02_multibyte_write@p_err,w
  3064  0343  0084               	movwf	4
  3065  0344  0180               	clrf	0
  3066                           
  3067                           ;m24c02.c: 173: m24c02_set_random_address( v_device, v_addr, p_err );
  3068  0345  0820               	movf	m24c02_multibyte_write@v_addr,w
  3069  0346  00F7               	movwf	m24c02_set_random_address@v_addr
  3070  0347  0823               	movf	m24c02_multibyte_write@p_err,w
  3071  0348  00F8               	movwf	m24c02_set_random_address@p_err
  3072  0349  0824               	movf	m24c02_multibyte_write@v_device,w
  3073  034A  2294               	fcall	_m24c02_set_random_address
  3074                           
  3075                           ;m24c02.c: 175: for ( v_ind=0; v_ind<v_byte; v_ind++ ) {
  3076  034B  1283               	bcf	3,5	;RP0=0, select bank0
  3077  034C  1303               	bcf	3,6	;RP1=0, select bank0
  3078  034D  01A6               	clrf	m24c02_multibyte_write@v_ind
  3079  034E                     l2336:	
  3080  034E  0822               	movf	m24c02_multibyte_write@v_byte,w
  3081  034F  0226               	subwf	m24c02_multibyte_write@v_ind,w
  3082  0350  1803               	btfsc	3,0
  3083  0351  2B65               	goto	l2330
  3084                           
  3085                           ;m24c02.c: 177: m24c02_send_byte(*(v_buffer + v_ind));
  3086  0352  0826               	movf	m24c02_multibyte_write@v_ind,w
  3087  0353  0721               	addwf	m24c02_multibyte_write@v_buffer,w
  3088  0354  00FB               	movwf	??_m24c02_multibyte_write
  3089  0355  0084               	movwf	4
  3090  0356  1383               	bcf	3,7	;select IRP bank0
  3091  0357  0800               	movf	0,w
  3092  0358  2102               	fcall	_m24c02_send_byte
  3093                           
  3094                           ;m24c02.c: 179: v_ack = i2c_read_bit_ack();
  3095  0359  22D4               	fcall	_i2c_read_bit_ack
  3096  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3097  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3098  035C  00A5               	movwf	m24c02_multibyte_write@v_ack
  3099                           
  3100                           ;m24c02.c: 180: if ( v_ack != 0x00 ) {
  3101  035D  0825               	movf	m24c02_multibyte_write@v_ack,w
  3102  035E  1903               	btfsc	3,2
  3103  035F  2B66               	goto	l2334
  3104                           
  3105                           ;m24c02.c: 181: *p_err = 0x04;
  3106  0360  0823               	movf	m24c02_multibyte_write@p_err,w
  3107  0361  0084               	movwf	4
  3108  0362  3004               	movlw	4
  3109  0363  1383               	bcf	3,7	;select IRP bank0
  3110  0364  0080               	movwf	0
  3111  0365                     l2330:	
  3112                           
  3113                           ;m24c02.c: 182: i2c_send_stop();
  3114  0365  2A74               	ljmp	l2022
  3115  0366                     l2334:	
  3116  0366  0AA6               	incf	m24c02_multibyte_write@v_ind,f
  3117  0367  2B4E               	goto	l2336
  3118  0368                     __end_of_m24c02_multibyte_write:	
  3119                           
  3120                           	psect	text17
  3121  03BC                     __ptext17:	
  3122 ;; *************** function _coges_money_code *****************
  3123 ;; Defined at:
  3124 ;;		line 29 in file "coges.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  v_cred          3    8[COMMON] unsigned um
  3127 ;;  v_addr          1   11[COMMON] unsigned char 
  3128 ;;  v_out           1   12[COMMON] PTR unsigned char 
  3129 ;;		 -> v_buffer(10), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  v_24b           3    1[BANK0 ] unsigned um
  3132 ;;  v_ind           1    4[BANK0 ] char 
  3133 ;;  v_checksum      1    0[BANK0 ] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 300/0
  3140 ;;		On exit  : B00/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3143 ;;      Params:         5       0       0       0
  3144 ;;      Locals:         0       5       0       0
  3145 ;;      Temps:          0       0       0       0
  3146 ;;      Totals:         5       5       0       0
  3147 ;;Total ram usage:       10 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    1
  3150 ;; This function calls:
  3151 ;;		_byte_code
  3152 ;; This function is called by:
  3153 ;;		_write_credito
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _coges_money_code
  3159  03BC                     _coges_money_code:	
  3160                           
  3161                           ;coges.c: 44: unsigned char v_checksum = 0x00;
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _coges_money_code: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3165  03BC  01A0               	clrf	coges_money_code@v_checksum
  3166                           
  3167                           ;coges.c: 51: v_24b = v_cred;
  3168  03BD  23E2               	fcall	PL20	;call to abstracted procedure
  3169                           
  3170                           ;coges.c: 52: v_checksum = v_addr;
  3171  03BE  087B               	movf	coges_money_code@v_addr,w
  3172  03BF  00A0               	movwf	coges_money_code@v_checksum
  3173                           
  3174                           ;coges.c: 53: for ( v_ind=0; v_ind<6; v_ind++ ) {
  3175  03C0  01A4               	clrf	coges_money_code@v_ind
  3176  03C1                     l2294:	
  3177                           
  3178                           ;coges.c: 54: v_checksum = v_checksum + (v_24b & 0x0F);
  3179  03C1  0821               	movf	coges_money_code@v_24b,w
  3180  03C2  390F               	andlw	15
  3181  03C3  07A0               	addwf	coges_money_code@v_checksum,f
  3182                           
  3183                           ;coges.c: 55: v_24b = v_24b >> 4;
  3184  03C4  3004               	movlw	4
  3185  03C5                     u945:	
  3186  03C5  1003               	clrc
  3187  03C6  0CA3               	rrf	coges_money_code@v_24b+2,f
  3188  03C7  0CA2               	rrf	coges_money_code@v_24b+1,f
  3189  03C8  0CA1               	rrf	coges_money_code@v_24b,f
  3190  03C9  3EFF               	addlw	-1
  3191  03CA  1D03               	skipz
  3192  03CB  2BC5               	goto	u945
  3193  03CC  0AA4               	incf	coges_money_code@v_ind,f
  3194  03CD  0824               	movf	coges_money_code@v_ind,w
  3195  03CE  3A80               	xorlw	128
  3196  03CF  3E7A               	addlw	-134
  3197  03D0  1C03               	skipc
  3198  03D1  2BC1               	goto	l2294
  3199                           
  3200                           ;coges.c: 58: v_checksum = v_checksum & 0xFF;
  3201  03D2  30FF               	movlw	255
  3202  03D3  06A0               	xorwf	coges_money_code@v_checksum,f
  3203                           
  3204                           ;coges.c: 67: v_24b = v_cred;
  3205  03D4  23E2               	fcall	PL20	;call to abstracted procedure
  3206                           
  3207                           ;coges.c: 68: for ( v_ind=3; v_ind>=0; v_ind-- )
  3208  03D5  3003               	movlw	3
  3209  03D6  00A4               	movwf	coges_money_code@v_ind
  3210  03D7                     l2308:	
  3211                           
  3212                           ;coges.c: 69: byte_code( &v_checksum, (( unsigned char * ) &v_24b), v_out + v_ind );
  3213  03D7  3021               	movlw	(low (coges_money_code@v_24b| 0))& (0+255)
  3214  03D8  00F0               	movwf	byte_code@v_cr
  3215  03D9  0824               	movf	coges_money_code@v_ind,w
  3216  03DA  077C               	addwf	coges_money_code@v_out,w
  3217  03DB  00F1               	movwf	byte_code@v_out
  3218  03DC  3020               	movlw	(low (coges_money_code@v_checksum| 0))& (0+255)
  3219  03DD  25EF               	fcall	_byte_code
  3220  03DE  03A4               	decf	coges_money_code@v_ind,f
  3221  03DF  1BA4               	btfsc	coges_money_code@v_ind,7
  3222  03E0  0008               	return
  3223  03E1  2BD7               	goto	l2308
  3224  03E2                     __end_of_coges_money_code:	
  3225  03E2                     PL20:	
  3226  03E2  0878               	movf	coges_money_code@v_cred,w
  3227  03E3  00A1               	movwf	coges_money_code@v_24b
  3228  03E4  0879               	movf	coges_money_code@v_cred+1,w
  3229  03E5  00A2               	movwf	coges_money_code@v_24b+1
  3230  03E6  087A               	movf	coges_money_code@v_cred+2,w
  3231  03E7  00A3               	movwf	coges_money_code@v_24b+2
  3232  03E8  0008               	return
  3233  03E9                     __end_ofPL20:	
  3234                           
  3235                           	psect	text18
  3236  05EF                     __ptext18:	
  3237 ;; *************** function _byte_code *****************
  3238 ;; Defined at:
  3239 ;;		line 3 in file "coges.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  v_cs            1    wreg     PTR unsigned char 
  3242 ;;		 -> coges_money_code@v_checksum(1), 
  3243 ;;  v_cr            1    0[COMMON] PTR unsigned char 
  3244 ;;		 -> coges_money_code@v_24b(3), 
  3245 ;;  v_out           1    1[COMMON] PTR unsigned char 
  3246 ;;		 -> v_buffer(10), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  v_cs            1    6[COMMON] PTR unsigned char 
  3249 ;;		 -> coges_money_code@v_checksum(1), 
  3250 ;;  v_ind           1    7[COMMON] char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 300/0
  3257 ;;		On exit  : B00/0
  3258 ;;		Unchanged: 300/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3260 ;;      Params:         2       0       0       0
  3261 ;;      Locals:         2       0       0       0
  3262 ;;      Temps:          4       0       0       0
  3263 ;;      Totals:         8       0       0       0
  3264 ;;Total ram usage:        8 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_coges_money_code
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _byte_code
  3275  05EF                     _byte_code:	
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _byte_code: [wreg-fsr0h+status,2+status,0]
  3279                           ;byte_code@v_cs stored from wreg
  3280  05EF  00F6               	movwf	byte_code@v_cs
  3281                           
  3282                           ;coges.c: 19: *v_out = 0x00;
  3283  05F0  0871               	movf	byte_code@v_out,w
  3284  05F1  0084               	movwf	4
  3285  05F2  1383               	bcf	3,7	;select IRP bank0
  3286  05F3  0180               	clrf	0
  3287                           
  3288                           ;coges.c: 20: *v_out = *v_out | ( *v_cs & 0b11 );
  3289  05F4  0871               	movf	byte_code@v_out,w
  3290  05F5  0084               	movwf	4
  3291  05F6  0800               	movf	0,w
  3292  05F7  00F2               	movwf	??_byte_code
  3293  05F8  0876               	movf	byte_code@v_cs,w
  3294  05F9  0084               	movwf	4
  3295  05FA  0800               	movf	0,w
  3296  05FB  3903               	andlw	3
  3297  05FC  0472               	iorwf	??_byte_code,w
  3298  05FD  00F3               	movwf	??_byte_code+1
  3299  05FE  0871               	movf	byte_code@v_out,w
  3300  05FF  0084               	movwf	4
  3301  0600  0873               	movf	??_byte_code+1,w
  3302  0601  0080               	movwf	0
  3303                           
  3304                           ;coges.c: 21: *v_cs = *v_cs >> 2;
  3305  0602  0876               	movf	byte_code@v_cs,w
  3306  0603  0084               	movwf	4
  3307  0604  0800               	movf	0,w
  3308  0605  00F2               	movwf	??_byte_code
  3309  0606  1003               	clrc
  3310  0607  0CF2               	rrf	??_byte_code,f
  3311  0608  1003               	clrc
  3312  0609  0CF2               	rrf	??_byte_code,f
  3313  060A  0872               	movf	??_byte_code,w
  3314  060B  00F3               	movwf	??_byte_code+1
  3315  060C  0876               	movf	byte_code@v_cs,w
  3316  060D  0084               	movwf	4
  3317  060E  0873               	movf	??_byte_code+1,w
  3318  060F  0080               	movwf	0
  3319                           
  3320                           ;coges.c: 23: for ( v_ind=2; v_ind>=0; v_ind--) {
  3321  0610  3002               	movlw	2
  3322  0611  00F7               	movwf	byte_code@v_ind
  3323  0612                     l2174:	
  3324                           
  3325                           ;coges.c: 24: *v_out = (*v_out << 2) | ( *(v_cr + v_ind) & 0b11 );
  3326  0612  0877               	movf	byte_code@v_ind,w
  3327  0613  0770               	addwf	byte_code@v_cr,w
  3328  0614  00F2               	movwf	??_byte_code
  3329  0615  0084               	movwf	4
  3330  0616  3003               	movlw	3
  3331  0617  0500               	andwf	0,w
  3332  0618  00F3               	movwf	??_byte_code+1
  3333  0619  0871               	movf	byte_code@v_out,w
  3334  061A  0084               	movwf	4
  3335  061B  0800               	movf	0,w
  3336  061C  00F4               	movwf	??_byte_code+2
  3337  061D  3001               	movlw	1
  3338  061E  1003               	clrc
  3339  061F                     L3:	
  3340  061F  0DF4               	rlf	??_byte_code+2,f
  3341  0620  3EFF               	addlw	-1
  3342  0621  1003               	clrc
  3343  0622  1D03               	skipz
  3344  0623  2E1F               	goto	L3
  3345  0624  0D74               	rlf	??_byte_code+2,w
  3346  0625  0473               	iorwf	??_byte_code+1,w
  3347  0626  00F5               	movwf	??_byte_code+3
  3348  0627  0871               	movf	byte_code@v_out,w
  3349  0628  0084               	movwf	4
  3350  0629  0875               	movf	??_byte_code+3,w
  3351  062A  0080               	movwf	0
  3352                           
  3353                           ;coges.c: 25: *(v_cr + v_ind) = *(v_cr + v_ind) >> 2;
  3354  062B  0877               	movf	byte_code@v_ind,w
  3355  062C  0770               	addwf	byte_code@v_cr,w
  3356  062D  00F2               	movwf	??_byte_code
  3357  062E  0084               	movwf	4
  3358  062F  0800               	movf	0,w
  3359  0630  00F3               	movwf	??_byte_code+1
  3360  0631  1003               	clrc
  3361  0632  0CF3               	rrf	??_byte_code+1,f
  3362  0633  1003               	clrc
  3363  0634  0CF3               	rrf	??_byte_code+1,f
  3364  0635  0873               	movf	??_byte_code+1,w
  3365  0636  00F4               	movwf	??_byte_code+2
  3366  0637  0877               	movf	byte_code@v_ind,w
  3367  0638  0770               	addwf	byte_code@v_cr,w
  3368  0639  00F5               	movwf	??_byte_code+3
  3369  063A  0084               	movwf	4
  3370  063B  0874               	movf	??_byte_code+2,w
  3371  063C  0080               	movwf	0
  3372  063D  03F7               	decf	byte_code@v_ind,f
  3373  063E  1BF7               	btfsc	byte_code@v_ind,7
  3374  063F  0008               	return
  3375  0640  2E12               	goto	l2174
  3376  0641                     __end_of_byte_code:	
  3377                           
  3378                           	psect	text19
  3379  076B                     __ptext19:	
  3380 ;; *************** function _sel_credito *****************
  3381 ;; Defined at:
  3382 ;;		line 156 in file "main.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  v_credito       1    wreg     PTR unsigned um
  3385 ;;		 -> v_credito(3), 
  3386 ;;  v_buffer        1    5[BANK0 ] PTR unsigned char 
  3387 ;;		 -> v_buffer(10), 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  v_credito       1   11[BANK0 ] PTR unsigned um
  3390 ;;		 -> v_credito(3), 
  3391 ;;  v_change        1   10[BANK0 ] unsigned char 
  3392 ;;  v_pulsante      1    9[BANK0 ] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;		None               void
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 300/0
  3399 ;;		On exit  : 300/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3402 ;;      Params:         0       1       0       0
  3403 ;;      Locals:         0       3       0       0
  3404 ;;      Temps:          0       3       0       0
  3405 ;;      Totals:         0       7       0       0
  3406 ;;Total ram usage:        7 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    5
  3409 ;; This function calls:
  3410 ;;		_coges_val_to_string
  3411 ;;		_lcd_goto_xy
  3412 ;;		_lcd_print_s
  3413 ;;		_print_btns
  3414 ;;		_wait_button
  3415 ;; This function is called by:
  3416 ;;		_exec_function
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _sel_credito
  3422  076B                     _sel_credito:	
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _sel_credito: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3426                           ;sel_credito@v_credito stored from wreg
  3427  076B  00AB               	movwf	sel_credito@v_credito
  3428                           
  3429                           ;main.c: 164: uchar v_change = 0x00;
  3430  076C  01AA               	clrf	sel_credito@v_change
  3431                           
  3432                           ;main.c: 173: *v_credito = 1000;
  3433  076D  0084               	movwf	4
  3434  076E  30E8               	movlw	232
  3435  076F  1383               	bcf	3,7	;select IRP bank0
  3436  0770  0080               	movwf	0
  3437  0771  3003               	movlw	3
  3438  0772  0A84               	incf	4,f
  3439  0773  0080               	movwf	0
  3440  0774  0A84               	incf	4,f
  3441  0775  0180               	clrf	0
  3442  0776                     l2456:	
  3443                           
  3444                           ;main.c: 174: v_change = 2;
  3445  0776  3002               	movlw	2
  3446  0777  00AA               	movwf	sel_credito@v_change
  3447                           
  3448                           ;main.c: 175: while( v_change ) {
  3449  0778  2FB1               	goto	l2496
  3450  0779                     l2478:	
  3451                           ;main.c: 196: switch ( v_pulsante ) {
  3452                           
  3453                           
  3454                           ;main.c: 198: if ( *v_credito < 60000 ) {
  3455  0779  27EB               	fcall	PL6	;call to abstracted procedure
  3456  077A  1D03               	skipz
  3457  077B  2F82               	goto	u1125
  3458  077C  30EA               	movlw	234
  3459  077D  0227               	subwf	??_sel_credito+1,w
  3460  077E  1D03               	skipz
  3461  077F  2F82               	goto	u1125
  3462  0780  3060               	movlw	96
  3463  0781  0226               	subwf	??_sel_credito,w
  3464  0782                     u1125:	
  3465  0782  1803               	skipnc
  3466  0783  2FB1               	goto	l2496
  3467                           
  3468                           ;main.c: 199: *v_credito += 500;
  3469  0784  082B               	movf	sel_credito@v_credito,w
  3470  0785  0084               	movwf	4
  3471  0786  30F4               	movlw	244
  3472  0787  0780               	addwf	0,f
  3473  0788  3001               	movlw	1
  3474  0789  0A84               	incf	4,f
  3475  078A  1803               	skipnc
  3476  078B  3E01               	addlw	1
  3477  078C  1D03               	skipz
  3478  078D  0780               	addwf	0,f
  3479  078E  3000               	movlw	0
  3480  078F  0A84               	incf	4,f
  3481  0790  1803               	skipnc
  3482  0791  3E01               	addlw	1
  3483  0792  0780               	addwf	0,f
  3484  0793  2F76               	goto	l2456
  3485  0794                     l2484:	
  3486                           
  3487                           ;main.c: 204: if ( *v_credito > 500 ) {
  3488  0794  27EB               	fcall	PL6	;call to abstracted procedure
  3489  0795  1D03               	skipz
  3490  0796  2F9D               	goto	u1135
  3491  0797  3001               	movlw	1
  3492  0798  0227               	subwf	??_sel_credito+1,w
  3493  0799  1D03               	skipz
  3494  079A  2F9D               	goto	u1135
  3495  079B  30F5               	movlw	245
  3496  079C  0226               	subwf	??_sel_credito,w
  3497  079D                     u1135:	
  3498  079D  1C03               	skipc
  3499  079E  2FB1               	goto	l2496
  3500                           
  3501                           ;main.c: 205: *v_credito -= 500;
  3502  079F  082B               	movf	sel_credito@v_credito,w
  3503  07A0  0084               	movwf	4
  3504  07A1  30F4               	movlw	244
  3505  07A2  0280               	subwf	0,f
  3506  07A3  3001               	movlw	1
  3507  07A4  0A84               	incf	4,f
  3508  07A5  1C03               	skipc
  3509  07A6  3002               	movlw	2
  3510  07A7  0280               	subwf	0,f
  3511  07A8  3000               	movlw	0
  3512  07A9  0A84               	incf	4,f
  3513  07AA  1C03               	skipc
  3514  07AB  3001               	movlw	1
  3515  07AC  0280               	subwf	0,f
  3516  07AD  0384               	decf	4,f
  3517  07AE  0384               	decf	4,f
  3518  07AF  2F76               	goto	l2456
  3519  07B0                     l2490:	
  3520                           
  3521                           ;main.c: 210: v_change = 0;
  3522  07B0  01AA               	clrf	sel_credito@v_change
  3523  07B1                     l2496:	
  3524                           ;main.c: 211: break;
  3525                           
  3526  07B1  082A               	movf	sel_credito@v_change,w
  3527  07B2  1903               	btfsc	3,2
  3528  07B3  0008               	return
  3529                           
  3530                           ;main.c: 177: if ( v_change > 1 ) {
  3531  07B4  3002               	movlw	2
  3532  07B5  022A               	subwf	sel_credito@v_change,w
  3533  07B6  1C03               	skipc
  3534  07B7  2FD4               	goto	l2472
  3535                           
  3536                           ;main.c: 178: coges_val_to_string( *v_credito, v_buffer );
  3537  07B8  082B               	movf	sel_credito@v_credito,w
  3538  07B9  0084               	movwf	4
  3539  07BA  1383               	bcf	3,7	;select IRP bank0
  3540  07BB  2311               	fcall	PL16	;call to abstracted procedure
  3541  07BC  0825               	movf	sel_credito@v_buffer,w
  3542  07BD  00FD               	movwf	coges_val_to_string@v_out
  3543  07BE  2694               	fcall	_coges_val_to_string
  3544                           
  3545                           ;main.c: 179: lcd_goto_xy(1,2);
  3546  07BF  3002               	movlw	2
  3547  07C0  00F8               	movwf	lcd_goto_xy@v_row
  3548  07C1  3001               	movlw	1
  3549  07C2  210F               	fcall	_lcd_goto_xy
  3550                           
  3551                           ;main.c: 180: lcd_print_s( (unsigned char * ) "            \0" );
  3552  07C3  304E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3553  07C4  00F8               	movwf	lcd_print_s@message
  3554  07C5  3080               	movlw	128
  3555  07C6  00F9               	movwf	lcd_print_s@message+1
  3556  07C7  214B               	fcall	_lcd_print_s
  3557                           
  3558                           ;main.c: 181: lcd_goto_xy(1,2);
  3559  07C8  3002               	movlw	2
  3560  07C9  00F8               	movwf	lcd_goto_xy@v_row
  3561  07CA  3001               	movlw	1
  3562  07CB  210F               	fcall	_lcd_goto_xy
  3563                           
  3564                           ;main.c: 182: lcd_print_s( (unsigned char * ) v_buffer );
  3565  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3566  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3567  07CE  0825               	movf	sel_credito@v_buffer,w
  3568  07CF  00F8               	movwf	lcd_print_s@message
  3569  07D0  01F9               	clrf	lcd_print_s@message+1
  3570  07D1  214B               	fcall	_lcd_print_s
  3571                           
  3572                           ;main.c: 183: v_change = 1;
  3573  07D2  01AA               	clrf	sel_credito@v_change
  3574  07D3  0AAA               	incf	sel_credito@v_change,f
  3575  07D4                     l2472:	
  3576                           
  3577                           ;main.c: 184: }
  3578                           ;main.c: 187: print_btns( '\3', '\2', '\4', C_PORTBbits.BTNS );
  3579  07D4  2548               	fcall	PL2	;call to abstracted procedure
  3580  07D5  2224               	fcall	_print_btns
  3581                           
  3582                           ;main.c: 188: v_pulsante = wait_button();
  3583  07D6  22B4               	fcall	_wait_button
  3584  07D7  00A9               	movwf	sel_credito@v_pulsante
  3585                           
  3586                           ;main.c: 189: print_btns( '\3', '\2', '\4', C_PORTBbits.BTNS );
  3587  07D8  2548               	fcall	PL2	;call to abstracted procedure
  3588  07D9  2224               	fcall	_print_btns
  3589  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  3590  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  3591  07DC  0829               	movf	sel_credito@v_pulsante,w
  3592                           
  3593                           ; Switch size 1, requested type "space"
  3594                           ; Number of cases is 4, Range of values is 3 to 7
  3595                           ; switch strategies available:
  3596                           ; Name         Instructions Cycles
  3597                           ; simple_byte           13     7 (average)
  3598                           ; direct_byte           14     9 (fixed)
  3599                           ; jumptable            263     9 (fixed)
  3600                           ;	Chosen strategy is simple_byte
  3601  07DD  3A03               	xorlw	3	; case 3
  3602  07DE  1903               	skipnz
  3603  07DF  2FB0               	goto	l2490
  3604  07E0  3A06               	xorlw	6	; case 5
  3605  07E1  1903               	skipnz
  3606  07E2  2F94               	goto	l2484
  3607  07E3  3A03               	xorlw	3	; case 6
  3608  07E4  1903               	skipnz
  3609  07E5  2F79               	goto	l2478
  3610  07E6  3A01               	xorlw	1	; case 7
  3611  07E7  1903               	skipnz
  3612  07E8  2FB1               	goto	l2496
  3613  07E9  2FB1               	goto	l2496
  3614  07EA  2FB1               	goto	l2496
  3615  07EB                     __end_of_sel_credito:	
  3616  07EB                     PL6:	
  3617  07EB  082B               	movf	sel_credito@v_credito,w
  3618  07EC  0084               	movwf	4
  3619  07ED  1383               	bcf	3,7	;select IRP bank0
  3620  07EE  0800               	movf	0,w
  3621  07EF  00A6               	movwf	??_sel_credito
  3622  07F0  0A84               	incf	4,f
  3623  07F1  0800               	movf	0,w
  3624  07F2  00A7               	movwf	??_sel_credito+1
  3625  07F3  0A84               	incf	4,f
  3626  07F4  0800               	movf	0,w
  3627  07F5  00A8               	movwf	??_sel_credito+2
  3628  07F6  3000               	movlw	0
  3629  07F7  0228               	subwf	??_sel_credito+2,w
  3630  07F8  0008               	return
  3631  07F9                     __end_ofPL6:	
  3632                           
  3633                           	psect	text20
  3634  02B4                     __ptext20:	
  3635 ;; *************** function _wait_button *****************
  3636 ;; Defined at:
  3637 ;;		line 40 in file "buttons.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  v_pulsanti      1    2[COMMON] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 300/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3651 ;;      Params:         0       0       0       0
  3652 ;;      Locals:         1       0       0       0
  3653 ;;      Temps:          2       0       0       0
  3654 ;;      Totals:         3       0       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_sel_credito
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function _wait_button
  3667  02B4                     _wait_button:	
  3668  02B4                     l2380:	
  3669                           ;buttons.c: 43: while ( C_PORTBbits.BTNS == 0b111 ) {
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _wait_button: [wreg+status,2+status,0]
  3673                           
  3674  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3675  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  3676  02B6  0E06               	swapf	6,w	;volatile
  3677  02B7  3907               	andlw	7
  3678  02B8  3A07               	xorlw	7
  3679  02B9  1D03               	btfss	3,2
  3680  02BA  2AC5               	goto	l2382
  3681                           
  3682                           ;buttons.c: 44: _delay((unsigned long)((100)*(4000000.0/4000.0)));
  3683  02BB  3082               	movlw	130
  3684  02BC  00F1               	movwf	??_wait_button+1
  3685  02BD  30DD               	movlw	221
  3686  02BE  00F0               	movwf	??_wait_button
  3687  02BF                     u1407:	
  3688  02BF  0BF0               	decfsz	??_wait_button,f
  3689  02C0  2ABF               	goto	u1407
  3690  02C1  0BF1               	decfsz	??_wait_button+1,f
  3691  02C2  2ABF               	goto	u1407
  3692  02C3  2AC4               	nop2
  3693  02C4  2AB4               	goto	l2380
  3694  02C5                     l2382:	
  3695                           
  3696                           ;buttons.c: 45: };
  3697                           ;buttons.c: 47: _delay((unsigned long)((100)*(4000000.0/4000.0)));
  3698  02C5  3082               	movlw	130
  3699  02C6  00F1               	movwf	??_wait_button+1
  3700  02C7  30DD               	movlw	221
  3701  02C8  00F0               	movwf	??_wait_button
  3702  02C9                     u1417:	
  3703  02C9  0BF0               	decfsz	??_wait_button,f
  3704  02CA  2AC9               	goto	u1417
  3705  02CB  0BF1               	decfsz	??_wait_button+1,f
  3706  02CC  2AC9               	goto	u1417
  3707  02CD  2ACE               	nop2
  3708                           
  3709                           ;buttons.c: 48: v_pulsanti = C_PORTBbits.BTNS;
  3710  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3711  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3712  02D0  0E06               	swapf	6,w	;volatile
  3713  02D1  3907               	andlw	7
  3714  02D2  00F2               	movwf	wait_button@v_pulsanti
  3715                           
  3716                           ;buttons.c: 54: return v_pulsanti;
  3717  02D3  0008               	return
  3718  02D4                     __end_of_wait_button:	
  3719                           
  3720                           	psect	text21
  3721  0224                     __ptext21:	
  3722 ;; *************** function _print_btns *****************
  3723 ;; Defined at:
  3724 ;;		line 13 in file "main_menu.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  btn_2           1    wreg     unsigned char 
  3727 ;;  btn_1           1   11[COMMON] unsigned char 
  3728 ;;  btn_0           1   12[COMMON] unsigned char 
  3729 ;;  btn_press       1   13[COMMON] unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  btn_2           1    0[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;		None               void
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 300/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3741 ;;      Params:         3       0       0       0
  3742 ;;      Locals:         0       1       0       0
  3743 ;;      Temps:          0       0       0       0
  3744 ;;      Totals:         3       1       0       0
  3745 ;;Total ram usage:        4 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    4
  3748 ;; This function calls:
  3749 ;;		_lcd_goto_xy
  3750 ;;		_print_btn
  3751 ;; This function is called by:
  3752 ;;		_sel_credito
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _print_btns
  3759  0224                     _print_btns:	
  3760                           
  3761                           ;incstack = 0
  3762                           ; Regs used in _print_btns: [wreg+status,2+status,0+pclath+cstack]
  3763                           ;print_btns@btn_2 stored from wreg
  3764  0224  00A0               	movwf	print_btns@btn_2
  3765                           
  3766                           ;main_menu.c: 15: lcd_goto_xy(14,2);
  3767  0225  3002               	movlw	2
  3768  0226  00F8               	movwf	lcd_goto_xy@v_row
  3769  0227  300E               	movlw	14
  3770  0228  210F               	fcall	_lcd_goto_xy
  3771                           
  3772                           ;main_menu.c: 16: print_btn( btn_2, btn_press & 0b001 );
  3773  0229  087D               	movf	print_btns@btn_press,w
  3774  022A  00F8               	movwf	print_btn@btn_press
  3775  022B  3001               	movlw	1
  3776  022C  05F8               	andwf	print_btn@btn_press,f
  3777  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3778  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3779  022F  0820               	movf	print_btns@btn_2,w
  3780  0230  20D2               	fcall	_print_btn
  3781                           
  3782                           ;main_menu.c: 17: print_btn( btn_1, btn_press & 0b010 );
  3783  0231  087D               	movf	print_btns@btn_press,w
  3784  0232  00F8               	movwf	print_btn@btn_press
  3785  0233  3002               	movlw	2
  3786  0234  05F8               	andwf	print_btn@btn_press,f
  3787  0235  087B               	movf	print_btns@btn_1,w
  3788  0236  20D2               	fcall	_print_btn
  3789                           
  3790                           ;main_menu.c: 18: print_btn( btn_0, btn_press & 0b100 );
  3791  0237  087D               	movf	print_btns@btn_press,w
  3792  0238  00F8               	movwf	print_btn@btn_press
  3793  0239  3004               	movlw	4
  3794  023A  05F8               	andwf	print_btn@btn_press,f
  3795  023B  087C               	movf	print_btns@btn_0,w
  3796  023C  28D2               	ljmp	_print_btn
  3797  023D                     __end_of_print_btns:	
  3798                           
  3799                           	psect	text22
  3800  00D2                     __ptext22:	
  3801 ;; *************** function _print_btn *****************
  3802 ;; Defined at:
  3803 ;;		line 3 in file "main_menu.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  btn             1    wreg     unsigned char 
  3806 ;;  btn_press       1    8[COMMON] unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  btn             1    9[COMMON] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;		None               void
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0, pclath, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3818 ;;      Params:         1       0       0       0
  3819 ;;      Locals:         1       0       0       0
  3820 ;;      Temps:          0       0       0       0
  3821 ;;      Totals:         2       0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    3
  3825 ;; This function calls:
  3826 ;;		_lcd_write_data
  3827 ;; This function is called by:
  3828 ;;		_print_btns
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           
  3833                           ;psect for function _print_btn
  3834  00D2                     _print_btn:	
  3835                           
  3836                           ;incstack = 0
  3837                           ; Regs used in _print_btn: [wreg+status,2+status,0+pclath+cstack]
  3838                           ;print_btn@btn stored from wreg
  3839  00D2  00F9               	movwf	print_btn@btn
  3840                           
  3841                           ;main_menu.c: 5: if ( btn_press != 0 ) {
  3842  00D3  0878               	movf	print_btn@btn_press,w
  3843  00D4  1903               	btfsc	3,2
  3844  00D5  28D8               	goto	l2100
  3845                           
  3846                           ;main_menu.c: 6: lcd_write_data( btn );
  3847  00D6  0879               	movf	print_btn@btn,w
  3848  00D7  28B7               	ljmp	_lcd_write_data
  3849  00D8                     l2100:	
  3850                           ;main_menu.c: 7: } else {
  3851                           
  3852                           
  3853                           ;main_menu.c: 8: lcd_write_data( '_' );
  3854  00D8  305F               	movlw	95
  3855  00D9  28B7               	ljmp	_lcd_write_data
  3856  00DA                     __end_of_print_btn:	
  3857                           
  3858                           	psect	text23
  3859  010F                     __ptext23:	
  3860 ;; *************** function _lcd_goto_xy *****************
  3861 ;; Defined at:
  3862 ;;		line 474 in file "lcd1602.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  v_col           1    wreg     unsigned char 
  3865 ;;  v_row           1    8[COMMON] unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  v_col           1   10[COMMON] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;		None               void
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3877 ;;      Params:         1       0       0       0
  3878 ;;      Locals:         1       0       0       0
  3879 ;;      Temps:          1       0       0       0
  3880 ;;      Totals:         3       0       0       0
  3881 ;;Total ram usage:        3 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    3
  3884 ;; This function calls:
  3885 ;;		_lcd_set_dd_ram_addr
  3886 ;; This function is called by:
  3887 ;;		_write_credito
  3888 ;;		_sel_credito
  3889 ;;		_print_btns
  3890 ;;		_print_menu
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _lcd_goto_xy
  3896  010F                     _lcd_goto_xy:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _lcd_goto_xy: [wreg+status,2+status,0+pclath+cstack]
  3900                           ;lcd_goto_xy@v_col stored from wreg
  3901  010F  00FA               	movwf	lcd_goto_xy@v_col
  3902                           
  3903                           ;lcd1602.c: 476: lcd_set_dd_ram_addr( (v_row-1)*0x40 + (v_col-1) );
  3904  0110  0878               	movf	lcd_goto_xy@v_row,w
  3905  0111  00F9               	movwf	??_lcd_goto_xy
  3906  0112  3006               	movlw	6
  3907  0113                     u735:	
  3908  0113  1003               	clrc
  3909  0114  0DF9               	rlf	??_lcd_goto_xy,f
  3910  0115  3EFF               	addlw	-1
  3911  0116  1D03               	skipz
  3912  0117  2913               	goto	u735
  3913  0118  087A               	movf	lcd_goto_xy@v_col,w
  3914  0119  0779               	addwf	??_lcd_goto_xy,w
  3915  011A  3EBF               	addlw	191
  3916  011B  28BD               	ljmp	_lcd_set_dd_ram_addr
  3917  011C                     __end_of_lcd_goto_xy:	
  3918                           
  3919                           	psect	text24
  3920  02F7                     __ptext24:	
  3921 ;; *************** function _read_credito *****************
  3922 ;; Defined at:
  3923 ;;		line 97 in file "main.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  v_credito       1    wreg     PTR unsigned um
  3926 ;;		 -> v_credito(3), 
  3927 ;;  v_buffer        1    7[BANK0 ] PTR unsigned char 
  3928 ;;		 -> v_buffer(10), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  v_credito       1    8[BANK0 ] PTR unsigned um
  3931 ;;		 -> v_credito(3), 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 300/0
  3938 ;;		On exit  : 300/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3941 ;;      Params:         0       1       0       0
  3942 ;;      Locals:         0       1       0       0
  3943 ;;      Temps:          0       0       0       0
  3944 ;;      Totals:         0       2       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    4
  3948 ;; This function calls:
  3949 ;;		_coges_money_value
  3950 ;;		_coges_val_to_string
  3951 ;;		_m24c02_sequential_random_read
  3952 ;; This function is called by:
  3953 ;;		_exec_function
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _read_credito
  3959  02F7                     _read_credito:	
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _read_credito: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3963                           ;read_credito@v_credito stored from wreg
  3964  02F7  00A8               	movwf	read_credito@v_credito
  3965                           
  3966                           ;main.c: 101: m24c02_sequential_random_read( 0x00, 0x44 , &v_buffer[0], 4, &p_24c02_erro
      +                          r );
  3967  02F8  3044               	movlw	68
  3968  02F9  00A3               	movwf	m24c02_sequential_random_read@v_addr
  3969  02FA  0827               	movf	read_credito@v_buffer,w
  3970  02FB  00A4               	movwf	m24c02_sequential_random_read@v_buffer
  3971  02FC  3004               	movlw	4
  3972  02FD  00A5               	movwf	m24c02_sequential_random_read@v_byte
  3973  02FE  3044               	movlw	(low (_p_24c02_error| 0))& (0+255)
  3974  02FF  00A6               	movwf	m24c02_sequential_random_read@p_err
  3975  0300  3000               	movlw	0
  3976  0301  223D               	fcall	_m24c02_sequential_random_read
  3977                           
  3978                           ;main.c: 103: if ( p_24c02_error == 0x00 ) {
  3979  0302  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0303  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0304  0844               	movf	_p_24c02_error,w
  3982  0305  1D03               	btfss	3,2
  3983  0306  0008               	return
  3984                           
  3985                           ;main.c: 104: coges_money_value( v_buffer, v_credito );
  3986  0307  0828               	movf	read_credito@v_credito,w
  3987  0308  00F0               	movwf	coges_money_value@v_out
  3988  0309  0827               	movf	read_credito@v_buffer,w
  3989  030A  259F               	fcall	_coges_money_value
  3990                           
  3991                           ;main.c: 105: coges_val_to_string( *v_credito, v_buffer );
  3992  030B  0828               	movf	read_credito@v_credito,w
  3993  030C  0084               	movwf	4
  3994  030D  2311               	fcall	PL16	;call to abstracted procedure
  3995  030E  0827               	movf	read_credito@v_buffer,w
  3996  030F  00FD               	movwf	coges_val_to_string@v_out
  3997  0310  2E94               	ljmp	l2238
  3998  0311                     __end_of_read_credito:	
  3999  0311                     PL16:	
  4000  0311  0800               	movf	0,w
  4001  0312  00FA               	movwf	coges_val_to_string@v_cred_hex
  4002  0313  0A84               	incf	4,f
  4003  0314  0800               	movf	0,w
  4004  0315  00FB               	movwf	coges_val_to_string@v_cred_hex+1
  4005  0316  0A84               	incf	4,f
  4006  0317  0800               	movf	0,w
  4007  0318  00FC               	movwf	coges_val_to_string@v_cred_hex+2
  4008  0319  0008               	return
  4009  031A                     __end_ofPL16:	
  4010                           
  4011                           	psect	text25
  4012  023D                     __ptext25:	
  4013 ;; *************** function _m24c02_sequential_random_read *****************
  4014 ;; Defined at:
  4015 ;;		line 135 in file "m24c02.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  v_device        1    wreg     unsigned char 
  4018 ;;  v_addr          1    3[BANK0 ] unsigned char 
  4019 ;;  v_buffer        1    4[BANK0 ] PTR unsigned char 
  4020 ;;		 -> m24c02_random_address_read@v_out(1), v_buffer(10), 
  4021 ;;  v_byte          1    5[BANK0 ] unsigned char 
  4022 ;;  p_err           1    6[BANK0 ] PTR unsigned char 
  4023 ;;		 -> p_24c02_error(1), 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  v_device        1   12[COMMON] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 300/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4035 ;;      Params:         0       4       0       0
  4036 ;;      Locals:         1       0       0       0
  4037 ;;      Temps:          0       0       0       0
  4038 ;;      Totals:         1       4       0       0
  4039 ;;Total ram usage:        5 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    3
  4042 ;; This function calls:
  4043 ;;		_m24c02_sequential_current_read
  4044 ;;		_m24c02_set_random_address
  4045 ;; This function is called by:
  4046 ;;		_read_credito
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _m24c02_sequential_random_read
  4052  023D                     _m24c02_sequential_random_read:	
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _m24c02_sequential_random_read: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
  4056                           ;m24c02_sequential_random_read@v_device stored from wreg
  4057  023D  00FC               	movwf	m24c02_sequential_random_read@v_device
  4058                           
  4059                           ;m24c02.c: 137: *p_err = 0x00;
  4060  023E  0826               	movf	m24c02_sequential_random_read@p_err,w
  4061  023F  0084               	movwf	4
  4062  0240  1383               	bcf	3,7	;select IRP bank0
  4063  0241  0180               	clrf	0
  4064                           
  4065                           ;m24c02.c: 139: m24c02_set_random_address( v_device, v_addr, p_err );
  4066  0242  0823               	movf	m24c02_sequential_random_read@v_addr,w
  4067  0243  00F7               	movwf	m24c02_set_random_address@v_addr
  4068  0244  0826               	movf	m24c02_sequential_random_read@p_err,w
  4069  0245  00F8               	movwf	m24c02_set_random_address@p_err
  4070  0246  087C               	movf	m24c02_sequential_random_read@v_device,w
  4071  0247  2294               	fcall	_m24c02_set_random_address
  4072                           
  4073                           ;m24c02.c: 140: if ( *p_err == 0x00 )
  4074  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4076  024A  0826               	movf	m24c02_sequential_random_read@p_err,w
  4077  024B  0084               	movwf	4
  4078  024C  1383               	bcf	3,7	;select IRP bank0
  4079  024D  0800               	movf	0,w
  4080  024E  1D03               	btfss	3,2
  4081  024F  0008               	return
  4082                           
  4083                           ;m24c02.c: 141: m24c02_sequential_current_read( v_device, v_buffer, v_byte, p_err );
  4084  0250  0824               	movf	m24c02_sequential_random_read@v_buffer,w
  4085  0251  00F7               	movwf	m24c02_sequential_current_read@v_buffer
  4086  0252  0825               	movf	m24c02_sequential_random_read@v_byte,w
  4087  0253  00F8               	movwf	m24c02_sequential_current_read@v_byte
  4088  0254  0826               	movf	m24c02_sequential_random_read@p_err,w
  4089  0255  00F9               	movwf	m24c02_sequential_current_read@p_err
  4090  0256  087C               	movf	m24c02_sequential_random_read@v_device,w
  4091  0257  2C53               	ljmp	_m24c02_sequential_current_read
  4092  0258                     __end_of_m24c02_sequential_random_read:	
  4093                           
  4094                           	psect	text26
  4095  0294                     __ptext26:	
  4096 ;; *************** function _m24c02_set_random_address *****************
  4097 ;; Defined at:
  4098 ;;		line 64 in file "m24c02.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  v_device        1    wreg     unsigned char 
  4101 ;;  v_addr          1    7[COMMON] unsigned char 
  4102 ;;  p_err           1    8[COMMON] PTR unsigned char 
  4103 ;;		 -> p_24c02_error(1), 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  v_device        1    9[COMMON] unsigned char 
  4106 ;;  v_ack           1   10[COMMON] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;		None               void
  4109 ;; Registers used:
  4110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : B00/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4116 ;;      Params:         2       0       0       0
  4117 ;;      Locals:         2       0       0       0
  4118 ;;      Temps:          0       0       0       0
  4119 ;;      Totals:         4       0       0       0
  4120 ;;Total ram usage:        4 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		_i2c_read_bit_ack
  4125 ;;		_i2c_send_start
  4126 ;;		_i2c_send_stop
  4127 ;;		_m24c02_send_byte
  4128 ;;		_m24c02_send_device_sel
  4129 ;; This function is called by:
  4130 ;;		_m24c02_sequential_random_read
  4131 ;;		_m24c02_multibyte_write
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _m24c02_set_random_address
  4137  0294                     _m24c02_set_random_address:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _m24c02_set_random_address: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4141                           ;m24c02_set_random_address@v_device stored from wreg
  4142  0294  00F9               	movwf	m24c02_set_random_address@v_device
  4143                           
  4144                           ;m24c02.c: 68: *p_err = 0x00;
  4145  0295  0878               	movf	m24c02_set_random_address@p_err,w
  4146  0296  0084               	movwf	4
  4147  0297  0180               	clrf	0
  4148                           
  4149                           ;m24c02.c: 71: i2c_send_start();
  4150  0298  21F5               	fcall	_i2c_send_start
  4151                           
  4152                           ;m24c02.c: 74: m24c02_send_device_sel( v_device, 0 );
  4153  0299  01F4               	clrf	m24c02_send_device_sel@v_Rw
  4154  029A  0879               	movf	m24c02_set_random_address@v_device,w
  4155  029B  215F               	fcall	_m24c02_send_device_sel
  4156                           
  4157                           ;m24c02.c: 76: v_ack = i2c_read_bit_ack();
  4158  029C  22D4               	fcall	_i2c_read_bit_ack
  4159  029D  00FA               	movwf	m24c02_set_random_address@v_ack
  4160                           
  4161                           ;m24c02.c: 77: if ( v_ack != 0x00 ) {
  4162  029E  087A               	movf	m24c02_set_random_address@v_ack,w
  4163  029F  1903               	btfsc	3,2
  4164  02A0  2AA7               	goto	l2118
  4165                           
  4166                           ;m24c02.c: 78: *p_err = 0x02;
  4167  02A1  0878               	movf	m24c02_set_random_address@p_err,w
  4168  02A2  0084               	movwf	4
  4169  02A3  3002               	movlw	2
  4170  02A4  1383               	bcf	3,7	;select IRP bank0
  4171  02A5  0080               	movwf	0
  4172  02A6  0008               	return
  4173  02A7                     l2118:	
  4174                           
  4175                           ;m24c02.c: 80: }
  4176                           ;m24c02.c: 83: m24c02_send_byte( v_addr );
  4177  02A7  0877               	movf	m24c02_set_random_address@v_addr,w
  4178  02A8  2102               	fcall	_m24c02_send_byte
  4179                           
  4180                           ;m24c02.c: 85: v_ack = i2c_read_bit_ack();
  4181  02A9  22D4               	fcall	_i2c_read_bit_ack
  4182  02AA  00FA               	movwf	m24c02_set_random_address@v_ack
  4183                           
  4184                           ;m24c02.c: 86: if ( v_ack != 0x00 ) {
  4185  02AB  087A               	movf	m24c02_set_random_address@v_ack,w
  4186  02AC  1903               	btfsc	3,2
  4187  02AD  0008               	return
  4188                           
  4189                           ;m24c02.c: 87: *p_err = 0x03;
  4190  02AE  0878               	movf	m24c02_set_random_address@p_err,w
  4191  02AF  0084               	movwf	4
  4192  02B0  3003               	movlw	3
  4193  02B1  1383               	bcf	3,7	;select IRP bank0
  4194  02B2  0080               	movwf	0
  4195                           
  4196                           ;m24c02.c: 88: i2c_send_stop();
  4197  02B3  2A74               	ljmp	l2022
  4198  02B4                     __end_of_m24c02_set_random_address:	
  4199                           
  4200                           	psect	text27
  4201  0102                     __ptext27:	
  4202 ;; *************** function _m24c02_send_byte *****************
  4203 ;; Defined at:
  4204 ;;		line 33 in file "m24c02.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  v_data          1    wreg     unsigned char 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  v_data          1    4[COMMON] unsigned char 
  4209 ;;  i               1    5[COMMON] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, pclath, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4219 ;;      Params:         0       0       0       0
  4220 ;;      Locals:         2       0       0       0
  4221 ;;      Temps:          0       0       0       0
  4222 ;;      Totals:         2       0       0       0
  4223 ;;Total ram usage:        2 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    1
  4226 ;; This function calls:
  4227 ;;		_i2c_send_bit1
  4228 ;; This function is called by:
  4229 ;;		_m24c02_set_random_address
  4230 ;;		_m24c02_multibyte_write
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _m24c02_send_byte
  4236  0102                     _m24c02_send_byte:	
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _m24c02_send_byte: [wreg+status,2+status,0+pclath+cstack]
  4240                           ;m24c02_send_byte@v_data stored from wreg
  4241  0102  00F4               	movwf	m24c02_send_byte@v_data
  4242                           
  4243                           ;m24c02.c: 39: for ( i=8; i>0; i--)
  4244  0103  3008               	movlw	8
  4245  0104  00F5               	movwf	m24c02_send_byte@i
  4246  0105                     l2066:	
  4247                           
  4248                           ;m24c02.c: 40: i2c_send_bit1( v_data, (i-1) );
  4249  0105  0875               	movf	m24c02_send_byte@i,w
  4250  0106  3EFF               	addlw	255
  4251  0107  00F0               	movwf	i2c_send_bit1@v_pos
  4252  0108  0874               	movf	m24c02_send_byte@v_data,w
  4253  0109  2368               	fcall	_i2c_send_bit1
  4254  010A  03F5               	decf	m24c02_send_byte@i,f
  4255  010B  0875               	movf	m24c02_send_byte@i,w
  4256  010C  1903               	btfsc	3,2
  4257  010D  0008               	return
  4258  010E  2905               	goto	l2066
  4259  010F                     __end_of_m24c02_send_byte:	
  4260                           
  4261                           	psect	text28
  4262  0453                     __ptext28:	
  4263 ;; *************** function _m24c02_sequential_current_read *****************
  4264 ;; Defined at:
  4265 ;;		line 97 in file "m24c02.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  v_device        1    wreg     unsigned char 
  4268 ;;  v_buffer        1    7[COMMON] PTR unsigned char 
  4269 ;;		 -> m24c02_random_address_read@v_out(1), m24c02_current_address_read@v_out(1), v_buffer(10), 
  4270 ;;  v_byte          1    8[COMMON] unsigned char 
  4271 ;;  p_err           1    9[COMMON] PTR unsigned char 
  4272 ;;		 -> p_24c02_error(1), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  v_device        1    0[BANK0 ] unsigned char 
  4275 ;;  v_ind           1    2[BANK0 ] unsigned char 
  4276 ;;  v_ack           1    1[BANK0 ] unsigned char 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : B00/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4286 ;;      Params:         3       0       0       0
  4287 ;;      Locals:         0       3       0       0
  4288 ;;      Temps:          2       0       0       0
  4289 ;;      Totals:         5       3       0       0
  4290 ;;Total ram usage:        8 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    2
  4293 ;; This function calls:
  4294 ;;		_i2c_read_bit_ack
  4295 ;;		_i2c_send_start
  4296 ;;		_i2c_send_stop
  4297 ;;		_m24c02_read_byte
  4298 ;;		_m24c02_send_device_sel
  4299 ;; This function is called by:
  4300 ;;		_m24c02_sequential_random_read
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _m24c02_sequential_current_read
  4306  0453                     _m24c02_sequential_current_read:	
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _m24c02_sequential_current_read: [wreg-fsr0h+status,2+status,0+pclath+cst
      +                          ack]
  4310                           ;m24c02_sequential_current_read@v_device stored from wreg
  4311  0453  00A0               	movwf	m24c02_sequential_current_read@v_device
  4312                           
  4313                           ;m24c02.c: 100: unsigned char v_ind = 0x00;
  4314  0454  01A2               	clrf	m24c02_sequential_current_read@v_ind
  4315                           
  4316                           ;m24c02.c: 102: *p_err = 0x00;
  4317  0455  0879               	movf	m24c02_sequential_current_read@p_err,w
  4318  0456  0084               	movwf	4
  4319  0457  0180               	clrf	0
  4320                           
  4321                           ;m24c02.c: 105: i2c_send_start();
  4322  0458  21F5               	fcall	_i2c_send_start
  4323                           
  4324                           ;m24c02.c: 108: m24c02_send_device_sel( v_device, 1 );
  4325  0459  01F4               	clrf	m24c02_send_device_sel@v_Rw
  4326  045A  0AF4               	incf	m24c02_send_device_sel@v_Rw,f
  4327  045B  1283               	bcf	3,5	;RP0=0, select bank0
  4328  045C  1303               	bcf	3,6	;RP1=0, select bank0
  4329  045D  0820               	movf	m24c02_sequential_current_read@v_device,w
  4330  045E  215F               	fcall	_m24c02_send_device_sel
  4331                           
  4332                           ;m24c02.c: 110: v_ack = i2c_read_bit_ack();
  4333  045F  22D4               	fcall	_i2c_read_bit_ack
  4334  0460  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0461  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0462  00A1               	movwf	m24c02_sequential_current_read@v_ack
  4337                           
  4338                           ;m24c02.c: 112: if ( v_ack != 0x00 ) {
  4339  0463  0821               	movf	m24c02_sequential_current_read@v_ack,w
  4340  0464  1903               	btfsc	3,2
  4341  0465  2C6C               	goto	l2148
  4342                           
  4343                           ;m24c02.c: 113: *p_err = 0x02;
  4344  0466  0879               	movf	m24c02_sequential_current_read@p_err,w
  4345  0467  0084               	movwf	4
  4346  0468  3002               	movlw	2
  4347  0469  1383               	bcf	3,7	;select IRP bank0
  4348  046A  0080               	movwf	0
  4349  046B                     l2144:	
  4350                           
  4351                           ;m24c02.c: 114: i2c_send_stop();
  4352  046B  2A74               	ljmp	l2022
  4353  046C                     l2148:	
  4354                           
  4355                           ;m24c02.c: 116: }
  4356                           ;m24c02.c: 125: for ( v_ind=0; v_ind<v_byte-1; v_ind++ ) {
  4357  046C  01A2               	clrf	m24c02_sequential_current_read@v_ind
  4358  046D                     l2154:	
  4359  046D  0878               	movf	m24c02_sequential_current_read@v_byte,w
  4360  046E  3EFF               	addlw	255
  4361  046F  00FA               	movwf	??_m24c02_sequential_current_read
  4362  0470  30FF               	movlw	255
  4363  0471  1803               	skipnc
  4364  0472  3000               	movlw	0
  4365  0473  00FB               	movwf	??_m24c02_sequential_current_read+1
  4366  0474  3A80               	xorlw	128
  4367  0475  3C80               	sublw	128
  4368  0476  1D03               	skipz
  4369  0477  2C7A               	goto	u785
  4370  0478  087A               	movf	??_m24c02_sequential_current_read,w
  4371  0479  0222               	subwf	m24c02_sequential_current_read@v_ind,w
  4372  047A                     u785:	
  4373                           
  4374                           ;m24c02.c: 126: m24c02_read_byte((v_buffer + v_ind), 0);
  4375  047A  01F2               	clrf	m24c02_read_byte@v_last_byte
  4376  047B  1803               	btfsc	3,0
  4377  047C  2C83               	goto	L4
  4378  047D  2487               	fcall	PL22	;call to abstracted procedure
  4379  047E  21C9               	fcall	_m24c02_read_byte
  4380  047F  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0480  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0481  0AA2               	incf	m24c02_sequential_current_read@v_ind,f
  4383  0482  2C6D               	goto	l2154
  4384  0483                     L4:	
  4385                           ;m24c02.c: 127: }
  4386                           ;m24c02.c: 128: m24c02_read_byte((v_buffer + v_ind), 1);
  4387                           
  4388  0483  0AF2               	incf	m24c02_read_byte@v_last_byte,f
  4389  0484  2487               	fcall	PL22	;call to abstracted procedure
  4390  0485  21C9               	fcall	_m24c02_read_byte
  4391  0486  2C6B               	goto	l2144
  4392  0487                     __end_of_m24c02_sequential_current_read:	
  4393  0487                     PL22:	
  4394  0487  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0488  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0489  0822               	movf	m24c02_sequential_current_read@v_ind,w
  4397  048A  0777               	addwf	m24c02_sequential_current_read@v_buffer,w
  4398  048B  0008               	return
  4399  048C                     __end_ofPL22:	
  4400                           
  4401                           	psect	text29
  4402  015F                     __ptext29:	
  4403 ;; *************** function _m24c02_send_device_sel *****************
  4404 ;; Defined at:
  4405 ;;		line 5 in file "m24c02.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  v_device        1    wreg     unsigned char 
  4408 ;;  v_Rw            1    4[COMMON] unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  v_device        1    5[COMMON] unsigned char 
  4411 ;;  i               1    6[COMMON] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4421 ;;      Params:         1       0       0       0
  4422 ;;      Locals:         2       0       0       0
  4423 ;;      Temps:          0       0       0       0
  4424 ;;      Totals:         3       0       0       0
  4425 ;;Total ram usage:        3 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    1
  4428 ;; This function calls:
  4429 ;;		_i2c_send_bit0
  4430 ;;		_i2c_send_bit1
  4431 ;; This function is called by:
  4432 ;;		_m24c02_set_random_address
  4433 ;;		_m24c02_sequential_current_read
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _m24c02_send_device_sel
  4439  015F                     _m24c02_send_device_sel:	
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _m24c02_send_device_sel: [wreg+status,2+status,0+pclath+cstack]
  4443                           ;m24c02_send_device_sel@v_device stored from wreg
  4444  015F  00F5               	movwf	m24c02_send_device_sel@v_device
  4445                           
  4446                           ;m24c02.c: 13: i2c_send_bit0( 1 );
  4447  0160  3001               	movlw	1
  4448  0161  231A               	fcall	_i2c_send_bit0
  4449                           
  4450                           ;m24c02.c: 14: i2c_send_bit0( 0 );
  4451  0162  3000               	movlw	0
  4452  0163  231A               	fcall	_i2c_send_bit0
  4453                           
  4454                           ;m24c02.c: 15: i2c_send_bit0( 1 );
  4455  0164  3001               	movlw	1
  4456  0165  231A               	fcall	_i2c_send_bit0
  4457                           
  4458                           ;m24c02.c: 16: i2c_send_bit0( 0 );
  4459  0166  3000               	movlw	0
  4460  0167  231A               	fcall	_i2c_send_bit0
  4461                           
  4462                           ;m24c02.c: 19: for (i=3; i>0; i--)
  4463  0168  3003               	movlw	3
  4464  0169  00F6               	movwf	m24c02_send_device_sel@i
  4465  016A                     l2050:	
  4466                           
  4467                           ;m24c02.c: 20: i2c_send_bit1( v_device, (i-1) );
  4468  016A  0876               	movf	m24c02_send_device_sel@i,w
  4469  016B  3EFF               	addlw	255
  4470  016C  00F0               	movwf	i2c_send_bit1@v_pos
  4471  016D  0875               	movf	m24c02_send_device_sel@v_device,w
  4472  016E  2368               	fcall	_i2c_send_bit1
  4473  016F  0BF6               	decfsz	m24c02_send_device_sel@i,f
  4474  0170  296A               	goto	l2050
  4475                           
  4476                           ;m24c02.c: 29: i2c_send_bit0( v_Rw );
  4477  0171  0874               	movf	m24c02_send_device_sel@v_Rw,w
  4478  0172  2B1A               	ljmp	_i2c_send_bit0
  4479  0173                     __end_of_m24c02_send_device_sel:	
  4480                           
  4481                           	psect	text30
  4482  0368                     __ptext30:	
  4483 ;; *************** function _i2c_send_bit1 *****************
  4484 ;; Defined at:
  4485 ;;		line 169 in file "i2c.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  v_byte          1    wreg     unsigned char 
  4488 ;;  v_pos           1    0[COMMON] unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  v_byte          1    2[COMMON] unsigned char 
  4491 ;;  v_bit           1    3[COMMON] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4501 ;;      Params:         1       0       0       0
  4502 ;;      Locals:         2       0       0       0
  4503 ;;      Temps:          1       0       0       0
  4504 ;;      Totals:         4       0       0       0
  4505 ;;Total ram usage:        4 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_m24c02_send_device_sel
  4511 ;;		_m24c02_send_byte
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _i2c_send_bit1
  4517  0368                     _i2c_send_bit1:	
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _i2c_send_bit1: [wreg+status,2+status,0]
  4521                           ;i2c_send_bit1@v_byte stored from wreg
  4522  0368  00F2               	movwf	i2c_send_bit1@v_byte
  4523                           
  4524                           ;i2c.c: 175: SR_PORTBbits.SCL=0;
  4525                           
  4526                           ;i2c.c: 176: PORTB = SR_PORTB;
  4527                           
  4528                           ;i2c.c: 177: C_TRISBbits.SCL=0;
  4529  0369  2330               	fcall	PL4	;call to abstracted procedure
  4530                           
  4531                           ;i2c.c: 178: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4532  036A  30A6               	movlw	166
  4533  036B  00F1               	movwf	??_i2c_send_bit1
  4534  036C                     u1427:	
  4535  036C  0BF1               	decfsz	??_i2c_send_bit1,f
  4536  036D  2B6C               	goto	u1427
  4537  036E  0000               	nop
  4538                           
  4539                           ;i2c.c: 181: v_bit = v_byte & (1<<v_pos);
  4540  036F  3001               	movlw	1
  4541  0370  00F1               	movwf	??_i2c_send_bit1
  4542  0371  0A70               	incf	i2c_send_bit1@v_pos,w
  4543  0372  2B75               	goto	u654
  4544  0373                     u655:	
  4545  0373  1003               	clrc
  4546  0374  0DF1               	rlf	??_i2c_send_bit1,f
  4547  0375                     u654:	
  4548  0375  3EFF               	addlw	-1
  4549  0376  1D03               	skipz
  4550  0377  2B73               	goto	u655
  4551  0378  0871               	movf	??_i2c_send_bit1,w
  4552  0379  00F3               	movwf	i2c_send_bit1@v_bit
  4553  037A  0872               	movf	i2c_send_bit1@v_byte,w
  4554  037B  05F3               	andwf	i2c_send_bit1@v_bit,f
  4555                           
  4556                           ;i2c.c: 182: if ( v_bit == 0 ) {
  4557  037C  0873               	movf	i2c_send_bit1@v_bit,w
  4558                           
  4559                           ;i2c.c: 183: SR_PORTBbits.SDA=0;
  4560  037D  1683               	bsf	3,5	;RP0=1, select bank1
  4561  037E  1303               	bcf	3,6	;RP1=0, select bank1
  4562  037F  1D03               	btfss	3,2
  4563  0380  2B83               	goto	L5
  4564                           
  4565                           ;i2c.c: 184: PORTB = SR_PORTB;
  4566                           
  4567                           ;i2c.c: 185: C_TRISBbits.SDA=0;
  4568  0381  2339               	fcall	PL14	;call to abstracted procedure
  4569                           
  4570                           ;i2c.c: 186: } else {
  4571  0382  2B84               	goto	l1934
  4572  0383                     L5:	
  4573                           ;i2c.c: 187: C_TRISBbits.SDA=1;
  4574                           
  4575  0383  1586               	bsf	6,3	;volatile
  4576  0384                     l1934:	
  4577                           
  4578                           ;i2c.c: 188: }
  4579                           ;i2c.c: 189: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4580  0384  30A6               	movlw	166
  4581  0385  00F1               	movwf	??_i2c_send_bit1
  4582  0386                     u1437:	
  4583  0386  0BF1               	decfsz	??_i2c_send_bit1,f
  4584  0387  2B86               	goto	u1437
  4585  0388  0000               	nop
  4586                           
  4587                           ;i2c.c: 192: C_TRISBbits.SCL=1;
  4588  0389  1683               	bsf	3,5	;RP0=1, select bank1
  4589  038A  1303               	bcf	3,6	;RP1=0, select bank1
  4590  038B  1506               	bsf	6,2	;volatile
  4591                           
  4592                           ;i2c.c: 193: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4593  038C  30A6               	movlw	166
  4594  038D  00F1               	movwf	??_i2c_send_bit1
  4595  038E                     u1447:	
  4596  038E  0BF1               	decfsz	??_i2c_send_bit1,f
  4597  038F  2B8E               	goto	u1447
  4598  0390  0000               	nop
  4599  0391  0008               	return
  4600  0392                     __end_of_i2c_send_bit1:	
  4601                           
  4602                           	psect	text31
  4603  01C9                     __ptext31:	
  4604 ;; *************** function _m24c02_read_byte *****************
  4605 ;; Defined at:
  4606 ;;		line 44 in file "m24c02.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  v_out           1    wreg     PTR unsigned char 
  4609 ;;		 -> m24c02_random_address_read@v_out(1), m24c02_current_address_read@v_out(1), v_buffer(10), 
  4610 ;;  v_last_byte     1    2[COMMON] unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  v_out           1    4[COMMON] PTR unsigned char 
  4613 ;;		 -> m24c02_random_address_read@v_out(1), m24c02_current_address_read@v_out(1), v_buffer(10), 
  4614 ;;  x               1    3[COMMON] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;		None               void
  4617 ;; Registers used:
  4618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 300/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4624 ;;      Params:         1       0       0       0
  4625 ;;      Locals:         2       0       0       0
  4626 ;;      Temps:          0       0       0       0
  4627 ;;      Totals:         3       0       0       0
  4628 ;;Total ram usage:        3 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    1
  4631 ;; This function calls:
  4632 ;;		_i2c_read_bit_ack
  4633 ;;		_i2c_send_bit0
  4634 ;; This function is called by:
  4635 ;;		_m24c02_sequential_current_read
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _m24c02_read_byte
  4641  01C9                     _m24c02_read_byte:	
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _m24c02_read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4645                           ;m24c02_read_byte@v_out stored from wreg
  4646  01C9  00F4               	movwf	m24c02_read_byte@v_out
  4647                           
  4648                           ;m24c02.c: 49: for ( x=8; x>0; x-- ) {
  4649  01CA  3008               	movlw	8
  4650  01CB  00F3               	movwf	m24c02_read_byte@x
  4651  01CC                     l2080:	
  4652                           
  4653                           ;m24c02.c: 50: *v_out <<= 1;
  4654  01CC  0874               	movf	m24c02_read_byte@v_out,w
  4655  01CD  0084               	movwf	4
  4656  01CE  1383               	bcf	3,7	;select IRP bank0
  4657  01CF  1003               	clrc
  4658  01D0  0D80               	rlf	0,f
  4659                           
  4660                           ;m24c02.c: 51: *v_out |= i2c_read_bit_ack();
  4661  01D1  0874               	movf	m24c02_read_byte@v_out,w
  4662  01D2  0084               	movwf	4
  4663  01D3  22D4               	fcall	_i2c_read_bit_ack
  4664  01D4  1383               	bcf	3,7	;select IRP bank0
  4665  01D5  0480               	iorwf	0,f
  4666  01D6  0BF3               	decfsz	m24c02_read_byte@x,f
  4667  01D7  29CC               	goto	l2080
  4668                           
  4669                           ;m24c02.c: 52: }
  4670                           ;m24c02.c: 54: if ( v_last_byte==0 ) {
  4671  01D8  0872               	movf	m24c02_read_byte@v_last_byte,w
  4672  01D9  1D03               	btfss	3,2
  4673  01DA  29DD               	goto	l2092
  4674                           
  4675                           ;m24c02.c: 55: i2c_send_bit0( 0 );
  4676  01DB  3000               	movlw	0
  4677  01DC  2B1A               	ljmp	_i2c_send_bit0
  4678  01DD                     l2092:	
  4679                           ;m24c02.c: 56: } else {
  4680                           
  4681                           
  4682                           ;m24c02.c: 57: i2c_send_bit0( 1 );
  4683  01DD  3001               	movlw	1
  4684  01DE  2B1A               	ljmp	_i2c_send_bit0
  4685  01DF                     __end_of_m24c02_read_byte:	
  4686                           
  4687                           	psect	text32
  4688  031A                     __ptext32:	
  4689 ;; *************** function _i2c_send_bit0 *****************
  4690 ;; Defined at:
  4691 ;;		line 144 in file "i2c.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  v_bit           1    wreg     unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  v_bit           1    1[COMMON] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;		None               void
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4705 ;;      Params:         0       0       0       0
  4706 ;;      Locals:         1       0       0       0
  4707 ;;      Temps:          1       0       0       0
  4708 ;;      Totals:         2       0       0       0
  4709 ;;Total ram usage:        2 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_m24c02_send_device_sel
  4715 ;;		_m24c02_read_byte
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _i2c_send_bit0
  4721  031A                     _i2c_send_bit0:	
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _i2c_send_bit0: [wreg+status,2+status,0]
  4725                           ;i2c_send_bit0@v_bit stored from wreg
  4726  031A  00F1               	movwf	i2c_send_bit0@v_bit
  4727                           
  4728                           ;i2c.c: 149: SR_PORTBbits.SCL=0;
  4729                           
  4730                           ;i2c.c: 150: PORTB = SR_PORTB;
  4731                           
  4732                           ;i2c.c: 151: C_TRISBbits.SCL=0;
  4733  031B  2330               	fcall	PL4	;call to abstracted procedure
  4734                           
  4735                           ;i2c.c: 152: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4736  031C  30A6               	movlw	166
  4737  031D  00F0               	movwf	??_i2c_send_bit0
  4738  031E                     u1457:	
  4739  031E  0BF0               	decfsz	??_i2c_send_bit0,f
  4740  031F  2B1E               	goto	u1457
  4741  0320  0000               	nop
  4742                           
  4743                           ;i2c.c: 155: if ( v_bit==0 ) {
  4744  0321  0871               	movf	i2c_send_bit0@v_bit,w
  4745                           
  4746                           ;i2c.c: 156: SR_PORTBbits.SDA=0;
  4747  0322  1683               	bsf	3,5	;RP0=1, select bank1
  4748  0323  1303               	bcf	3,6	;RP1=0, select bank1
  4749  0324  1D03               	btfss	3,2
  4750  0325  2B28               	goto	L6
  4751                           
  4752                           ;i2c.c: 157: PORTB = SR_PORTB;
  4753                           
  4754                           ;i2c.c: 158: C_TRISBbits.SDA=0;
  4755  0326  2339               	fcall	PL14	;call to abstracted procedure
  4756                           
  4757                           ;i2c.c: 159: } else {
  4758  0327  2B29               	goto	l234
  4759  0328                     L6:	
  4760                           ;i2c.c: 160: C_TRISBbits.SDA=1;
  4761                           
  4762  0328  1586               	bsf	6,3	;volatile
  4763  0329                     l234:	
  4764                           
  4765                           ;i2c.c: 161: }
  4766                           ;i2c.c: 164: C_TRISBbits.SCL=1;
  4767  0329  1506               	bsf	6,2	;volatile
  4768                           
  4769                           ;i2c.c: 165: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4770  032A  30A6               	movlw	166
  4771  032B  00F0               	movwf	??_i2c_send_bit0
  4772  032C                     u1467:	
  4773  032C  0BF0               	decfsz	??_i2c_send_bit0,f
  4774  032D  2B2C               	goto	u1467
  4775  032E  0000               	nop
  4776  032F  0008               	return
  4777  0330                     __end_of_i2c_send_bit0:	
  4778  0330                     PL4:	
  4779  0330  1683               	bsf	3,5	;RP0=1, select bank1
  4780  0331  1303               	bcf	3,6	;RP1=0, select bank1
  4781  0332  116F               	bcf	111,2	;volatile
  4782  0333  086F               	movf	111,w	;volatile
  4783  0334  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0335  0086               	movwf	6	;volatile
  4785  0336  1683               	bsf	3,5	;RP0=1, select bank1
  4786  0337  1106               	bcf	6,2	;volatile
  4787  0338  0008               	return
  4788  0339                     __end_ofPL4:	
  4789  0339                     PL14:	
  4790  0339  11EF               	bcf	111,3	;volatile
  4791  033A  086F               	movf	111,w	;volatile
  4792  033B  1283               	bcf	3,5	;RP0=0, select bank0
  4793  033C  0086               	movwf	6	;volatile
  4794  033D  1683               	bsf	3,5	;RP0=1, select bank1
  4795  033E  1186               	bcf	6,3	;volatile
  4796  033F  0008               	return
  4797  0340                     __end_ofPL14:	
  4798                           
  4799                           	psect	text33
  4800  02D4                     __ptext33:	
  4801 ;; *************** function _i2c_read_bit_ack *****************
  4802 ;; Defined at:
  4803 ;;		line 206 in file "i2c.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  v_out           1    1[COMMON] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      unsigned char 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4817 ;;      Params:         0       0       0       0
  4818 ;;      Locals:         1       0       0       0
  4819 ;;      Temps:          1       0       0       0
  4820 ;;      Totals:         2       0       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_m24c02_read_byte
  4827 ;;		_m24c02_set_random_address
  4828 ;;		_m24c02_sequential_current_read
  4829 ;;		_m24c02_multibyte_write
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function _i2c_read_bit_ack
  4835  02D4                     _i2c_read_bit_ack:	
  4836                           
  4837                           ;i2c.c: 210: unsigned char v_out;
  4838                           ;i2c.c: 218: SR_PORTBbits.SCL=0;
  4839                           
  4840                           ;incstack = 0
  4841                           ; Regs used in _i2c_read_bit_ack: [wreg+status,2]
  4842                           
  4843                           ;i2c.c: 219: PORTB = SR_PORTB;
  4844                           
  4845                           ;i2c.c: 220: C_TRISBbits.SCL=0;
  4846  02D4  2330               	fcall	PL4	;call to abstracted procedure
  4847                           
  4848                           ;i2c.c: 222: C_TRISBbits.SDA=1;
  4849  02D5  1586               	bsf	6,3	;volatile
  4850                           
  4851                           ;i2c.c: 224: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4852  02D6  30A6               	movlw	166
  4853  02D7  00F0               	movwf	??_i2c_read_bit_ack
  4854  02D8                     u1477:	
  4855  02D8  0BF0               	decfsz	??_i2c_read_bit_ack,f
  4856  02D9  2AD8               	goto	u1477
  4857  02DA  0000               	nop
  4858                           
  4859                           ;i2c.c: 228: C_TRISBbits.SCL=1;
  4860  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  4861  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  4862  02DD  1506               	bsf	6,2	;volatile
  4863                           
  4864                           ;i2c.c: 229: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4865  02DE  30A6               	movlw	166
  4866  02DF  00F0               	movwf	??_i2c_read_bit_ack
  4867  02E0                     u1487:	
  4868  02E0  0BF0               	decfsz	??_i2c_read_bit_ack,f
  4869  02E1  2AE0               	goto	u1487
  4870  02E2  0000               	nop
  4871                           
  4872                           ;i2c.c: 231: v_out = C_PORTBbits.SDA;
  4873  02E3  3000               	movlw	0
  4874  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4875  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4876  02E6  1986               	btfsc	6,3	;volatile
  4877  02E7  3001               	movlw	1
  4878  02E8  00F1               	movwf	i2c_read_bit_ack@v_out
  4879                           
  4880                           ;i2c.c: 238: SR_PORTBbits.SCL=0;
  4881  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  4882  02EA  116F               	bcf	111,2	;volatile
  4883                           
  4884                           ;i2c.c: 239: PORTB = SR_PORTB;
  4885  02EB  086F               	movf	111,w	;volatile
  4886  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  4887  02ED  0086               	movwf	6	;volatile
  4888                           
  4889                           ;i2c.c: 240: C_TRISBbits.SCL=0;
  4890  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  4891  02EF  1106               	bcf	6,2	;volatile
  4892                           
  4893                           ;i2c.c: 241: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4894  02F0  30A6               	movlw	166
  4895  02F1  00F0               	movwf	??_i2c_read_bit_ack
  4896  02F2                     u1497:	
  4897  02F2  0BF0               	decfsz	??_i2c_read_bit_ack,f
  4898  02F3  2AF2               	goto	u1497
  4899  02F4  0000               	nop
  4900                           
  4901                           ;i2c.c: 247: return v_out;
  4902  02F5  0871               	movf	i2c_read_bit_ack@v_out,w
  4903  02F6  0008               	return
  4904  02F7                     __end_of_i2c_read_bit_ack:	
  4905                           
  4906                           	psect	text34
  4907  0274                     __ptext34:	
  4908 ;; *************** function _i2c_send_stop *****************
  4909 ;; Defined at:
  4910 ;;		line 111 in file "i2c.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;		None               void
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4924 ;;      Params:         0       0       0       0
  4925 ;;      Locals:         0       0       0       0
  4926 ;;      Temps:          1       0       0       0
  4927 ;;      Totals:         1       0       0       0
  4928 ;;Total ram usage:        1 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_m24c02_set_random_address
  4934 ;;		_m24c02_sequential_current_read
  4935 ;;		_m24c02_multibyte_write
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _i2c_send_stop
  4941  0274                     _i2c_send_stop:	
  4942  0274                     l2022:	
  4943                           ;incstack = 0
  4944                           ; Regs used in _i2c_send_stop: [wreg+status,2+status,0]
  4945                           
  4946                           
  4947                           ;i2c.c: 117: SR_PORTBbits.BUS=0;
  4948  0274  30F3               	movlw	-13
  4949  0275  1683               	bsf	3,5	;RP0=1, select bank1
  4950  0276  1303               	bcf	3,6	;RP1=0, select bank1
  4951  0277  05EF               	andwf	111,f	;volatile
  4952                           
  4953                           ;i2c.c: 118: PORTB = SR_PORTB;
  4954  0278  086F               	movf	111,w	;volatile
  4955  0279  1283               	bcf	3,5	;RP0=0, select bank0
  4956  027A  0086               	movwf	6	;volatile
  4957                           
  4958                           ;i2c.c: 119: C_TRISBbits.BUS=0;
  4959  027B  30F3               	movlw	-13
  4960  027C  1683               	bsf	3,5	;RP0=1, select bank1
  4961  027D  0586               	andwf	6,f	;volatile
  4962                           
  4963                           ;i2c.c: 120: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4964  027E  30A6               	movlw	166
  4965  027F  00F0               	movwf	??_i2c_send_stop
  4966  0280                     u1507:	
  4967  0280  0BF0               	decfsz	??_i2c_send_stop,f
  4968  0281  2A80               	goto	u1507
  4969  0282  0000               	nop
  4970                           
  4971                           ;i2c.c: 123: C_TRISBbits.SCL=1;
  4972  0283  1683               	bsf	3,5	;RP0=1, select bank1
  4973  0284  1303               	bcf	3,6	;RP1=0, select bank1
  4974  0285  1506               	bsf	6,2	;volatile
  4975                           
  4976                           ;i2c.c: 124: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4977  0286  30A6               	movlw	166
  4978  0287  00F0               	movwf	??_i2c_send_stop
  4979  0288                     u1517:	
  4980  0288  0BF0               	decfsz	??_i2c_send_stop,f
  4981  0289  2A88               	goto	u1517
  4982  028A  0000               	nop
  4983                           
  4984                           ;i2c.c: 127: C_TRISBbits.SDA=1;
  4985  028B  1683               	bsf	3,5	;RP0=1, select bank1
  4986  028C  1303               	bcf	3,6	;RP1=0, select bank1
  4987  028D  1586               	bsf	6,3	;volatile
  4988                           
  4989                           ;i2c.c: 128: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  4990  028E  30A6               	movlw	166
  4991  028F  00F0               	movwf	??_i2c_send_stop
  4992  0290                     u1527:	
  4993  0290  0BF0               	decfsz	??_i2c_send_stop,f
  4994  0291  2A90               	goto	u1527
  4995  0292  0000               	nop
  4996  0293  0008               	return
  4997  0294                     __end_of_i2c_send_stop:	
  4998                           
  4999                           	psect	text35
  5000  01F5                     __ptext35:	
  5001 ;; *************** function _i2c_send_start *****************
  5002 ;; Defined at:
  5003 ;;		line 73 in file "i2c.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : B00/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5017 ;;      Params:         0       0       0       0
  5018 ;;      Locals:         0       0       0       0
  5019 ;;      Temps:          1       0       0       0
  5020 ;;      Totals:         1       0       0       0
  5021 ;;Total ram usage:        1 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_m24c02_set_random_address
  5027 ;;		_m24c02_sequential_current_read
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _i2c_send_start
  5033  01F5                     _i2c_send_start:	
  5034                           
  5035                           ;i2c.c: 79: C_TRISBbits.BUS=3;
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _i2c_send_start: [wreg+status,2+status,0]
  5039  01F5  300C               	movlw	12
  5040  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5041  01F7  0486               	iorwf	6,f	;volatile
  5042                           
  5043                           ;i2c.c: 80: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  5044  01F8  30A6               	movlw	166
  5045  01F9  00F0               	movwf	??_i2c_send_start
  5046  01FA                     u1537:	
  5047  01FA  0BF0               	decfsz	??_i2c_send_start,f
  5048  01FB  29FA               	goto	u1537
  5049  01FC  0000               	nop
  5050                           
  5051                           ;i2c.c: 83: SR_PORTBbits.SDA=0;
  5052  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  5053  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  5054                           
  5055                           ;i2c.c: 84: PORTB = SR_PORTB;
  5056                           
  5057                           ;i2c.c: 85: C_TRISBbits.SDA=0;
  5058  01FF  2339               	fcall	PL14	;call to abstracted procedure
  5059                           
  5060                           ;i2c.c: 86: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  5061  0200  30A6               	movlw	166
  5062  0201  00F0               	movwf	??_i2c_send_start
  5063  0202                     u1547:	
  5064  0202  0BF0               	decfsz	??_i2c_send_start,f
  5065  0203  2A02               	goto	u1547
  5066  0204  0000               	nop
  5067                           
  5068                           ;i2c.c: 89: SR_PORTBbits.SCL=0;
  5069                           
  5070                           ;i2c.c: 90: PORTB = SR_PORTB;
  5071                           
  5072                           ;i2c.c: 91: C_TRISBbits.SCL=0;
  5073  0205  2330               	fcall	PL4	;call to abstracted procedure
  5074                           
  5075                           ;i2c.c: 92: _delay((unsigned long)((500)*(4000000.0/4000000.0)));
  5076  0206  30A6               	movlw	166
  5077  0207  00F0               	movwf	??_i2c_send_start
  5078  0208                     u1557:	
  5079  0208  0BF0               	decfsz	??_i2c_send_start,f
  5080  0209  2A08               	goto	u1557
  5081  020A  0000               	nop
  5082  020B  0008               	return
  5083  020C                     __end_of_i2c_send_start:	
  5084                           
  5085                           	psect	text36
  5086  0694                     __ptext36:	
  5087 ;; *************** function _coges_val_to_string *****************
  5088 ;; Defined at:
  5089 ;;		line 96 in file "coges.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  v_cred_hex      3   10[COMMON] unsigned um
  5092 ;;  v_out           1   13[COMMON] PTR unsigned char 
  5093 ;;		 -> v_buffer(10), 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  v               3    1[BANK0 ] unsigned um
  5096 ;;  c               1    4[BANK0 ] unsigned char 
  5097 ;;  v_ind           1    0[BANK0 ] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;		None               void
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 300/0
  5104 ;;		On exit  : B00/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5107 ;;      Params:         4       0       0       0
  5108 ;;      Locals:         0       5       0       0
  5109 ;;      Temps:          0       0       0       0
  5110 ;;      Totals:         4       5       0       0
  5111 ;;Total ram usage:        9 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    1
  5114 ;; This function calls:
  5115 ;;		___ltdiv
  5116 ;;		___ltmod
  5117 ;; This function is called by:
  5118 ;;		_write_credito
  5119 ;;		_read_credito
  5120 ;;		_sel_credito
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function _coges_val_to_string
  5126  0694                     _coges_val_to_string:	
  5127  0694                     l2238:	
  5128                           ;incstack = 0
  5129                           ; Regs used in _coges_val_to_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5130                           
  5131                           
  5132                           ;coges.c: 99: unsigned short long v;
  5133                           ;coges.c: 100: char c;
  5134                           ;coges.c: 101: char v_ind = 0x00;
  5135  0694  01A0               	clrf	coges_val_to_string@v_ind
  5136                           
  5137                           ;coges.c: 103: v = v_cred_hex;
  5138  0695  087A               	movf	coges_val_to_string@v_cred_hex,w
  5139  0696  00A1               	movwf	coges_val_to_string@v
  5140  0697  087B               	movf	coges_val_to_string@v_cred_hex+1,w
  5141  0698  00A2               	movwf	coges_val_to_string@v+1
  5142  0699  087C               	movf	coges_val_to_string@v_cred_hex+2,w
  5143  069A  00A3               	movwf	coges_val_to_string@v+2
  5144  069B                     l2242:	
  5145                           
  5146                           ;coges.c: 105: v /= 10;
  5147  069B  300A               	movlw	10
  5148  069C  00F0               	movwf	___ltdiv@divisor
  5149  069D  01F1               	clrf	___ltdiv@divisor+1
  5150  069E  01F2               	clrf	___ltdiv@divisor+2
  5151  069F  0821               	movf	coges_val_to_string@v,w
  5152  06A0  00F3               	movwf	___ltdiv@dividend
  5153  06A1  0822               	movf	coges_val_to_string@v+1,w
  5154  06A2  00F4               	movwf	___ltdiv@dividend+1
  5155  06A3  0823               	movf	coges_val_to_string@v+2,w
  5156  06A4  00F5               	movwf	___ltdiv@dividend+2
  5157  06A5  241A               	fcall	___ltdiv
  5158  06A6  0870               	movf	?___ltdiv,w
  5159  06A7  00A1               	movwf	coges_val_to_string@v
  5160  06A8  0871               	movf	?___ltdiv+1,w
  5161  06A9  00A2               	movwf	coges_val_to_string@v+1
  5162  06AA  0872               	movf	?___ltdiv+2,w
  5163  06AB  00A3               	movwf	coges_val_to_string@v+2
  5164                           
  5165                           ;coges.c: 106: v_out++;
  5166  06AC  0AFD               	incf	coges_val_to_string@v_out,f
  5167                           
  5168                           ;coges.c: 107: } while(v != 0);
  5169  06AD  0422               	iorwf	coges_val_to_string@v+1,w
  5170  06AE  0421               	iorwf	coges_val_to_string@v,w
  5171  06AF  1D03               	skipz
  5172  06B0  2E9B               	goto	l2242
  5173                           
  5174                           ;coges.c: 108: v_out += 2;
  5175  06B1  0AFD               	incf	coges_val_to_string@v_out,f
  5176  06B2  0AFD               	incf	coges_val_to_string@v_out,f
  5177                           
  5178                           ;coges.c: 109: *v_out-- = '\0';
  5179  06B3  087D               	movf	coges_val_to_string@v_out,w
  5180  06B4  0084               	movwf	4
  5181  06B5  1383               	bcf	3,7	;select IRP bank0
  5182  06B6  0180               	clrf	0
  5183  06B7  03FD               	decf	coges_val_to_string@v_out,f
  5184                           
  5185                           ;coges.c: 111: *v_out-- = '\1';
  5186  06B8  087D               	movf	coges_val_to_string@v_out,w
  5187  06B9  0084               	movwf	4
  5188  06BA  0180               	clrf	0
  5189  06BB  0A80               	incf	0,f
  5190  06BC  03FD               	decf	coges_val_to_string@v_out,f
  5191  06BD                     l2258:	
  5192                           
  5193                           ;coges.c: 116: if (v_ind==2) {
  5194  06BD  3002               	movlw	2
  5195  06BE  0620               	xorwf	coges_val_to_string@v_ind,w
  5196  06BF  1D03               	btfss	3,2
  5197  06C0  2EC7               	goto	l2266
  5198                           
  5199                           ;coges.c: 117: *v_out-- = '.';
  5200  06C1  087D               	movf	coges_val_to_string@v_out,w
  5201  06C2  0084               	movwf	4
  5202  06C3  302E               	movlw	46
  5203  06C4  0080               	movwf	0
  5204  06C5  03FD               	decf	coges_val_to_string@v_out,f
  5205                           
  5206                           ;coges.c: 118: v_ind++;
  5207  06C6  0AA0               	incf	coges_val_to_string@v_ind,f
  5208  06C7                     l2266:	
  5209                           
  5210                           ;coges.c: 119: }
  5211                           ;coges.c: 120: c = v_cred_hex % 10;
  5212  06C7  300A               	movlw	10
  5213  06C8  00F0               	movwf	___ltmod@divisor
  5214  06C9  01F1               	clrf	___ltmod@divisor+1
  5215  06CA  01F2               	clrf	___ltmod@divisor+2
  5216  06CB  087A               	movf	coges_val_to_string@v_cred_hex,w
  5217  06CC  00F3               	movwf	___ltmod@dividend
  5218  06CD  087B               	movf	coges_val_to_string@v_cred_hex+1,w
  5219  06CE  00F4               	movwf	___ltmod@dividend+1
  5220  06CF  087C               	movf	coges_val_to_string@v_cred_hex+2,w
  5221  06D0  00F5               	movwf	___ltmod@dividend+2
  5222  06D1  23E9               	fcall	___ltmod
  5223  06D2  0870               	movf	?___ltmod,w
  5224  06D3  00A4               	movwf	coges_val_to_string@c
  5225                           
  5226                           ;coges.c: 121: v_cred_hex /= 10;
  5227  06D4  300A               	movlw	10
  5228  06D5  00F0               	movwf	___ltdiv@divisor
  5229  06D6  01F1               	clrf	___ltdiv@divisor+1
  5230  06D7  01F2               	clrf	___ltdiv@divisor+2
  5231  06D8  087A               	movf	coges_val_to_string@v_cred_hex,w
  5232  06D9  00F3               	movwf	___ltdiv@dividend
  5233  06DA  087B               	movf	coges_val_to_string@v_cred_hex+1,w
  5234  06DB  00F4               	movwf	___ltdiv@dividend+1
  5235  06DC  087C               	movf	coges_val_to_string@v_cred_hex+2,w
  5236  06DD  00F5               	movwf	___ltdiv@dividend+2
  5237  06DE  241A               	fcall	___ltdiv
  5238  06DF  0870               	movf	?___ltdiv,w
  5239  06E0  00FA               	movwf	coges_val_to_string@v_cred_hex
  5240  06E1  0871               	movf	?___ltdiv+1,w
  5241  06E2  00FB               	movwf	coges_val_to_string@v_cred_hex+1
  5242  06E3  0872               	movf	?___ltdiv+2,w
  5243  06E4  00FC               	movwf	coges_val_to_string@v_cred_hex+2
  5244                           
  5245                           ;coges.c: 122: if(c >= 10)
  5246  06E5  300A               	movlw	10
  5247  06E6  0224               	subwf	coges_val_to_string@c,w
  5248  06E7  1C03               	skipc
  5249  06E8  2EEB               	goto	l470
  5250                           
  5251                           ;coges.c: 123: c += 'A'-'0'-10;
  5252  06E9  3007               	movlw	7
  5253  06EA  07A4               	addwf	coges_val_to_string@c,f
  5254  06EB                     l470:	
  5255                           
  5256                           ;coges.c: 124: c += '0';
  5257  06EB  3030               	movlw	48
  5258  06EC  07A4               	addwf	coges_val_to_string@c,f
  5259                           
  5260                           ;coges.c: 125: *v_out-- = c;
  5261  06ED  087D               	movf	coges_val_to_string@v_out,w
  5262  06EE  0084               	movwf	4
  5263  06EF  0824               	movf	coges_val_to_string@c,w
  5264  06F0  1383               	bcf	3,7	;select IRP bank0
  5265  06F1  0080               	movwf	0
  5266  06F2  03FD               	decf	coges_val_to_string@v_out,f
  5267                           
  5268                           ;coges.c: 126: v_ind += 1;
  5269  06F3  0AA0               	incf	coges_val_to_string@v_ind,f
  5270                           
  5271                           ;coges.c: 127: } while(v_cred_hex != 0);
  5272  06F4  087C               	movf	coges_val_to_string@v_cred_hex+2,w
  5273  06F5  047B               	iorwf	coges_val_to_string@v_cred_hex+1,w
  5274  06F6  047A               	iorwf	coges_val_to_string@v_cred_hex,w
  5275  06F7  1903               	btfsc	3,2
  5276  06F8  0008               	return
  5277  06F9  2EBD               	goto	l2258
  5278  06FA                     __end_of_coges_val_to_string:	
  5279                           
  5280                           	psect	text37
  5281  03E9                     __ptext37:	
  5282 ;; *************** function ___ltmod *****************
  5283 ;; Defined at:
  5284 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ltmod.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  divisor         3    0[COMMON] unsigned um
  5287 ;;  dividend        3    3[COMMON] unsigned um
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  counter         1    6[COMMON] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  3    0[COMMON] unsigned um
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 300/0
  5296 ;;		On exit  : 300/0
  5297 ;;		Unchanged: 300/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5299 ;;      Params:         6       0       0       0
  5300 ;;      Locals:         1       0       0       0
  5301 ;;      Temps:          0       0       0       0
  5302 ;;      Totals:         7       0       0       0
  5303 ;;Total ram usage:        7 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_coges_val_to_string
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           
  5313                           ;psect for function ___ltmod
  5314  03E9                     ___ltmod:	
  5315                           
  5316                           ;incstack = 0
  5317                           ; Regs used in ___ltmod: [wreg+status,2+status,0]
  5318  03E9  0872               	movf	___ltmod@divisor+2,w
  5319  03EA  0471               	iorwf	___ltmod@divisor+1,w
  5320  03EB  0470               	iorwf	___ltmod@divisor,w
  5321  03EC  1903               	skipnz
  5322  03ED  2C13               	goto	l2222
  5323  03EE  01F6               	clrf	___ltmod@counter
  5324  03EF                     L7:	
  5325  03EF  0AF6               	incf	___ltmod@counter,f
  5326  03F0  1BF2               	btfsc	___ltmod@divisor+2,7
  5327  03F1  2BF7               	goto	l2214
  5328  03F2  1003               	clrc
  5329  03F3  0DF0               	rlf	___ltmod@divisor,f
  5330  03F4  0DF1               	rlf	___ltmod@divisor+1,f
  5331  03F5  0DF2               	rlf	___ltmod@divisor+2,f
  5332  03F6  2BEF               	goto	L7
  5333  03F7                     l2214:	
  5334  03F7  0872               	movf	___ltmod@divisor+2,w
  5335  03F8  0275               	subwf	___ltmod@dividend+2,w
  5336  03F9  1D03               	skipz
  5337  03FA  2C01               	goto	u875
  5338  03FB  0871               	movf	___ltmod@divisor+1,w
  5339  03FC  0274               	subwf	___ltmod@dividend+1,w
  5340  03FD  1D03               	skipz
  5341  03FE  2C01               	goto	u875
  5342  03FF  0870               	movf	___ltmod@divisor,w
  5343  0400  0273               	subwf	___ltmod@dividend,w
  5344  0401                     u875:	
  5345  0401  1C03               	skipc
  5346  0402  2C0E               	goto	L8
  5347  0403  0870               	movf	___ltmod@divisor,w
  5348  0404  02F3               	subwf	___ltmod@dividend,f
  5349  0405  0871               	movf	___ltmod@divisor+1,w
  5350  0406  1C03               	skipc
  5351  0407  0F71               	incfsz	___ltmod@divisor+1,w
  5352  0408  02F4               	subwf	___ltmod@dividend+1,f
  5353  0409  0872               	movf	___ltmod@divisor+2,w
  5354  040A  1C03               	skipc
  5355  040B  0A72               	incf	___ltmod@divisor+2,w
  5356  040C  02F5               	subwf	___ltmod@dividend+2,f
  5357  040D  1003               	clrc
  5358  040E                     L8:	
  5359  040E  0CF2               	rrf	___ltmod@divisor+2,f
  5360  040F  0CF1               	rrf	___ltmod@divisor+1,f
  5361  0410  0CF0               	rrf	___ltmod@divisor,f
  5362  0411  0BF6               	decfsz	___ltmod@counter,f
  5363  0412  2BF7               	goto	l2214
  5364  0413                     l2222:	
  5365  0413  0873               	movf	___ltmod@dividend,w
  5366  0414  00F0               	movwf	?___ltmod
  5367  0415  0874               	movf	___ltmod@dividend+1,w
  5368  0416  00F1               	movwf	?___ltmod+1
  5369  0417  0875               	movf	___ltmod@dividend+2,w
  5370  0418  00F2               	movwf	?___ltmod+2
  5371  0419  0008               	return
  5372  041A                     __end_of___ltmod:	
  5373                           
  5374                           	psect	text38
  5375  041A                     __ptext38:	
  5376 ;; *************** function ___ltdiv *****************
  5377 ;; Defined at:
  5378 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ltdiv.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  divisor         3    0[COMMON] unsigned um
  5381 ;;  dividend        3    3[COMMON] unsigned um
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  quotient        3    6[COMMON] unsigned um
  5384 ;;  counter         1    9[COMMON] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  3    0[COMMON] unsigned um
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0
  5389 ;; Tracked objects:
  5390 ;;		On entry : 300/0
  5391 ;;		On exit  : 300/0
  5392 ;;		Unchanged: 300/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5394 ;;      Params:         6       0       0       0
  5395 ;;      Locals:         4       0       0       0
  5396 ;;      Temps:          0       0       0       0
  5397 ;;      Totals:        10       0       0       0
  5398 ;;Total ram usage:       10 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_coges_val_to_string
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function ___ltdiv
  5409  041A                     ___ltdiv:	
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  5413  041A  01F6               	clrf	___ltdiv@quotient
  5414  041B  01F7               	clrf	___ltdiv@quotient+1
  5415  041C  01F8               	clrf	___ltdiv@quotient+2
  5416  041D  0872               	movf	___ltdiv@divisor+2,w
  5417  041E  0471               	iorwf	___ltdiv@divisor+1,w
  5418  041F  0470               	iorwf	___ltdiv@divisor,w
  5419  0420  1903               	skipnz
  5420  0421  2C4C               	goto	l2202
  5421  0422  01F9               	clrf	___ltdiv@counter
  5422  0423                     L9:	
  5423  0423  0AF9               	incf	___ltdiv@counter,f
  5424  0424  1BF2               	btfsc	___ltdiv@divisor+2,7
  5425  0425  2C2B               	goto	l2190
  5426  0426  1003               	clrc
  5427  0427  0DF0               	rlf	___ltdiv@divisor,f
  5428  0428  0DF1               	rlf	___ltdiv@divisor+1,f
  5429  0429  0DF2               	rlf	___ltdiv@divisor+2,f
  5430  042A  2C23               	goto	L9
  5431  042B                     l2190:	
  5432  042B  1003               	clrc
  5433  042C  0DF6               	rlf	___ltdiv@quotient,f
  5434  042D  0DF7               	rlf	___ltdiv@quotient+1,f
  5435  042E  0DF8               	rlf	___ltdiv@quotient+2,f
  5436  042F  0872               	movf	___ltdiv@divisor+2,w
  5437  0430  0275               	subwf	___ltdiv@dividend+2,w
  5438  0431  1D03               	skipz
  5439  0432  2C39               	goto	u835
  5440  0433  0871               	movf	___ltdiv@divisor+1,w
  5441  0434  0274               	subwf	___ltdiv@dividend+1,w
  5442  0435  1D03               	skipz
  5443  0436  2C39               	goto	u835
  5444  0437  0870               	movf	___ltdiv@divisor,w
  5445  0438  0273               	subwf	___ltdiv@dividend,w
  5446  0439                     u835:	
  5447  0439  1C03               	skipc
  5448  043A  2C47               	goto	L10
  5449  043B  0870               	movf	___ltdiv@divisor,w
  5450  043C  02F3               	subwf	___ltdiv@dividend,f
  5451  043D  0871               	movf	___ltdiv@divisor+1,w
  5452  043E  1C03               	skipc
  5453  043F  0F71               	incfsz	___ltdiv@divisor+1,w
  5454  0440  02F4               	subwf	___ltdiv@dividend+1,f
  5455  0441  0872               	movf	___ltdiv@divisor+2,w
  5456  0442  1C03               	skipc
  5457  0443  0A72               	incf	___ltdiv@divisor+2,w
  5458  0444  02F5               	subwf	___ltdiv@dividend+2,f
  5459  0445  1476               	bsf	___ltdiv@quotient,0
  5460  0446  1003               	clrc
  5461  0447                     L10:	
  5462  0447  0CF2               	rrf	___ltdiv@divisor+2,f
  5463  0448  0CF1               	rrf	___ltdiv@divisor+1,f
  5464  0449  0CF0               	rrf	___ltdiv@divisor,f
  5465  044A  0BF9               	decfsz	___ltdiv@counter,f
  5466  044B  2C2B               	goto	l2190
  5467  044C                     l2202:	
  5468  044C  0876               	movf	___ltdiv@quotient,w
  5469  044D  00F0               	movwf	?___ltdiv
  5470  044E  0877               	movf	___ltdiv@quotient+1,w
  5471  044F  00F1               	movwf	?___ltdiv+1
  5472  0450  0878               	movf	___ltdiv@quotient+2,w
  5473  0451  00F2               	movwf	?___ltdiv+2
  5474  0452  0008               	return
  5475  0453                     __end_of___ltdiv:	
  5476                           
  5477                           	psect	text39
  5478  059F                     __ptext39:	
  5479 ;; *************** function _coges_money_value *****************
  5480 ;; Defined at:
  5481 ;;		line 75 in file "coges.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  v_code          1    wreg     PTR unsigned char 
  5484 ;;		 -> v_buffer(10), 
  5485 ;;  v_out           1    0[COMMON] PTR unsigned um
  5486 ;;		 -> v_credito(3), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  v_code          1    9[COMMON] PTR unsigned char 
  5489 ;;		 -> v_buffer(10), 
  5490 ;;  v_byte          1   11[COMMON] unsigned char 
  5491 ;;  v_ind           1   10[COMMON] char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;		None               void
  5494 ;; Registers used:
  5495 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 300/0
  5498 ;;		On exit  : B00/0
  5499 ;;		Unchanged: 300/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5501 ;;      Params:         1       0       0       0
  5502 ;;      Locals:         3       0       0       0
  5503 ;;      Temps:          8       0       0       0
  5504 ;;      Totals:        12       0       0       0
  5505 ;;Total ram usage:       12 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_read_credito
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _coges_money_value
  5516  059F                     _coges_money_value:	
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _coges_money_value: [wreg-fsr0h+status,2+status,0]
  5520                           ;coges_money_value@v_code stored from wreg
  5521  059F  00F9               	movwf	coges_money_value@v_code
  5522                           
  5523                           ;coges.c: 83: unsigned char v_byte = 0x00;
  5524  05A0  01FB               	clrf	coges_money_value@v_byte
  5525                           
  5526                           ;coges.c: 85: *v_out = 0;
  5527  05A1  0870               	movf	coges_money_value@v_out,w
  5528  05A2  0084               	movwf	4
  5529  05A3  3004               	movlw	4
  5530  05A4  1383               	bcf	3,7	;select IRP bank0
  5531  05A5  0180               	clrf	0
  5532  05A6  0A84               	incf	4,f
  5533  05A7  0180               	clrf	0
  5534  05A8  0A84               	incf	4,f
  5535  05A9  0180               	clrf	0
  5536                           
  5537                           ;coges.c: 86: for ( v_ind=0x04; v_ind>=0; v_ind-=2 ) {
  5538  05AA  00FA               	movwf	coges_money_value@v_ind
  5539  05AB                     l2358:	
  5540                           
  5541                           ;coges.c: 87: for ( v_byte=0; v_byte<4; v_byte++ ) {
  5542  05AB  01FB               	clrf	coges_money_value@v_byte
  5543  05AC                     l2364:	
  5544                           
  5545                           ;coges.c: 88: *v_out = *v_out << 2;
  5546  05AC  25D9               	fcall	PL10	;call to abstracted procedure
  5547  05AD  3002               	movlw	2
  5548  05AE                     u1005:	
  5549  05AE  1003               	clrc
  5550  05AF  0DF1               	rlf	??_coges_money_value,f
  5551  05B0  0DF2               	rlf	??_coges_money_value+1,f
  5552  05B1  0DF3               	rlf	??_coges_money_value+2,f
  5553  05B2  3EFF               	addlw	-1
  5554  05B3  1D03               	skipz
  5555  05B4  2DAE               	goto	u1005
  5556  05B5  25E4               	fcall	PL12	;call to abstracted procedure
  5557                           
  5558                           ;coges.c: 90: *v_out = *v_out | ( ( (*(v_code + v_byte)) >> v_ind ) & 0b11 );
  5559  05B6  25D9               	fcall	PL10	;call to abstracted procedure
  5560  05B7  087B               	movf	coges_money_value@v_byte,w
  5561  05B8  0779               	addwf	coges_money_value@v_code,w
  5562  05B9  00F4               	movwf	??_coges_money_value+3
  5563  05BA  0084               	movwf	4
  5564  05BB  0800               	movf	0,w
  5565  05BC  00F5               	movwf	??_coges_money_value+4
  5566  05BD  0A7A               	incf	coges_money_value@v_ind,w
  5567  05BE  2DC1               	goto	u1014
  5568  05BF                     u1015:	
  5569  05BF  1003               	clrc
  5570  05C0  0CF5               	rrf	??_coges_money_value+4,f
  5571  05C1                     u1014:	
  5572  05C1  3EFF               	addlw	-1
  5573  05C2  1D03               	skipz
  5574  05C3  2DBF               	goto	u1015
  5575  05C4  0875               	movf	??_coges_money_value+4,w
  5576  05C5  3903               	andlw	3
  5577  05C6  00F6               	movwf	??_coges_money_value+5
  5578  05C7  01F7               	clrf	??_coges_money_value+6
  5579  05C8  01F8               	clrf	??_coges_money_value+7
  5580  05C9  04F1               	iorwf	??_coges_money_value,f
  5581  05CA  0877               	movf	??_coges_money_value+6,w
  5582  05CB  04F2               	iorwf	??_coges_money_value+1,f
  5583  05CC  0878               	movf	??_coges_money_value+7,w
  5584  05CD  04F3               	iorwf	??_coges_money_value+2,f
  5585  05CE  25E4               	fcall	PL12	;call to abstracted procedure
  5586  05CF  3004               	movlw	4
  5587  05D0  0AFB               	incf	coges_money_value@v_byte,f
  5588  05D1  027B               	subwf	coges_money_value@v_byte,w
  5589  05D2  1C03               	skipc
  5590  05D3  2DAC               	goto	l2364
  5591  05D4  30FE               	movlw	254
  5592  05D5  07FA               	addwf	coges_money_value@v_ind,f
  5593  05D6  1BFA               	btfsc	coges_money_value@v_ind,7
  5594  05D7  0008               	return
  5595  05D8  2DAB               	goto	l2358
  5596  05D9                     __end_of_coges_money_value:	
  5597  05D9                     PL10:	
  5598  05D9  0870               	movf	coges_money_value@v_out,w
  5599  05DA  0084               	movwf	4
  5600  05DB  0800               	movf	0,w
  5601  05DC  00F1               	movwf	??_coges_money_value
  5602  05DD  0A84               	incf	4,f
  5603  05DE  0800               	movf	0,w
  5604  05DF  00F2               	movwf	??_coges_money_value+1
  5605  05E0  0A84               	incf	4,f
  5606  05E1  0800               	movf	0,w
  5607  05E2  00F3               	movwf	??_coges_money_value+2
  5608  05E3  0008               	return
  5609  05E4                     __end_ofPL10:	
  5610  05E4                     PL12:	
  5611  05E4  0870               	movf	coges_money_value@v_out,w
  5612  05E5  0084               	movwf	4
  5613  05E6  0871               	movf	??_coges_money_value,w
  5614  05E7  0080               	movwf	0
  5615  05E8  0A84               	incf	4,f
  5616  05E9  0872               	movf	??_coges_money_value+1,w
  5617  05EA  0080               	movwf	0
  5618  05EB  0A84               	incf	4,f
  5619  05EC  0873               	movf	??_coges_money_value+2,w
  5620  05ED  0080               	movwf	0
  5621  05EE  0008               	return
  5622  05EF                     __end_ofPL12:	
  5623                           
  5624                           	psect	text40
  5625  0138                     __ptext40:	
  5626 ;; *************** function _print_err *****************
  5627 ;; Defined at:
  5628 ;;		line 40 in file "main.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;		None               void
  5635 ;; Registers used:
  5636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 300/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5642 ;;      Params:         0       0       0       0
  5643 ;;      Locals:         0       0       0       0
  5644 ;;      Temps:          3       0       0       0
  5645 ;;      Totals:         3       0       0       0
  5646 ;;Total ram usage:        3 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    4
  5649 ;; This function calls:
  5650 ;;		_lcd_print_s
  5651 ;; This function is called by:
  5652 ;;		_exec_function
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _print_err
  5658  0138                     _print_err:	
  5659                           
  5660                           ;main.c: 44: lcd_print_s( (unsigned char *) "Check\0" );
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in _print_err: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5664  0138  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5665  0139  00F8               	movwf	lcd_print_s@message
  5666  013A  3080               	movlw	128
  5667  013B  00F9               	movwf	lcd_print_s@message+1
  5668  013C  214B               	fcall	_lcd_print_s
  5669                           
  5670                           ;main.c: 46: _delay((unsigned long)((2500)*(4000000.0/4000.0)));
  5671  013D  300D               	movlw	13
  5672  013E  00FC               	movwf	??_print_err+2
  5673  013F  30AF               	movlw	175
  5674  0140  00FB               	movwf	??_print_err+1
  5675  0141  30C1               	movlw	193
  5676  0142  00FA               	movwf	??_print_err
  5677  0143                     u1567:	
  5678  0143  0BFA               	decfsz	??_print_err,f
  5679  0144  2943               	goto	u1567
  5680  0145  0BFB               	decfsz	??_print_err+1,f
  5681  0146  2943               	goto	u1567
  5682  0147  0BFC               	decfsz	??_print_err+2,f
  5683  0148  2943               	goto	u1567
  5684  0149  0000               	nop
  5685  014A  0008               	return
  5686  014B                     __end_of_print_err:	
  5687                           
  5688                           	psect	text41
  5689  00F6                     __ptext41:	
  5690 ;; *************** function _print_credito *****************
  5691 ;; Defined at:
  5692 ;;		line 109 in file "main.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  v_buffer        1    wreg     PTR unsigned char 
  5695 ;;		 -> v_buffer(10), 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  v_buffer        1   10[COMMON] PTR unsigned char 
  5698 ;;		 -> v_buffer(10), 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 300/0
  5705 ;;		On exit  : 300/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5708 ;;      Params:         0       0       0       0
  5709 ;;      Locals:         1       0       0       0
  5710 ;;      Temps:          0       0       0       0
  5711 ;;      Totals:         1       0       0       0
  5712 ;;Total ram usage:        1 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		_lcd_clear_display
  5717 ;;		_lcd_goto_home
  5718 ;;		_lcd_print_s
  5719 ;; This function is called by:
  5720 ;;		_exec_function
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _print_credito
  5726  00F6                     _print_credito:	
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _print_credito: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5730                           ;print_credito@v_buffer stored from wreg
  5731  00F6  00FA               	movwf	print_credito@v_buffer
  5732                           
  5733                           ;main.c: 148: lcd_clear_display();
  5734  00F7  20B2               	fcall	_lcd_clear_display
  5735                           
  5736                           ;main.c: 149: lcd_goto_home();
  5737  00F8  20A5               	fcall	_lcd_goto_home
  5738                           
  5739                           ;main.c: 151: lcd_print_s( (unsigned char * ) "Ci sono \0" );
  5740  00F9  305C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5741  00FA  00F8               	movwf	lcd_print_s@message
  5742  00FB  3080               	movlw	128
  5743  00FC  00F9               	movwf	lcd_print_s@message+1
  5744  00FD  214B               	fcall	_lcd_print_s
  5745                           
  5746                           ;main.c: 152: lcd_print_s( (unsigned char * ) v_buffer );
  5747  00FE  087A               	movf	print_credito@v_buffer,w
  5748  00FF  00F8               	movwf	lcd_print_s@message
  5749  0100  01F9               	clrf	lcd_print_s@message+1
  5750  0101  294B               	ljmp	l2232
  5751  0102                     __end_of_print_credito:	
  5752                           
  5753                           	psect	text42
  5754  014B                     __ptext42:	
  5755 ;; *************** function _lcd_print_s *****************
  5756 ;; Defined at:
  5757 ;;		line 481 in file "lcd1602.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  message         2    8[COMMON] PTR unsigned char 
  5760 ;;		 -> STR_6(14), v_menu(60), STR_5(14), STR_4(10), 
  5761 ;;		 -> STR_3(8), v_buffer(10), STR_2(9), STR_1(7), 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 300/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5773 ;;      Params:         2       0       0       0
  5774 ;;      Locals:         0       0       0       0
  5775 ;;      Temps:          0       0       0       0
  5776 ;;      Totals:         2       0       0       0
  5777 ;;Total ram usage:        2 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    3
  5780 ;; This function calls:
  5781 ;;		_lcd_write_data
  5782 ;; This function is called by:
  5783 ;;		_print_err
  5784 ;;		_write_credito
  5785 ;;		_print_credito
  5786 ;;		_sel_credito
  5787 ;;		_print_menu
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function _lcd_print_s
  5793  014B                     _lcd_print_s:	
  5794  014B                     l2232:	
  5795                           ;lcd1602.c: 482: while (*message){
  5796                           
  5797                           ;incstack = 0
  5798                           ; Regs used in _lcd_print_s: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5799                           
  5800  014B  0879               	movf	lcd_print_s@message+1,w
  5801  014C  1283               	bcf	3,5	;RP0=0, select bank0
  5802  014D  1303               	bcf	3,6	;RP1=0, select bank0
  5803  014E  00FF               	movwf	127
  5804  014F  0878               	movf	lcd_print_s@message,w
  5805  0150  0084               	movwf	4
  5806  0151  2001               	fcall	stringtab
  5807  0152  3A00               	xorlw	0
  5808  0153  1903               	btfsc	3,2
  5809  0154  0008               	return
  5810                           
  5811                           ;lcd1602.c: 483: lcd_write_data(*message++);
  5812  0155  0879               	movf	lcd_print_s@message+1,w
  5813  0156  00FF               	movwf	127
  5814  0157  0878               	movf	lcd_print_s@message,w
  5815  0158  0084               	movwf	4
  5816  0159  2001               	fcall	stringtab
  5817  015A  20B7               	fcall	_lcd_write_data
  5818  015B  0AF8               	incf	lcd_print_s@message,f
  5819  015C  1903               	skipnz
  5820  015D  0AF9               	incf	lcd_print_s@message+1,f
  5821  015E  294B               	goto	l2232
  5822  015F                     __end_of_lcd_print_s:	
  5823                           
  5824                           	psect	text43
  5825  00B7                     __ptext43:	
  5826 ;; *************** function _lcd_write_data *****************
  5827 ;; Defined at:
  5828 ;;		line 221 in file "lcd1602.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  data            1    wreg     unsigned char 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  data            1    7[COMMON] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;		None               void
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5842 ;;      Params:         0       0       0       0
  5843 ;;      Locals:         1       0       0       0
  5844 ;;      Temps:          0       0       0       0
  5845 ;;      Totals:         1       0       0       0
  5846 ;;Total ram usage:        1 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    2
  5849 ;; This function calls:
  5850 ;;		_lcd_command
  5851 ;; This function is called by:
  5852 ;;		_print_btn
  5853 ;;		_print_menu
  5854 ;;		_lcd_print_s
  5855 ;;		_lcd_set_char
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _lcd_write_data
  5861  00B7                     _lcd_write_data:	
  5862                           
  5863                           ;incstack = 0
  5864                           ; Regs used in _lcd_write_data: [wreg+status,2+status,0+pclath+cstack]
  5865                           ;lcd_write_data@data stored from wreg
  5866  00B7  00F7               	movwf	lcd_write_data@data
  5867                           
  5868                           ;lcd1602.c: 223: lcd_command( 0, 1, data );
  5869  00B8  01F1               	clrf	lcd_command@RS
  5870  00B9  0AF1               	incf	lcd_command@RS,f
  5871  00BA  00F2               	movwf	lcd_command@data
  5872  00BB  3000               	movlw	0
  5873  00BC  2E41               	ljmp	_lcd_command
  5874  00BD                     __end_of_lcd_write_data:	
  5875                           
  5876                           	psect	text44
  5877  00A5                     __ptext44:	
  5878 ;; *************** function _lcd_goto_home *****************
  5879 ;; Defined at:
  5880 ;;		line 470 in file "lcd1602.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;		None               void
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0, pclath, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5894 ;;      Params:         0       0       0       0
  5895 ;;      Locals:         0       0       0       0
  5896 ;;      Temps:          0       0       0       0
  5897 ;;      Totals:         0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    3
  5901 ;; This function calls:
  5902 ;;		_lcd_set_dd_ram_addr
  5903 ;; This function is called by:
  5904 ;;		_write_credito
  5905 ;;		_print_credito
  5906 ;;		_print_display
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _lcd_goto_home
  5912  00A5                     _lcd_goto_home:	
  5913                           
  5914                           ;lcd1602.c: 471: lcd_set_dd_ram_addr( 0x00 );
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _lcd_goto_home: [wreg+status,2+status,0+pclath+cstack]
  5918  00A5  3000               	movlw	0
  5919  00A6  28BD               	ljmp	_lcd_set_dd_ram_addr
  5920  00A7                     __end_of_lcd_goto_home:	
  5921                           
  5922                           	psect	text45
  5923  00BD                     __ptext45:	
  5924 ;; *************** function _lcd_set_dd_ram_addr *****************
  5925 ;; Defined at:
  5926 ;;		line 215 in file "lcd1602.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  ram_addr        1    wreg     unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  ram_addr        1    7[COMMON] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, pclath, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/100
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5940 ;;      Params:         0       0       0       0
  5941 ;;      Locals:         1       0       0       0
  5942 ;;      Temps:          0       0       0       0
  5943 ;;      Totals:         1       0       0       0
  5944 ;;Total ram usage:        1 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    2
  5947 ;; This function calls:
  5948 ;;		_lcd_command
  5949 ;; This function is called by:
  5950 ;;		_lcd_init
  5951 ;;		_lcd_goto_home
  5952 ;;		_lcd_goto_xy
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _lcd_set_dd_ram_addr
  5958  00BD                     _lcd_set_dd_ram_addr:	
  5959                           
  5960                           ;incstack = 0
  5961                           ; Regs used in _lcd_set_dd_ram_addr: [wreg+status,2+status,0+pclath+cstack]
  5962                           ;lcd_set_dd_ram_addr@ram_addr stored from wreg
  5963  00BD  00F7               	movwf	lcd_set_dd_ram_addr@ram_addr
  5964                           
  5965                           ;lcd1602.c: 217: lcd_command( 0, 0, 0b10000000 | (ram_addr & 0b01111111) );
  5966  00BE  01F1               	clrf	lcd_command@RS
  5967  00BF  397F               	andlw	127
  5968  00C0  3880               	iorlw	128
  5969  00C1  00F2               	movwf	lcd_command@data
  5970  00C2  3000               	movlw	0
  5971  00C3  2E41               	ljmp	_lcd_command
  5972  00C4                     __end_of_lcd_set_dd_ram_addr:	
  5973                           
  5974                           	psect	text46
  5975  00B2                     __ptext46:	
  5976 ;; *************** function _lcd_clear_display *****************
  5977 ;; Defined at:
  5978 ;;		line 112 in file "lcd1602.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;		None               void
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, pclath, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/100
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5992 ;;      Params:         0       0       0       0
  5993 ;;      Locals:         0       0       0       0
  5994 ;;      Temps:          0       0       0       0
  5995 ;;      Totals:         0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    2
  5999 ;; This function calls:
  6000 ;;		_lcd_command
  6001 ;; This function is called by:
  6002 ;;		_write_credito
  6003 ;;		_print_credito
  6004 ;;		_exec_function
  6005 ;;		_lcd_init
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _lcd_clear_display
  6011  00B2                     _lcd_clear_display:	
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _lcd_clear_display: [wreg+status,2+status,0+pclath+cstack]
  6015  00B2  3000               	movlw	0
  6016                           
  6017                           ;lcd1602.c: 114: lcd_command( 0, 0, 0b00000001 );
  6018  00B3  01F1               	clrf	lcd_command@RS
  6019  00B4  01F2               	clrf	lcd_command@data
  6020  00B5  0AF2               	incf	lcd_command@data,f
  6021  00B6  2E41               	ljmp	_lcd_command
  6022  00B7                     __end_of_lcd_clear_display:	
  6023                           
  6024                           	psect	text47
  6025  00EB                     __ptext47:	
  6026 ;; *************** function _pic_eeprom_write *****************
  6027 ;; Defined at:
  6028 ;;		line 17 in file "pic_eeprom.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  v_addr          1    wreg     unsigned char 
  6031 ;;  v_data          1    0[COMMON] unsigned char 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  v_addr          1    1[COMMON] unsigned char 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;		None               void
  6036 ;; Registers used:
  6037 ;;		wreg
  6038 ;; Tracked objects:
  6039 ;;		On entry : 300/100
  6040 ;;		On exit  : 300/100
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6043 ;;      Params:         1       0       0       0
  6044 ;;      Locals:         1       0       0       0
  6045 ;;      Temps:          0       0       0       0
  6046 ;;      Totals:         2       0       0       0
  6047 ;;Total ram usage:        2 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_exec_function
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _pic_eeprom_write
  6058  00EB                     _pic_eeprom_write:	
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _pic_eeprom_write: [wreg]
  6062                           ;pic_eeprom_write@v_addr stored from wreg
  6063  00EB  00F1               	movwf	pic_eeprom_write@v_addr
  6064                           
  6065                           ;pic_eeprom.c: 19: EEADR = v_addr;
  6066  00EC  009B               	movwf	27	;volatile
  6067                           
  6068                           ;pic_eeprom.c: 20: EEDATA = v_data;
  6069  00ED  0870               	movf	pic_eeprom_write@v_data,w
  6070  00EE  009A               	movwf	26	;volatile
  6071                           
  6072                           ;pic_eeprom.c: 23: EECON1bits.WREN = 1;
  6073  00EF  151C               	bsf	28,2	;volsfr
  6074                           
  6075                           ;pic_eeprom.c: 24: EECON2 = 0x55;
  6076  00F0  3055               	movlw	85
  6077  00F1  009D               	movwf	29	;volsfr
  6078                           
  6079                           ;pic_eeprom.c: 25: EECON2 = 0xAA;
  6080  00F2  30AA               	movlw	170
  6081  00F3  009D               	movwf	29	;volsfr
  6082                           
  6083                           ;pic_eeprom.c: 26: EECON1bits.WR = 1;
  6084  00F4  149C               	bsf	28,1	;volsfr
  6085  00F5  0008               	return
  6086  00F6                     __end_of_pic_eeprom_write:	
  6087                           
  6088                           	psect	text48
  6089  01B3                     __ptext48:	
  6090 ;; *************** function _lcd_display_onoff_control *****************
  6091 ;; Defined at:
  6092 ;;		line 130 in file "lcd1602.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  D               1    wreg     unsigned char 
  6095 ;;  C               1    7[COMMON] unsigned char 
  6096 ;;  B               1    8[COMMON] unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  D               1   11[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;		None               void
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/100
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6108 ;;      Params:         2       0       0       0
  6109 ;;      Locals:         1       0       0       0
  6110 ;;      Temps:          2       0       0       0
  6111 ;;      Totals:         5       0       0       0
  6112 ;;Total ram usage:        5 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    2
  6115 ;; This function calls:
  6116 ;;		_lcd_command
  6117 ;; This function is called by:
  6118 ;;		_exec_function
  6119 ;;		_lcd_init
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           
  6124                           ;psect for function _lcd_display_onoff_control
  6125  01B3                     _lcd_display_onoff_control:	
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _lcd_display_onoff_control: [wreg+status,2+status,0+pclath+cstack]
  6129                           ;lcd_display_onoff_control@D stored from wreg
  6130  01B3  00FB               	movwf	lcd_display_onoff_control@D
  6131                           
  6132                           ;lcd1602.c: 132: lcd_command( 0, 0, 0b00001000 | (D<<2) | (C<<1) | B );
  6133  01B4  01F1               	clrf	lcd_command@RS
  6134  01B5  0877               	movf	lcd_display_onoff_control@C,w
  6135  01B6  00F9               	movwf	??_lcd_display_onoff_control
  6136  01B7  1003               	clrc
  6137  01B8  0DF9               	rlf	??_lcd_display_onoff_control,f
  6138  01B9  087B               	movf	lcd_display_onoff_control@D,w
  6139  01BA  00FA               	movwf	??_lcd_display_onoff_control+1
  6140  01BB  3001               	movlw	1
  6141  01BC  1003               	clrc
  6142  01BD                     L11:	
  6143  01BD  0DFA               	rlf	??_lcd_display_onoff_control+1,f
  6144  01BE  3EFF               	addlw	-1
  6145  01BF  1003               	clrc
  6146  01C0  1D03               	skipz
  6147  01C1  29BD               	goto	L11
  6148  01C2  0D7A               	rlf	??_lcd_display_onoff_control+1,w
  6149  01C3  0479               	iorwf	??_lcd_display_onoff_control,w
  6150  01C4  0478               	iorwf	lcd_display_onoff_control@B,w
  6151  01C5  3808               	iorlw	8
  6152  01C6  00F2               	movwf	lcd_command@data
  6153  01C7  3000               	movlw	0
  6154  01C8  2E41               	ljmp	_lcd_command
  6155  01C9                     __end_of_lcd_display_onoff_control:	
  6156                           
  6157                           	psect	text49
  6158  0641                     __ptext49:	
  6159 ;; *************** function _lcd_command *****************
  6160 ;; Defined at:
  6161 ;;		line 54 in file "lcd1602.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  RW              1    wreg     unsigned char 
  6164 ;;  RS              1    1[COMMON] unsigned char 
  6165 ;;  data            1    2[COMMON] unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  RW              1    4[COMMON] unsigned char 
  6168 ;;  v_ind           1    6[COMMON] char 
  6169 ;;  v_nibble        1    5[COMMON] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/100
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6179 ;;      Params:         2       0       0       0
  6180 ;;      Locals:         3       0       0       0
  6181 ;;      Temps:          1       0       0       0
  6182 ;;      Totals:         6       0       0       0
  6183 ;;Total ram usage:        6 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    1
  6186 ;; This function calls:
  6187 ;;		_lcd_pin_lo
  6188 ;;		_lcd_pulse
  6189 ;; This function is called by:
  6190 ;;		_lcd_clear_display
  6191 ;;		_lcd_entry_mode_set
  6192 ;;		_lcd_display_onoff_control
  6193 ;;		_lcd_function_set
  6194 ;;		_lcd_set_cg_ram_addr
  6195 ;;		_lcd_set_dd_ram_addr
  6196 ;;		_lcd_write_data
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function _lcd_command
  6202  0641                     _lcd_command:	
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  6206                           ;lcd_command@RW stored from wreg
  6207  0641  00F4               	movwf	lcd_command@RW
  6208                           
  6209                           ;lcd1602.c: 58: signed char v_ind = 0x00;
  6210  0642  01F6               	clrf	lcd_command@v_ind
  6211                           
  6212                           ;lcd1602.c: 63: SR_PORTAbits.RW = RW;
  6213  0643  0874               	movf	lcd_command@RW,w
  6214  0644  1683               	bsf	3,5	;RP0=1, select bank1
  6215  0645  1303               	bcf	3,6	;RP1=0, select bank1
  6216  0646  1D03               	skipz
  6217  0647  17EE               	bsf	110,7	;volatile
  6218  0648  1903               	skipnz
  6219  0649  13EE               	bcf	110,7	;volatile
  6220                           
  6221                           ;lcd1602.c: 65: SR_PORTAbits.RS = RS;
  6222  064A  0871               	movf	lcd_command@RS,w
  6223  064B  1D03               	skipz
  6224  064C  176E               	bsf	110,6	;volatile
  6225  064D  1903               	skipnz
  6226  064E  136E               	bcf	110,6	;volatile
  6227                           
  6228                           ;lcd1602.c: 66: SR_PORTAbits.E = 0;
  6229  064F  106E               	bcf	110,0	;volatile
  6230                           
  6231                           ;lcd1602.c: 67: PORTA = SR_PORTA;
  6232  0650  086E               	movf	110,w	;volatile
  6233  0651  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0652  0085               	movwf	5	;volatile
  6235                           
  6236                           ;lcd1602.c: 70: C_TRISAbits.RW = RW;
  6237  0653  0874               	movf	lcd_command@RW,w
  6238  0654  1683               	bsf	3,5	;RP0=1, select bank1
  6239  0655  1D03               	skipz
  6240  0656  1785               	bsf	5,7	;volatile
  6241  0657  1903               	skipnz
  6242  0658  1385               	bcf	5,7	;volatile
  6243                           
  6244                           ;lcd1602.c: 72: C_TRISAbits.RS = RS;
  6245  0659  0871               	movf	lcd_command@RS,w
  6246  065A  1D03               	skipz
  6247  065B  1705               	bsf	5,6	;volatile
  6248  065C  1903               	skipnz
  6249  065D  1305               	bcf	5,6	;volatile
  6250                           
  6251                           ;lcd1602.c: 73: C_TRISAbits.E = 0;
  6252  065E  1005               	bcf	5,0	;volatile
  6253                           
  6254                           ;lcd1602.c: 75: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  6255  065F  306D               	movlw	109
  6256  0660  00F3               	movwf	??_lcd_command
  6257  0661                     u1577:	
  6258  0661  0BF3               	decfsz	??_lcd_command,f
  6259  0662  2E61               	goto	u1577
  6260  0663  2E64               	nop2	;nop
  6261                           
  6262                           ;lcd1602.c: 93: for ( v_ind=0x04; v_ind>=0x00; v_ind-=4 ) {
  6263  0664  3004               	movlw	4
  6264  0665  00F6               	movwf	lcd_command@v_ind
  6265  0666                     l1986:	
  6266                           
  6267                           ;lcd1602.c: 94: v_nibble = ( data >> v_ind ) & 0b00001111;
  6268  0666  0872               	movf	lcd_command@data,w
  6269  0667  00F3               	movwf	??_lcd_command
  6270  0668  0A76               	incf	lcd_command@v_ind,w
  6271  0669  2E6C               	goto	u674
  6272  066A                     u675:	
  6273  066A  1003               	clrc
  6274  066B  0CF3               	rrf	??_lcd_command,f
  6275  066C                     u674:	
  6276  066C  3EFF               	addlw	-1
  6277  066D  1D03               	skipz
  6278  066E  2E6A               	goto	u675
  6279  066F  0873               	movf	??_lcd_command,w
  6280  0670  00F5               	movwf	lcd_command@v_nibble
  6281  0671  300F               	movlw	15
  6282  0672  05F5               	andwf	lcd_command@v_nibble,f
  6283                           
  6284                           ;lcd1602.c: 97: SR_PORTAbits.DATA = v_nibble;
  6285  0673  0875               	movf	lcd_command@v_nibble,w
  6286  0674  00F3               	movwf	??_lcd_command
  6287  0675  0DF3               	rlf	??_lcd_command,f
  6288  0676  1683               	bsf	3,5	;RP0=1, select bank1
  6289  0677  1303               	bcf	3,6	;RP1=0, select bank1
  6290  0678  086E               	movf	110,w	;volatile
  6291  0679  0673               	xorwf	??_lcd_command,w
  6292  067A  39E1               	andlw	-31
  6293  067B  0673               	xorwf	??_lcd_command,w
  6294  067C  00EE               	movwf	110	;volatile
  6295                           
  6296                           ;lcd1602.c: 98: PORTA = SR_PORTA;
  6297  067D  086E               	movf	110,w	;volatile
  6298  067E  1283               	bcf	3,5	;RP0=0, select bank0
  6299  067F  0085               	movwf	5	;volatile
  6300                           
  6301                           ;lcd1602.c: 99: C_TRISAbits.DATA = v_nibble;
  6302  0680  0875               	movf	lcd_command@v_nibble,w
  6303  0681  00F3               	movwf	??_lcd_command
  6304  0682  0DF3               	rlf	??_lcd_command,f
  6305  0683  1683               	bsf	3,5	;RP0=1, select bank1
  6306  0684  0805               	movf	5,w	;volatile
  6307  0685  0673               	xorwf	??_lcd_command,w
  6308  0686  39E1               	andlw	-31
  6309  0687  0673               	xorwf	??_lcd_command,w
  6310  0688  0085               	movwf	5	;volatile
  6311                           
  6312                           ;lcd1602.c: 100: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  6313  0689  306D               	movlw	109
  6314  068A  00F3               	movwf	??_lcd_command
  6315  068B                     u1587:	
  6316  068B  0BF3               	decfsz	??_lcd_command,f
  6317  068C  2E8B               	goto	u1587
  6318  068D  2E8E               	nop2	;nop
  6319                           
  6320                           ;lcd1602.c: 103: lcd_pulse();
  6321  068E  219D               	fcall	_lcd_pulse
  6322  068F  30FC               	movlw	252
  6323  0690  07F6               	addwf	lcd_command@v_ind,f
  6324  0691  1FF6               	btfss	lcd_command@v_ind,7
  6325  0692  2E66               	goto	l1986
  6326                           
  6327                           ;lcd1602.c: 104: }
  6328                           ;lcd1602.c: 108: lcd_pin_lo();
  6329  0693  2987               	ljmp	l1882
  6330  0694                     __end_of_lcd_command:	
  6331                           
  6332                           	psect	text50
  6333  019D                     __ptext50:	
  6334 ;; *************** function _lcd_pulse *****************
  6335 ;; Defined at:
  6336 ;;		line 24 in file "lcd1602.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/100
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6350 ;;      Params:         0       0       0       0
  6351 ;;      Locals:         0       0       0       0
  6352 ;;      Temps:          1       0       0       0
  6353 ;;      Totals:         1       0       0       0
  6354 ;;Total ram usage:        1 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_lcd_command
  6360 ;;		_lcd_function_set_8bit
  6361 ;;		_lcd_function_set_4bit
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function _lcd_pulse
  6367  019D                     _lcd_pulse:	
  6368                           
  6369                           ;lcd1602.c: 25: C_TRISAbits.E=1;
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _lcd_pulse: [wreg]
  6373  019D  1683               	bsf	3,5	;RP0=1, select bank1
  6374  019E  1303               	bcf	3,6	;RP1=0, select bank1
  6375  019F  1405               	bsf	5,0	;volatile
  6376                           
  6377                           ;lcd1602.c: 26: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  6378  01A0  306D               	movlw	109
  6379  01A1  00F0               	movwf	??_lcd_pulse
  6380  01A2                     u1597:	
  6381  01A2  0BF0               	decfsz	??_lcd_pulse,f
  6382  01A3  29A2               	goto	u1597
  6383  01A4  29A5               	nop2	;nop
  6384                           
  6385                           ;lcd1602.c: 28: SR_PORTAbits.E=0;
  6386  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  6387  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  6388  01A7  106E               	bcf	110,0	;volatile
  6389                           
  6390                           ;lcd1602.c: 29: PORTA = SR_PORTA;
  6391  01A8  086E               	movf	110,w	;volatile
  6392  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6393  01AA  0085               	movwf	5	;volatile
  6394                           
  6395                           ;lcd1602.c: 30: C_TRISAbits.E=0;
  6396  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6397  01AC  1005               	bcf	5,0	;volatile
  6398                           
  6399                           ;lcd1602.c: 31: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  6400  01AD  306D               	movlw	109
  6401  01AE  00F0               	movwf	??_lcd_pulse
  6402  01AF                     u1607:	
  6403  01AF  0BF0               	decfsz	??_lcd_pulse,f
  6404  01B0  29AF               	goto	u1607
  6405  01B1  29B2               	nop2	;nop
  6406  01B2  0008               	return
  6407  01B3                     __end_of_lcd_pulse:	
  6408                           
  6409                           	psect	text51
  6410  0187                     __ptext51:	
  6411 ;; *************** function _lcd_pin_lo *****************
  6412 ;; Defined at:
  6413 ;;		line 34 in file "lcd1602.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;		None               void
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/100
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6427 ;;      Params:         0       0       0       0
  6428 ;;      Locals:         0       0       0       0
  6429 ;;      Temps:          1       0       0       0
  6430 ;;      Totals:         1       0       0       0
  6431 ;;Total ram usage:        1 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_lcd_command
  6437 ;;		_lcd_function_set_8bit
  6438 ;;		_lcd_function_set_4bit
  6439 ;;		_lcd_init
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function _lcd_pin_lo
  6445  0187                     _lcd_pin_lo:	
  6446  0187                     l1882:	
  6447                           ;incstack = 0
  6448                           ; Regs used in _lcd_pin_lo: [wreg+status,2+status,0]
  6449                           
  6450                           
  6451                           ;lcd1602.c: 36: SR_PORTAbits.RW=0;
  6452  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6453  0188  1303               	bcf	3,6	;RP1=0, select bank1
  6454  0189  13EE               	bcf	110,7	;volatile
  6455                           
  6456                           ;lcd1602.c: 38: SR_PORTAbits.RS=0;
  6457  018A  136E               	bcf	110,6	;volatile
  6458                           
  6459                           ;lcd1602.c: 39: SR_PORTAbits.E=0;
  6460  018B  106E               	bcf	110,0	;volatile
  6461                           
  6462                           ;lcd1602.c: 41: SR_PORTAbits.DATA=0b0000;
  6463  018C  30E1               	movlw	-31
  6464  018D  05EE               	andwf	110,f	;volatile
  6465                           
  6466                           ;lcd1602.c: 42: PORTA = SR_PORTA;
  6467  018E  086E               	movf	110,w	;volatile
  6468  018F  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0190  0085               	movwf	5	;volatile
  6470                           
  6471                           ;lcd1602.c: 45: C_TRISAbits.RW=0;
  6472  0191  1683               	bsf	3,5	;RP0=1, select bank1
  6473  0192  1385               	bcf	5,7	;volatile
  6474                           
  6475                           ;lcd1602.c: 47: C_TRISAbits.RS=0;
  6476  0193  1305               	bcf	5,6	;volatile
  6477                           
  6478                           ;lcd1602.c: 48: C_TRISAbits.E=0;
  6479  0194  1005               	bcf	5,0	;volatile
  6480                           
  6481                           ;lcd1602.c: 50: C_TRISAbits.DATA=0b0000;
  6482  0195  30E1               	movlw	-31
  6483  0196  0585               	andwf	5,f	;volatile
  6484                           
  6485                           ;lcd1602.c: 51: _delay((unsigned long)((330)*(4000000.0/4000000.0)));
  6486  0197  306D               	movlw	109
  6487  0198  00F0               	movwf	??_lcd_pin_lo
  6488  0199                     u1617:	
  6489  0199  0BF0               	decfsz	??_lcd_pin_lo,f
  6490  019A  2999               	goto	u1617
  6491  019B  299C               	nop2	;nop
  6492  019C  0008               	return
  6493  019D                     __end_of_lcd_pin_lo:	
  6494                           
  6495                           	psect	text52
  6496  011C                     __ptext52:	
  6497 ;; *************** function _iopins_set_backlight *****************
  6498 ;; Defined at:
  6499 ;;		line 18 in file "io_pins.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  v_val           1    wreg     unsigned char 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  v_val           1    0[COMMON] unsigned char 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;		None               void
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0, pclath, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 300/100
  6510 ;;		On exit  : 300/100
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6513 ;;      Params:         0       0       0       0
  6514 ;;      Locals:         1       0       0       0
  6515 ;;      Temps:          0       0       0       0
  6516 ;;      Totals:         1       0       0       0
  6517 ;;Total ram usage:        1 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    1
  6520 ;; This function calls:
  6521 ;;		_iopins_SendSignals
  6522 ;; This function is called by:
  6523 ;;		_exec_function
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function _iopins_set_backlight
  6530  011C                     _iopins_set_backlight:	
  6531                           
  6532                           ;incstack = 0
  6533                           ; Regs used in _iopins_set_backlight: [wreg+status,2+status,0+pclath+cstack]
  6534                           ;iopins_set_backlight@v_val stored from wreg
  6535  011C  00F0               	movwf	iopins_set_backlight@v_val
  6536                           
  6537                           ;io_pins.c: 20: SR_PORTBbits.BACKLIGHT = v_val;
  6538  011D  0870               	movf	iopins_set_backlight@v_val,w
  6539  011E  1D03               	skipz
  6540  011F  17EF               	bsf	111,7	;volatile
  6541  0120  1903               	skipnz
  6542  0121  13EF               	bcf	111,7	;volatile
  6543                           
  6544                           ;io_pins.c: 21: iopins_SendSignals();
  6545  0122  20AA               	fcall	_iopins_SendSignals
  6546                           
  6547                           ;io_pins.c: 22: C_TRISBbits.BACKLIGHT = v_val;
  6548  0123  0870               	movf	iopins_set_backlight@v_val,w
  6549  0124  1683               	bsf	3,5	;RP0=1, select bank1
  6550  0125  1D03               	skipz
  6551  0126  1786               	bsf	6,7	;volatile
  6552  0127  1903               	skipnz
  6553  0128  1386               	bcf	6,7	;volatile
  6554  0129  0008               	return
  6555  012A                     __end_of_iopins_set_backlight:	
  6556                           
  6557                           	psect	text53
  6558  00AA                     __ptext53:	
  6559 ;; *************** function _iopins_SendSignals *****************
  6560 ;; Defined at:
  6561 ;;		line 3 in file "io_pins.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		wreg
  6570 ;; Tracked objects:
  6571 ;;		On entry : 300/100
  6572 ;;		On exit  : 300/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6575 ;;      Params:         0       0       0       0
  6576 ;;      Locals:         0       0       0       0
  6577 ;;      Temps:          0       0       0       0
  6578 ;;      Totals:         0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_iopins_init
  6585 ;;		_iopins_set_backlight
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _iopins_SendSignals
  6591  00AA                     _iopins_SendSignals:	
  6592                           
  6593                           ;io_pins.c: 5: C_PORTB = SR_PORTB;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _iopins_SendSignals: [wreg]
  6597  00AA  086F               	movf	111,w	;volatile
  6598  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  6599  00AC  0086               	movwf	6	;volatile
  6600  00AD  0008               	return
  6601  00AE                     __end_of_iopins_SendSignals:	
  6602  007E                     btemp	set	126	;btemp
  6603  007E                     wtemp	set	126
  6604  007E                     wtemp0	set	126
  6605  0080                     wtemp1	set	128
  6606  0082                     wtemp2	set	130
  6607  0084                     wtemp3	set	132
  6608  0086                     wtemp4	set	134
  6609  0088                     wtemp5	set	136
  6610  007F                     wtemp6	set	127
  6611  007E                     ttemp	set	126
  6612  007E                     ttemp0	set	126
  6613  0081                     ttemp1	set	129
  6614  0084                     ttemp2	set	132
  6615  0087                     ttemp3	set	135
  6616  007F                     ttemp4	set	127
  6617  007E                     ltemp	set	126
  6618  007E                     ltemp0	set	126
  6619  0082                     ltemp1	set	130
  6620  0086                     ltemp2	set	134
  6621  0080                     ltemp3	set	128


Data Sizes:
    Strings     65
    Constant    60
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      37
    BANK1            78      0       0
    BANK2            48      0       0

Pointer List with Targets:

    coges_val_to_string@v_out	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    coges_money_value@v_code	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    coges_money_value@v_out	PTR unsigned um size(1) Largest target is 3
		 -> v_credito(BANK0[3]), 

    coges_money_code@v_out	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    byte_code@v_cr	PTR unsigned char  size(1) Largest target is 3
		 -> coges_money_code@v_24b(BANK0[3]), 

    byte_code@v_cs	PTR unsigned char  size(1) Largest target is 1
		 -> coges_money_code@v_checksum(BANK0[1]), 

    byte_code@v_out	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    m24c02_multibyte_write@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    m24c02_multibyte_write@p_err	PTR unsigned char  size(1) Largest target is 1
		 -> p_24c02_error(BANK0[1]), 

    m24c02_sequential_random_read@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> m24c02_random_address_read@v_out(COMMON[1]), v_buffer(BANK0[10]), 

    m24c02_sequential_random_read@p_err	PTR unsigned char  size(1) Largest target is 1
		 -> p_24c02_error(BANK0[1]), 

    m24c02_sequential_current_read@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> m24c02_random_address_read@v_out(COMMON[1]), m24c02_current_address_read@v_out(COMMON[1]), v_buffer(BANK0[10]), 

    m24c02_sequential_current_read@p_err	PTR unsigned char  size(1) Largest target is 1
		 -> p_24c02_error(BANK0[1]), 

    m24c02_set_random_address@p_err	PTR unsigned char  size(1) Largest target is 1
		 -> p_24c02_error(BANK0[1]), 

    m24c02_read_byte@v_out	PTR unsigned char  size(1) Largest target is 10
		 -> m24c02_random_address_read@v_out(COMMON[1]), m24c02_current_address_read@v_out(COMMON[1]), v_buffer(BANK0[10]), 

    lcd_print_s@message	PTR unsigned char  size(2) Largest target is 60
		 -> STR_6(CODE[14]), v_menu(CODE[60]), STR_5(CODE[14]), STR_4(CODE[10]), 
		 -> STR_3(CODE[8]), v_buffer(BANK0[10]), STR_2(CODE[9]), STR_1(CODE[7]), 

    print_display@v_menu_item	PTR char  size(1) Largest target is 1
		 -> main@v_menu_item(BANK0[1]), 

    print_menu@v_item	PTR char  size(1) Largest target is 1
		 -> main@v_menu_item(BANK0[1]), 

    exec_function@v_item	PTR char  size(1) Largest target is 1
		 -> main@v_menu_item(BANK0[1]), 

    sel_credito@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    sel_credito@v_credito	PTR unsigned um size(1) Largest target is 3
		 -> v_credito(BANK0[3]), 

    print_credito@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 

    read_credito@v_credito	PTR unsigned um size(1) Largest target is 3
		 -> v_credito(BANK0[3]), 

    read_credito@v_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> v_buffer(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _main->_print_btns
    _main->_print_display
    _print_display->_print_menu
    _print_menu->_lcd_goto_xy
    _lcd_set_char->_lcd_set_cg_ram_addr
    _lcd_set_char->_lcd_write_data
    _lcd_set_cg_ram_addr->_lcd_command
    _lcd_init->_lcd_display_onoff_control
    _lcd_init->_lcd_function_set
    _lcd_function_set_8bit->_lcd_pin_lo
    _lcd_function_set_8bit->_lcd_pulse
    _lcd_function_set_4bit->_lcd_pin_lo
    _lcd_function_set_4bit->_lcd_pulse
    _lcd_function_set->_lcd_command
    _lcd_entry_mode_set->_lcd_command
    _write_credito->_coges_val_to_string
    _m24c02_multibyte_write->_m24c02_set_random_address
    _coges_money_code->_byte_code
    _sel_credito->_coges_val_to_string
    _sel_credito->_print_btns
    _print_btns->_lcd_goto_xy
    _print_btn->_lcd_write_data
    _lcd_goto_xy->_lcd_set_dd_ram_addr
    _read_credito->_coges_val_to_string
    _m24c02_sequential_random_read->_m24c02_sequential_current_read
    _m24c02_set_random_address->_m24c02_send_device_sel
    _m24c02_send_byte->_i2c_send_bit1
    _m24c02_sequential_current_read->_m24c02_send_device_sel
    _m24c02_send_device_sel->_i2c_send_bit1
    _m24c02_read_byte->_i2c_read_bit_ack
    _m24c02_read_byte->_i2c_send_bit0
    _coges_val_to_string->___ltdiv
    _print_err->_lcd_print_s
    _print_credito->_lcd_print_s
    _lcd_print_s->_lcd_write_data
    _lcd_write_data->_lcd_command
    _lcd_goto_home->_lcd_set_dd_ram_addr
    _lcd_set_dd_ram_addr->_lcd_command
    _lcd_clear_display->_lcd_command
    _lcd_display_onoff_control->_lcd_command
    _lcd_command->_lcd_pin_lo
    _lcd_command->_lcd_pulse

Critical Paths under _main in BANK0

    _main->_exec_function
    _print_display->_print_menu
    _exec_function->_write_credito
    _write_credito->_m24c02_multibyte_write
    _sel_credito->_coges_val_to_string
    _read_credito->_m24c02_sequential_random_read
    _m24c02_sequential_random_read->_m24c02_sequential_current_read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4   58014
                                             17 BANK0      6     2      4
                      _exec_function
                        _i2c_Detatch
                        _iopins_init
               _iopins_set_backlight
                           _lcd_init
                       _lcd_set_char
                    _pic_eeprom_read
                         _print_btns
                      _print_display
                        _wait_button
 ---------------------------------------------------------------------------------
 (1) _print_display                                        1     1      0    6858
                                             13 COMMON     1     1      0
                      _lcd_goto_home
                         _print_menu
 ---------------------------------------------------------------------------------
 (2) _print_menu                                           6     6      0    5450
                                             11 COMMON     2     2      0
                                              0 BANK0      4     4      0
                             ___bmul
                        _lcd_goto_xy
                        _lcd_print_s
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     118
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_set_char                                         3     3      0    2856
                                              8 COMMON     3     3      0
                _lcd_set_cg_ram_addr
                     _lcd_write_data
                    _pic_eeprom_read
 ---------------------------------------------------------------------------------
 (1) _pic_eeprom_read                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cg_ram_addr                                  1     1      0    1348
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    7404
                                             12 COMMON     2     2      0
                  _lcd_clear_display
          _lcd_display_onoff_control
                 _lcd_entry_mode_set
                   _lcd_function_set
              _lcd_function_set_4bit
              _lcd_function_set_8bit
                         _lcd_pin_lo
                _lcd_set_dd_ram_addr
 ---------------------------------------------------------------------------------
 (2) _lcd_function_set_8bit                                1     1      0       0
                                              1 COMMON     1     1      0
                         _lcd_pin_lo
                          _lcd_pulse
 ---------------------------------------------------------------------------------
 (2) _lcd_function_set_4bit                                1     1      0       0
                                              1 COMMON     1     1      0
                         _lcd_pin_lo
                          _lcd_pulse
 ---------------------------------------------------------------------------------
 (2) _lcd_function_set                                     5     3      2    1520
                                              7 COMMON     5     3      2
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_entry_mode_set                                   2     1      1    1434
                                              7 COMMON     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _iopins_init                                          3     3      0       0
                                              0 COMMON     3     3      0
                 _iopins_SendSignals
 ---------------------------------------------------------------------------------
 (1) _i2c_Detatch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exec_function                                        4     4      0   36422
                                             13 BANK0      4     4      0
               _iopins_set_backlight
                  _lcd_clear_display
          _lcd_display_onoff_control
                   _pic_eeprom_write
                      _print_credito
                          _print_err
                       _read_credito
                        _sel_credito
                      _write_credito
 ---------------------------------------------------------------------------------
 (2) _write_credito                                        6     3      3   11164
                                              7 BANK0      6     3      3
                   _coges_money_code
                _coges_val_to_string
                  _lcd_clear_display
                      _lcd_goto_home
                        _lcd_goto_xy
                        _lcd_print_s
             _m24c02_multibyte_write
 ---------------------------------------------------------------------------------
 (3) _m24c02_multibyte_write                               8     4      4    2180
                                             11 COMMON     1     1      0
                                              0 BANK0      7     3      4
                   _i2c_read_bit_ack
                      _i2c_send_stop
                   _m24c02_send_byte
          _m24c02_set_random_address
 ---------------------------------------------------------------------------------
 (3) _coges_money_code                                    10     5      5     998
                                              8 COMMON     5     0      5
                                              0 BANK0      5     5      0
                          _byte_code
 ---------------------------------------------------------------------------------
 (4) _byte_code                                            8     6      2     521
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _sel_credito                                          7     6      1    9773
                                              5 BANK0      7     6      1
                _coges_val_to_string
                        _lcd_goto_xy
                        _lcd_print_s
                         _print_btns
                        _wait_button
 ---------------------------------------------------------------------------------
 (1) _wait_button                                          3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _print_btns                                           4     1      3    4262
                                             11 COMMON     3     0      3
                                              0 BANK0      1     1      0
                        _lcd_goto_xy
                          _print_btn
 ---------------------------------------------------------------------------------
 (2) _print_btn                                            2     1      1    1650
                                              8 COMMON     2     1      1
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_goto_xy                                          3     2      1    1712
                                              8 COMMON     3     2      1
                _lcd_set_dd_ram_addr
 ---------------------------------------------------------------------------------
 (2) _read_credito                                         2     1      1    5333
                                              7 BANK0      2     1      1
                  _coges_money_value
                _coges_val_to_string
      _m24c02_sequential_random_read
 ---------------------------------------------------------------------------------
 (3) _m24c02_sequential_random_read                        5     1      4    3257
                                             12 COMMON     1     1      0
                                              3 BANK0      4     0      4
     _m24c02_sequential_current_read
          _m24c02_set_random_address
 ---------------------------------------------------------------------------------
 (4) _m24c02_set_random_address                            4     2      2    1184
                                              7 COMMON     4     2      2
                   _i2c_read_bit_ack
                     _i2c_send_start
                      _i2c_send_stop
                   _m24c02_send_byte
             _m24c02_send_device_sel
 ---------------------------------------------------------------------------------
 (5) _m24c02_send_byte                                     2     2      0     288
                                              4 COMMON     2     2      0
                      _i2c_send_bit1
 ---------------------------------------------------------------------------------
 (4) _m24c02_sequential_current_read                       8     5      3    1415
                                              7 COMMON     5     2      3
                                              0 BANK0      3     3      0
                   _i2c_read_bit_ack
                     _i2c_send_start
                      _i2c_send_stop
                   _m24c02_read_byte
             _m24c02_send_device_sel
 ---------------------------------------------------------------------------------
 (5) _m24c02_send_device_sel                               3     2      1     460
                                              4 COMMON     3     2      1
                      _i2c_send_bit0
                      _i2c_send_bit1
 ---------------------------------------------------------------------------------
 (6) _i2c_send_bit1                                        4     3      1     197
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _m24c02_read_byte                                     3     2      1     362
                                              2 COMMON     3     2      1
                   _i2c_read_bit_ack
                      _i2c_send_bit0
 ---------------------------------------------------------------------------------
 (6) _i2c_send_bit0                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_read_bit_ack                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_send_stop                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _i2c_send_start                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _coges_val_to_string                                  9     5      4    1390
                                             10 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___ltdiv
                            ___ltmod
 ---------------------------------------------------------------------------------
 (4) ___ltmod                                              7     1      6     287
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) ___ltdiv                                             10     4      6     418
                                              0 COMMON    10     4      6
 ---------------------------------------------------------------------------------
 (3) _coges_money_value                                   12    11      1     372
                                              0 COMMON    12    11      1
 ---------------------------------------------------------------------------------
 (2) _print_err                                            3     3      0    2033
                                             10 COMMON     3     3      0
                        _lcd_print_s
 ---------------------------------------------------------------------------------
 (2) _print_credito                                        1     1      0    4805
                                             10 COMMON     1     1      0
                  _lcd_clear_display
                      _lcd_goto_home
                        _lcd_print_s
 ---------------------------------------------------------------------------------
 (3) _lcd_print_s                                          2     0      2    2033
                                              8 COMMON     2     0      2
                             ___bmul (ARG)
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0    1348
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_goto_home                                        0     0      0    1348
                _lcd_set_dd_ram_addr
 ---------------------------------------------------------------------------------
 (4) _lcd_set_dd_ram_addr                                  1     1      0    1348
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear_display                                    0     0      0    1326
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _pic_eeprom_write                                     2     1      1     108
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _lcd_display_onoff_control                            5     3      2    1776
                                              7 COMMON     5     3      2
                        _lcd_command
 ---------------------------------------------------------------------------------
 (4) _lcd_command                                          6     4      2    1326
                                              1 COMMON     6     4      2
                         _lcd_pin_lo
                          _lcd_pulse
 ---------------------------------------------------------------------------------
 (5) _lcd_pulse                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _lcd_pin_lo                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iopins_set_backlight                                 1     1      0      44
                                              0 COMMON     1     1      0
                 _iopins_SendSignals
 ---------------------------------------------------------------------------------
 (2) _iopins_SendSignals                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _exec_function
     _iopins_set_backlight
       _iopins_SendSignals
     _lcd_clear_display
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_display_onoff_control
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _pic_eeprom_write
     _print_credito
       _lcd_clear_display
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
       _lcd_goto_home
         _lcd_set_dd_ram_addr
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_print_s
         ___bmul (ARG)
         _lcd_write_data (ARG)
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
     _print_err
       _lcd_print_s
         ___bmul (ARG)
         _lcd_write_data (ARG)
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
     _read_credito
       _coges_money_value
       _coges_val_to_string
         ___ltdiv
         ___ltmod
       _m24c02_sequential_random_read
         _m24c02_sequential_current_read
           _i2c_read_bit_ack
           _i2c_send_start
           _i2c_send_stop
           _m24c02_read_byte
             _i2c_read_bit_ack
             _i2c_send_bit0
           _m24c02_send_device_sel
             _i2c_send_bit0
             _i2c_send_bit1
         _m24c02_set_random_address
           _i2c_read_bit_ack
           _i2c_send_start
           _i2c_send_stop
           _m24c02_send_byte
             _i2c_send_bit1
           _m24c02_send_device_sel
             _i2c_send_bit0
             _i2c_send_bit1
     _sel_credito
       _coges_val_to_string
         ___ltdiv
         ___ltmod
       _lcd_goto_xy
         _lcd_set_dd_ram_addr
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_print_s
         ___bmul (ARG)
         _lcd_write_data (ARG)
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _print_btns
         _lcd_goto_xy
           _lcd_set_dd_ram_addr
             _lcd_command
               _lcd_pin_lo
               _lcd_pulse
         _print_btn
           _lcd_write_data
             _lcd_command
               _lcd_pin_lo
               _lcd_pulse
       _wait_button
     _write_credito
       _coges_money_code
         _byte_code
       _coges_val_to_string
         ___ltdiv
         ___ltmod
       _lcd_clear_display
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
       _lcd_goto_home
         _lcd_set_dd_ram_addr
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_goto_xy
         _lcd_set_dd_ram_addr
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_print_s
         ___bmul (ARG)
         _lcd_write_data (ARG)
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _m24c02_multibyte_write
         _i2c_read_bit_ack
         _i2c_send_stop
         _m24c02_send_byte
           _i2c_send_bit1
         _m24c02_set_random_address
           _i2c_read_bit_ack
           _i2c_send_start
           _i2c_send_stop
           _m24c02_send_byte
             _i2c_send_bit1
           _m24c02_send_device_sel
             _i2c_send_bit0
             _i2c_send_bit1
   _i2c_Detatch
   _iopins_init
     _iopins_SendSignals
   _iopins_set_backlight
     _iopins_SendSignals
   _lcd_init
     _lcd_clear_display
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_display_onoff_control
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_entry_mode_set
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_function_set
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_function_set_4bit
       _lcd_pin_lo
       _lcd_pulse
     _lcd_function_set_8bit
       _lcd_pin_lo
       _lcd_pulse
     _lcd_pin_lo
     _lcd_set_dd_ram_addr
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
   _lcd_set_char
     _lcd_set_cg_ram_addr
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _lcd_write_data
       _lcd_command
         _lcd_pin_lo
         _lcd_pulse
     _pic_eeprom_read
   _pic_eeprom_read
   _print_btns
     _lcd_goto_xy
       _lcd_set_dd_ram_addr
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
     _print_btn
       _lcd_write_data
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
   _print_display
     _lcd_goto_home
       _lcd_set_dd_ram_addr
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
     _print_menu
       ___bmul
       _lcd_goto_xy
         _lcd_set_dd_ram_addr
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_print_s
         ___bmul (ARG)
         _lcd_write_data (ARG)
           _lcd_command
             _lcd_pin_lo
             _lcd_pulse
       _lcd_write_data
         _lcd_command
           _lcd_pin_lo
           _lcd_pulse
   _wait_button

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     17      25       3       46.3%
BANK1               4E      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
ABS                  0      0      33       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITBANK1            4E      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      33      10        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 14 16:14:21 2015

                   ?_lcd_set_cg_ram_addr 0070                                        pc 0002  
               print_display@v_menu_item 007D                             ?_lcd_print_s 0078  
                          ?_lcd_set_char 0070                           ___bmul@product 0071  
                            __CFG_CP$OFF 0000                                       PL2 0548  
                                     PL4 0330                                       PL6 07EB  
                                     PL8 03A8                                       fsr 0004  
                          ??_i2c_Detatch 0070                                      PL10 05D9  
                                    PL20 03E2                                      PL12 05E4  
                                    PL22 0487                                      PL14 0339  
                                    PL16 0311                                      PL18 03B4  
                                    l106 06FC                                      l234 0329  
                                    l470 06EB                             __CFG_CPD$OFF 0000  
                                    u654 0375                                      u655 0373  
                                    u735 0113                                      u674 066C  
                                    u675 066A                                      u835 0439  
                                    u785 047A                                      u945 03C5  
                                    u875 0401                                      fsr0 0004  
                                    indf 0000                      write_credito@v_addr 002C  
                                   S2790 008E                      _coges_val_to_string 0694  
                           __CFG_LVP$OFF 0000    m24c02_sequential_random_read@v_device 007C  
  m24c02_sequential_random_read@v_buffer 0024                                     l2100 00D8  
                                   l2022 0274                                     l2202 044C  
                                   l2050 016A                                     l2214 03F7  
                                   l2222 0413                                     l2118 02A7  
                                   l2232 014B                                     l2080 01CC  
                                   l2144 046B                                     l2242 069B  
                                   l2154 046D                                     l2066 0105  
                                   l2330 0365                                     l2092 01DD  
                                   l2148 046C                                     l2308 03D7  
                                   l2190 042B                                     l2238 0694  
                                   l2174 0612                                     l2334 0366  
                                   l2336 034E                                     l2432 0593  
                                   l2600 070E                                     l2266 06C7  
                                   l2258 06BD                                     l2434 056D  
                                   l2602 071B                                     l2364 05AC  
                                   l2380 02B4                                     l2436 0597  
                                   l2604 071D                                     l2532 04F2  
                                   l2524 04CD                                     l2358 05AB  
                                   l2382 02C5                                     l2294 03C1  
                                   l2614 0732                                     l2472 07D4  
                                   l2456 0776                                     l2632 0753  
                                   l2536 04FF                                     l2490 07B0  
                                   l2634 0761                                     l2394 012C  
                                   l2484 0794                                     l1934 0384  
                                   l2478 0779                                     l2742 0527  
                                   l2750 052E                                     l2734 051E  
                                   l2496 07B1                                     l2592 0702  
                                   l2744 0529                                     l2752 053E  
                                   l1882 0187                                     l2594 0705  
                                   l2690 025D                                     l2746 052B  
                                   l2684 025C                                     l1986 0666  
                      m24c02_read_byte@x 0073                                     STR_1 0087  
                                   STR_2 0076                                     STR_3 007F  
                                   STR_4 006C                                     STR_5 005E  
                                   STR_6 005E                                     STR_7 004D  
                                   u1005 05AE                                     u1014 05C1  
                                   u1015 05BF                                     u1125 0782  
                                   u1135 079D                                     u1307 04AB  
                                   u1317 04C6                                     u1407 02BF  
                                   u1327 01E3                                     u1175 04EE  
                                   u1417 02C9                                     u1337 01F0  
                                   u1507 0280                                     u1427 036C  
                                   u1347 0396                                     u1517 0288  
                                   u1437 0386                                     u1357 03A3  
                                   u1277 0491                                     u1607 01AF  
                                   u1527 0290                                     u1447 038E  
                                   u1367 017F                                     u1287 049B  
                                   u1617 0199                                     u1537 01FA  
                                   u1457 031E                                     u1377 0714  
                                   u1297 04A4                                     u1547 0202  
                                   u1467 032C                                     u1387 0743  
                                   u1557 0208                                     u1477 02D8  
                                   u1397 058B                                     u1567 0143  
                                   u1487 02E0                                     u1577 0661  
                                   u1497 02F2                                     u1587 068B  
                                   u1597 01A2                 __size_of_pic_eeprom_read 0007  
                 __end_of_lcd_write_data 00BD                                     _main 050B  
                                   btemp 007E                                     ltemp 007E  
                  ??_lcd_set_dd_ram_addr 0077                   coges_money_value@v_ind 007A  
                                   start 0000                             print_btn@btn 0079  
       ??_m24c02_sequential_current_read 007A          ?_m24c02_sequential_current_read 0077  
                                   ttemp 007E                   coges_money_value@v_out 0070  
                                   wtemp 007E              ??_lcd_display_onoff_control 0079  
                      ___bmul@multiplier 0072                            __CFG_MCLRE$ON 0000  
                  ??_lcd_set_cg_ram_addr 0077                            _i2c_send_bit0 031A  
                          _i2c_send_bit1 0368                     ?_coges_val_to_string 007A  
                 __size_of_exec_function 0071                           ??_lcd_set_char 0078  
                          _i2c_send_stop 0274           ?_m24c02_sequential_random_read 0023  
                          lcd_command@RS 0071                            lcd_command@RW 0074  
            __size_of_lcd_entry_mode_set 0009       m24c02_sequential_random_read@p_err 0026  
                    lcd_entry_mode_set@S 0077                                    ?_main 0031  
                                  _EEADR 009B                            __CFG_WDTE$OFF 0000  
                       lcd_goto_xy@v_col 007A                          __end_of___ltdiv 0453  
                        __end_of___ltmod 041A                         print_menu@v_item 007B  
                       lcd_goto_xy@v_row 0078                                    _PORTA 0005  
                                  _PORTB 0006                                    _TRISA 0085  
                                  _TRISB 0086                  ?_m24c02_multibyte_write 0020  
                    __end_of_i2c_Detatch 00AA              ??_m24c02_set_random_address 0079  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                      m24c02_send_byte@i 0075                             _SR_PORTAbits 00EE  
                           _SR_PORTBbits 00EF                          ??_print_credito 007A  
                coges_money_value@v_code 0079                          ??_print_display 007D  
                        ?_lcd_write_data 0070                                    ttemp0 007E  
                                  ttemp1 0081                  coges_money_value@v_byte 007B  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
               __end_of_pic_eeprom_write 00F6                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                        ??_lcd_goto_home 0078      m24c02_sequential_current_read@p_err 0079  
    m24c02_sequential_current_read@v_ack 0021               coges_money_code@v_checksum 0020  
    m24c02_sequential_current_read@v_ind 0022            __size_of_iopins_set_backlight 000E  
                           ?_iopins_init 0070                           ?_i2c_send_bit0 0070  
                         ?_i2c_send_bit1 0070                    ??_coges_val_to_string 007E  
                        __initialization 07F9                           ?_i2c_send_stop 0070  
                           __end_of_main 0548                           _i2c_send_start 01F5  
                                 ??_main 007E           __end_of_m24c02_multibyte_write 0368  
                           ?_sel_credito 0025                _lcd_display_onoff_control 01B3  
                   lcd_entry_mode_set@ID 0078                            _exec_function 06FA  
                                 _EEDATA 009A                                   _EECON2 009D  
                    print_btns@btn_press 007D                        lcd_function_set@F 0078  
                      lcd_function_set@N 0077           m24c02_multibyte_write@v_device 0024  
         m24c02_multibyte_write@v_buffer 0021                      lcd_command@v_nibble 0075  
        m24c02_set_random_address@v_addr 0077                           __CFG_PWRTE$OFF 0000  
                m24c02_send_device_sel@i 0076                        ??_pic_eeprom_read 0070  
                          ?_read_credito 0027                _m24c02_set_random_address 0294  
                       __end_of_lcd_init 04CA                     __size_of_lcd_command 0053  
                 __end_of_i2c_send_start 020C                                   ___bmul 012A  
                  i2c_read_bit_ack@v_out 0071                __size_of_i2c_read_bit_ack 0023  
          coges_val_to_string@v_cred_hex 007A                     __size_of_lcd_goto_xy 000D  
                              ??___ltdiv 0076                                ??___ltmod 0076  
                      _lcd_clear_display 00B2                                   _v_menu 0011  
                   __size_of_lcd_print_s 0014                              _i2c_Detatch 00A7  
                           ?_wait_button 0070                       ?_lcd_clear_display 0070  
              __size_of_m24c02_read_byte 0016                           ?_exec_function 0070  
                ??_lcd_function_set_4bit 0071                  ??_lcd_function_set_8bit 0071  
                    ??_lcd_clear_display 0077                   write_credito@v_credito 0027  
                   __end_of_lcd_set_char 0274     m24c02_sequential_current_read@v_byte 0078  
              __size_of_m24c02_send_byte 000D                        ?_coges_money_code 0078  
                __end_of__initialization 07FE                    wait_button@v_pulsanti 0072  
                        ??_i2c_send_bit0 0070                          ??_i2c_send_bit1 0071  
                     ??_coges_money_code 007D                           ??_read_credito 007E  
                        ??_i2c_send_stop 0070                      ___bmul@multiplicand 0070  
              __size_of_lcd_function_set 0018                           __pcstackCOMMON 0070  
                        ?_i2c_send_start 0070                __end_of_lcd_clear_display 00B7  
                             __end_ofPL2 0550                               __end_ofPL4 0339  
                             __end_ofPL6 07F9                               __end_ofPL8 03B4  
             __end_of_iopins_SendSignals 00AE                   __size_of_write_credito 004F  
         m24c02_set_random_address@p_err 0078           m24c02_set_random_address@v_ack 007A  
            lcd_set_dd_ram_addr@ram_addr 0077                       __size_of_lcd_pulse 0016  
            m24c02_read_byte@v_last_byte 0072                               __pbssBANK0 0037  
                     __size_of_byte_code 0052                          lcd_command@data 0072  
         m24c02_send_device_sel@v_device 0075                               __pmaintext 050B  
                   __size_of_iopins_init 0014                                  ?___bmul 0070  
                     lcd_function_set@DL 007B                          ??_exec_function 002D  
                     __size_of_print_btn 0008                       __size_of_print_err 0013  
                                _C_PORTB 0006                               _lcd_pin_lo 0187  
                       ??_lcd_write_data 0077                     __size_of_sel_credito 0080  
                              ?_lcd_init 0070              __end_of_lcd_set_dd_ram_addr 00C4  
                             __stringtab 0001                       lcd_write_data@data 0077  
     __size_of_lcd_display_onoff_control 0016              __end_of_lcd_set_cg_ram_addr 00CB  
                          _write_credito 0550                        ?_pic_eeprom_write 0070  
           m24c02_multibyte_write@v_addr 0020                       ??_pic_eeprom_write 0071  
           m24c02_multibyte_write@v_byte 0022               __size_of_lcd_clear_display 0005  
                        __size_of___bmul 000E                        __end_of_lcd_pulse 01B3  
                       _i2c_read_bit_ack 02D4               __end_of_lcd_entry_mode_set 00EB  
                                ___ltdiv 041A                                  ___ltmod 03E9  
                              _CMCONbits 001F                                  __ptext1 00AE  
                                __ptext2 04CA                                  __ptext3 012A  
                                __ptext4 0258                                  __ptext5 00CB  
                                __ptext6 00C4                                  __ptext7 048C  
                                __ptext8 01DF                                  __ptext9 0392  
           __end_of_iopins_set_backlight 012A       __size_of_m24c02_set_random_address 0020  
                      __end_of_byte_code 0641                 ??_m24c02_send_device_sel 0075  
                  __size_of_lcd_set_char 001C                     __size_of_wait_button 0020  
                   __end_of_read_credito 0311                         _m24c02_read_byte 01C9  
                    sel_credito@v_change 002A                                  clrloop0 00DB  
                        _pic_eeprom_read 00CB                               ??_lcd_init 007C  
                    sel_credito@v_buffer 0025                     end_of_initialization 07FE  
                       _m24c02_send_byte 0102                           main@v_pulsante 0035  
                         ?_write_credito 0027              __end_of_coges_val_to_string 06FA  
      __end_of_lcd_display_onoff_control 01C9                    __end_of_print_credito 0102  
                  __end_of_print_display 00B2                    __end_of_lcd_goto_home 00A7  
                       ___ltdiv@dividend 0073                         _lcd_function_set 020C  
                      __end_of_print_btn 00DA                        __end_of_print_err 014B  
                           _lcd_set_char 0258                             ?_i2c_Detatch 0070  
                             _print_btns 0224                               _print_menu 04CA  
                   read_credito@v_buffer 0027                        _coges_money_value 059F  
                            ?_lcd_pin_lo 0070                         ___ltdiv@quotient 0076  
                              _VRCONbits 009F                       ?_coges_money_value 0070  
         __size_of_lcd_function_set_4bit 0016           __size_of_lcd_function_set_8bit 0016  
                        print_btns@btn_0 007C                          print_btns@btn_1 007B  
                        print_btns@btn_2 0020            __end_of_lcd_function_set_4bit 03A8  
          __end_of_lcd_function_set_8bit 01F5                      ??_coges_money_value 0071  
                       ??_i2c_send_start 0070                            ??_lcd_command 0073  
                         byte_code@v_ind 0077                           byte_code@v_out 0071  
                          ??_lcd_goto_xy 0079                            ??_lcd_print_s 007A  
                     lcd_print_s@message 0078                           __end_of___bmul 0138  
                        print_menu@v_ind 007C                 coges_val_to_string@v_ind 0020  
               coges_val_to_string@v_out 007D                __size_of_coges_money_code 0026  
             lcd_display_onoff_control@B 0078               lcd_display_onoff_control@C 0077  
             lcd_display_onoff_control@D 007B                __end_of_coges_money_value 05D9  
                         __end_of_v_menu 004D                    pic_eeprom_read@v_addr 0070  
                __end_of_pic_eeprom_read 00D2          __size_of_m24c02_send_device_sel 0014  
                            __end_ofPL10 05E4                              __end_ofPL20 03E9  
                            __end_ofPL12 05EF                              __end_ofPL22 048C  
                            __end_ofPL14 0340                              __end_ofPL16 031A  
                            __end_ofPL18 03BC                      start_initialization 07F9  
 m24c02_sequential_current_read@v_device 0020   m24c02_sequential_current_read@v_buffer 0077  
                        ??_write_credito 002A                       _iopins_SendSignals 00AA  
                   _iopins_set_backlight 011C                      ?_iopins_SendSignals 0070  
                  __end_of_i2c_send_bit0 0330                    __end_of_i2c_send_bit1 0392  
                     lcd_set_char@v_char 0079                    __end_of_i2c_send_stop 0294  
                               ??___bmul 0071                      __size_of_lcd_pin_lo 0016  
               ??_m24c02_multibyte_write 007B                      __end_of_lcd_command 0694  
                    __end_of_lcd_goto_xy 011C                    __size_of_read_credito 001A  
                            ?_print_btns 007B                      __end_of_lcd_print_s 015F  
                            ?_print_menu 0070                     ??_iopins_SendSignals 0070  
                              ___latbits 0000                iopins_set_backlight@v_val 0070  
                          _p_24c02_error 0044                            __pcstackBANK0 0020  
            lcd_set_cg_ram_addr@ram_addr 0077                 __end_of_i2c_read_bit_ack 02F7  
                       lcd_command@v_ind 0076                        __size_of_lcd_init 003E  
                  ?_iopins_set_backlight 0070                            ??_iopins_init 0070  
                 _m24c02_send_device_sel 015F                 __end_of_m24c02_read_byte 01DF  
                           _read_credito 02F7                   pic_eeprom_write@v_addr 0071  
                 pic_eeprom_write@v_data 0070                                 ?___ltdiv 0070  
                               ?___ltmod 0070                 __end_of_m24c02_send_byte 010F  
                              __pstrings 0001                                __pswtext1 008E  
                              _lcd_pulse 019D                __size_of_pic_eeprom_write 000B  
                 m24c02_send_byte@v_data 0074               __size_of_coges_money_value 003A  
                          ??_sel_credito 0026                         ?_pic_eeprom_read 0070  
                  m24c02_read_byte@v_out 0074                     __size_of_i2c_Detatch 0003  
            m24c02_multibyte_write@p_err 0023              m24c02_multibyte_write@v_ack 0025  
               __end_of_lcd_function_set 0224                    __end_of_exec_function 076B  
            m24c02_multibyte_write@v_ind 0026                       _lcd_entry_mode_set 00E2  
                              _byte_code 05EF                         ___ltmod@dividend 0073  
                    ?_lcd_entry_mode_set 0077                     coges_val_to_string@c 0024  
                   coges_val_to_string@v 0021                                _v_credito 0041  
                              clear_ram0 00DA                              _lcd_command 0641  
                    __size_of_print_btns 0019             __size_of_lcd_set_dd_ram_addr 0007  
                    __size_of_print_menu 0041                          ___ltdiv@divisor 0070  
                            _lcd_goto_xy 010F                          ___ltdiv@counter 0079  
           __size_of_lcd_set_cg_ram_addr 0007                              _lcd_print_s 014B  
                    __end_of_iopins_init 0187          __size_of_m24c02_multibyte_write 0028  
                              _print_btn 00D2                                _print_err 0138  
                       _coges_money_code 03BC                     ??_lcd_entry_mode_set 0078  
             m24c02_send_device_sel@v_Rw 0074                            ??_wait_button 0070  
                             ?_lcd_pulse 0070                              __stringbase 0010  
                               _SR_PORTA 00EE                                 _SR_PORTB 00EF  
    m24c02_sequential_random_read@v_addr 0023      m24c02_sequential_random_read@v_byte 0025  
                          byte_code@v_cr 0070                            byte_code@v_cs 0076  
 __end_of_m24c02_sequential_current_read 0487  __size_of_m24c02_sequential_current_read 0034  
         _m24c02_sequential_current_read 0453                             ??_lcd_pin_lo 0070  
                             ?_byte_code 0070                   coges_money_code@v_addr 007B  
                 coges_money_code@v_cred 0078                      __end_of_sel_credito 07EB  
        ??_m24c02_sequential_random_read 007C                   ??_iopins_set_backlight 0070  
                             _EECON1bits 009C                  __size_of_lcd_write_data 0006  
             ?_lcd_display_onoff_control 0077                        lcd_set_char@v_ind 007A  
                  sel_credito@v_pulsante 0029             __size_of_coges_val_to_string 0066  
                     __end_of_lcd_pin_lo 019D                               ?_print_btn 0078  
                             ?_print_err 0070                         __size_of___ltdiv 0039  
                       __size_of___ltmod 0031                       __end_of__stringtab 0011  
                     print_btn@btn_press 0078                   __size_of_print_credito 000C  
                 __size_of_print_display 0004                   __size_of_lcd_goto_home 0002  
             ?_m24c02_set_random_address 0077                              _C_PORTBbits 0006  
                    __end_of_wait_button 02D4                                 __ptext10 020C  
                               __ptext11 00E2                                 __ptext20 02B4  
                               __ptext12 0173                                 __ptext21 0224  
                               __ptext13 00A7                                 __ptext30 0368  
                               __ptext22 00D2                                 __ptext14 06FA  
                               __ptext31 01C9                                 __ptext23 010F  
                               __ptext15 0550                                 __ptext40 0138  
                               __ptext32 031A                                 __ptext24 02F7  
                               __ptext16 0340                                 __ptext41 00F6  
                               __ptext33 02D4                                 __ptext25 023D  
                               __ptext17 03BC                                 __ptext50 019D  
                               __ptext42 014B                                 __ptext34 0274  
                               __ptext26 0294                                 __ptext18 05EF  
                               __ptext51 0187                                 __ptext43 00B7  
                               __ptext35 01F5                                 __ptext27 0102  
                               __ptext19 076B                                 __ptext52 011C  
                               __ptext44 00A5                                 __ptext36 0694  
                               __ptext28 0453                                 __ptext53 00AA  
                               __ptext45 00BD                                 __ptext37 03E9  
                               __ptext29 015F                                 __ptext46 00B2  
                               __ptext38 041A                                 __ptext47 00EB  
                               __ptext39 059F                                 __ptext48 01B3  
                               __ptext49 0641                   _m24c02_multibyte_write 0340  
                               _lcd_init 048C                              _C_TRISAbits 0085  
                            _C_TRISBbits 0086                    _lcd_function_set_4bit 0392  
                  _lcd_function_set_8bit 01DF                            __size_of_main 003D  
                        main@v_menu_item 0036                          ___ltmod@divisor 0070  
                            _iopins_init 0173                          ___ltmod@counter 0076  
                               _v_buffer 0037                                 main@argc 0031  
                               main@argv 0033                    coges_money_code@v_24b 0021  
                   sel_credito@v_credito 002B                              ??_lcd_pulse 0070  
                       _pic_eeprom_write 00EB                    coges_money_code@v_ind 0024  
                  coges_money_code@v_out 007C                             ??_print_btns 007E  
                           ??_print_menu 0020                               _INTCONbits 000B  
                            _sel_credito 076B                              ??_byte_code 0072  
      __end_of_m24c02_set_random_address 02B4                        ?_i2c_read_bit_ack 0070  
                ?_m24c02_send_device_sel 0074                    __end_of_write_credito 059F  
                     ??_i2c_read_bit_ack 0070    __end_of_m24c02_sequential_random_read 0258  
 __size_of_m24c02_sequential_random_read 001B            _m24c02_sequential_random_read 023D  
                          _print_credito 00F6                            _print_display 00AE  
                              stringcode 000B                            _lcd_goto_home 00A5  
                     __end_of_print_btns 023D                       __end_of_print_menu 050B  
                      ?_m24c02_read_byte 0072                      exec_function@v_item 0030  
                     ??_m24c02_read_byte 0073                              ??_print_btn 0079  
                            ??_print_err 007A                    print_credito@v_buffer 007A  
                __size_of_i2c_send_start 0017        m24c02_set_random_address@v_device 0079  
                      ?_m24c02_send_byte 0070                              _wait_button 02B4  
                     ??_m24c02_send_byte 0074                      _lcd_set_dd_ram_addr 00BD  
            __size_of_iopins_SendSignals 0004                                 stringdir 000B  
                               stringtab 0001                        ?_lcd_function_set 0077  
                 __size_of_i2c_send_bit0 0016                   __size_of_i2c_send_bit1 002A  
                    _lcd_set_cg_ram_addr 00C4                   __size_of_i2c_send_stop 0020  
         __end_of_m24c02_send_device_sel 0173                       ??_lcd_function_set 0079  
                     __CFG_FOSC$INTOSCIO 0000                   ?_lcd_function_set_4bit 0070  
               __end_of_coges_money_code 03E2                   ?_lcd_function_set_8bit 0070  
                    i2c_send_bit1@v_byte 0072                    read_credito@v_credito 0028  
                     i2c_send_bit0@v_bit 0071                           ?_print_credito 0070  
                     i2c_send_bit1@v_bit 0073                           ?_print_display 0070  
                         _lcd_write_data 00B7                       i2c_send_bit1@v_pos 0070  
                           ?_lcd_command 0071                           ?_lcd_goto_home 0070  
                   ?_lcd_set_dd_ram_addr 0070                             ?_lcd_goto_xy 0078  
